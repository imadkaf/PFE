<?php
use Symfony\Component\DependencyInjection\ContainerInterface;
use Symfony\Component\DependencyInjection\Container;
use Symfony\Component\DependencyInjection\Exception\InactiveScopeException;
use Symfony\Component\DependencyInjection\Exception\InvalidArgumentException;
use Symfony\Component\DependencyInjection\Exception\LogicException;
use Symfony\Component\DependencyInjection\Exception\RuntimeException;
use Symfony\Component\DependencyInjection\ParameterBag\FrozenParameterBag;
class ezpublishProdProjectContainer extends Container
{
    private $parameters;
    public function __construct()
    {
        $this->parameters = $this->getDefaultParameters();
        $this->services =
        $this->scopedServices =
        $this->scopeStacks = array();
        $this->set('service_container', $this);
        $this->scopes = array('request' => 'container');
        $this->scopeChildren = array('request' => array());
        $this->methodMap = array(
            'annotation_reader' => 'getAnnotationReaderService',
            'assetic.asset_factory' => 'getAssetic_AssetFactoryService',
            'assetic.asset_manager' => 'getAssetic_AssetManagerService',
            'assetic.eztpl_formula_loader' => 'getAssetic_EztplFormulaLoaderService',
            'assetic.filter.cssrewrite' => 'getAssetic_Filter_CssrewriteService',
            'assetic.filter_manager' => 'getAssetic_FilterManagerService',
            'cache_clearer' => 'getCacheClearerService',
            'cache_warmer' => 'getCacheWarmerService',
            'controller_name_converter' => 'getControllerNameConverterService',
            'controller_resolver' => 'getControllerResolverService',
            'data_collector.stash' => 'getDataCollector_StashService',
            'debug.emergency_logger_listener' => 'getDebug_EmergencyLoggerListenerService',
            'doctrine' => 'getDoctrineService',
            'doctrine.dbal.connection_factory' => 'getDoctrine_Dbal_ConnectionFactoryService',
            'doctrine.dbal.eng_repository_connection_connection' => 'getDoctrine_Dbal_EngRepositoryConnectionConnectionService',
            'esi' => 'getEsiService',
            'esi_listener' => 'getEsiListenerService',
            'event_dispatcher' => 'getEventDispatcherService',
            'ez_comments.content_matcher_factory' => 'getEzComments_ContentMatcherFactoryService',
            'ez_comments.controller.comments_renderer' => 'getEzComments_Controller_CommentsRendererService',
            'ez_comments.provider.disqus' => 'getEzComments_Provider_DisqusService',
            'ez_comments.provider.facebook' => 'getEzComments_Provider_FacebookService',
            'ez_comments.provider.factory' => 'getEzComments_Provider_FactoryService',
            'ez_comments.provider.null' => 'getEzComments_Provider_NullService',
            'ez_comments.renderer' => 'getEzComments_RendererService',
            'ez_comments.twig.extension' => 'getEzComments_Twig_ExtensionService',
            'ezdemo.criteria_helper' => 'getEzdemo_CriteriaHelperService',
            'ezdemo.email_helper' => 'getEzdemo_EmailHelperService',
            'ezdemo.form.type.feedback' => 'getEzdemo_Form_Type_FeedbackService',
            'ezdemo.form.type.simple_search' => 'getEzdemo_Form_Type_SimpleSearchService',
            'ezdemo.menu.builder' => 'getEzdemo_Menu_BuilderService',
            'ezdemo.menu.top' => 'getEzdemo_Menu_TopService',
            'ezdemo.menu_helper' => 'getEzdemo_MenuHelperService',
            'ezdemo.place_helper' => 'getEzdemo_PlaceHelperService',
            'ezdemo.search_helper' => 'getEzdemo_SearchHelperService',
            'ezpublish.api.inner_repository' => 'getEzpublish_Api_InnerRepositoryService',
            'ezpublish.api.repository.factory' => 'getEzpublish_Api_Repository_FactoryService',
            'ezpublish.api.repository.lazy' => 'getEzpublish_Api_Repository_LazyService',
            'ezpublish.api.repository.lazy_factory' => 'getEzpublish_Api_Repository_LazyFactoryService',
            'ezpublish.api.role.limitation_type.content_type' => 'getEzpublish_Api_Role_LimitationType_ContentTypeService',
            'ezpublish.api.role.limitation_type.ezcomments.anti_spam' => 'getEzpublish_Api_Role_LimitationType_Ezcomments_AntiSpamService',
            'ezpublish.api.role.limitation_type.ezcomments.comment_creator' => 'getEzpublish_Api_Role_LimitationType_Ezcomments_CommentCreatorService',
            'ezpublish.api.role.limitation_type.ezcomments.content_section' => 'getEzpublish_Api_Role_LimitationType_Ezcomments_ContentSectionService',
            'ezpublish.api.role.limitation_type.function_list' => 'getEzpublish_Api_Role_LimitationType_FunctionListService',
            'ezpublish.api.role.limitation_type.language' => 'getEzpublish_Api_Role_LimitationType_LanguageService',
            'ezpublish.api.role.limitation_type.location' => 'getEzpublish_Api_Role_LimitationType_LocationService',
            'ezpublish.api.role.limitation_type.new_section' => 'getEzpublish_Api_Role_LimitationType_NewSectionService',
            'ezpublish.api.role.limitation_type.new_state' => 'getEzpublish_Api_Role_LimitationType_NewStateService',
            'ezpublish.api.role.limitation_type.owner' => 'getEzpublish_Api_Role_LimitationType_OwnerService',
            'ezpublish.api.role.limitation_type.parent_content_type' => 'getEzpublish_Api_Role_LimitationType_ParentContentTypeService',
            'ezpublish.api.role.limitation_type.parent_depth' => 'getEzpublish_Api_Role_LimitationType_ParentDepthService',
            'ezpublish.api.role.limitation_type.parent_group' => 'getEzpublish_Api_Role_LimitationType_ParentGroupService',
            'ezpublish.api.role.limitation_type.parent_owner' => 'getEzpublish_Api_Role_LimitationType_ParentOwnerService',
            'ezpublish.api.role.limitation_type.section' => 'getEzpublish_Api_Role_LimitationType_SectionService',
            'ezpublish.api.role.limitation_type.siteaccess' => 'getEzpublish_Api_Role_LimitationType_SiteaccessService',
            'ezpublish.api.role.limitation_type.state' => 'getEzpublish_Api_Role_LimitationType_StateService',
            'ezpublish.api.role.limitation_type.status' => 'getEzpublish_Api_Role_LimitationType_StatusService',
            'ezpublish.api.role.limitation_type.subtree' => 'getEzpublish_Api_Role_LimitationType_SubtreeService',
            'ezpublish.api.role.limitation_type.user_group' => 'getEzpublish_Api_Role_LimitationType_UserGroupService',
            'ezpublish.api.service.content' => 'getEzpublish_Api_Service_ContentService',
            'ezpublish.api.service.content_type' => 'getEzpublish_Api_Service_ContentTypeService',
            'ezpublish.api.service.field_type' => 'getEzpublish_Api_Service_FieldTypeService',
            'ezpublish.api.service.location' => 'getEzpublish_Api_Service_LocationService',
            'ezpublish.api.service.object_state' => 'getEzpublish_Api_Service_ObjectStateService',
            'ezpublish.api.service.role' => 'getEzpublish_Api_Service_RoleService',
            'ezpublish.api.service.search' => 'getEzpublish_Api_Service_SearchService',
            'ezpublish.api.service.section' => 'getEzpublish_Api_Service_SectionService',
            'ezpublish.api.service.trash' => 'getEzpublish_Api_Service_TrashService',
            'ezpublish.api.service.url_alias' => 'getEzpublish_Api_Service_UrlAliasService',
            'ezpublish.api.service.url_wildcard' => 'getEzpublish_Api_Service_UrlWildcardService',
            'ezpublish.api.service.user' => 'getEzpublish_Api_Service_UserService',
            'ezpublish.api.storage_engine' => 'getEzpublish_Api_StorageEngineService',
            'ezpublish.api.storage_engine.factory' => 'getEzpublish_Api_StorageEngine_FactoryService',
            'ezpublish.api.storage_engine.legacy.dbhandler' => 'getEzpublish_Api_StorageEngine_Legacy_DbhandlerService',
            'ezpublish.api.storage_engine.pcre_compiler' => 'getEzpublish_Api_StorageEngine_PcreCompilerService',
            'ezpublish.api.storage_engine.transformation_converter' => 'getEzpublish_Api_StorageEngine_TransformationConverterService',
            'ezpublish.api.storage_engine.transformation_parser' => 'getEzpublish_Api_StorageEngine_TransformationParserService',
            'ezpublish.api.storage_engine.transformation_processor' => 'getEzpublish_Api_StorageEngine_TransformationProcessorService',
            'ezpublish.api.storage_repository_provider' => 'getEzpublish_Api_StorageRepositoryProviderService',
            'ezpublish.block_view.matcher_factory' => 'getEzpublish_BlockView_MatcherFactoryService',
            'ezpublish.block_view_provider.configured' => 'getEzpublish_BlockViewProvider_ConfiguredService',
            'ezpublish.cache_pool' => 'getEzpublish_CachePoolService',
            'ezpublish.cache_pool.factory' => 'getEzpublish_CachePool_FactoryService',
            'ezpublish.cache_pool.spi.cache.decorator' => 'getEzpublish_CachePool_Spi_Cache_DecoratorService',
            'ezpublish.chain_router' => 'getEzpublish_ChainRouterService',
            'ezpublish.config.dynamic_setting.parser' => 'getEzpublish_Config_DynamicSetting_ParserService',
            'ezpublish.config.resolver.chain' => 'getEzpublish_Config_Resolver_ChainService',
            'ezpublish.config.resolver.core' => 'getEzpublish_Config_Resolver_CoreService',
            'ezpublish.config_resolver.fake.binary_dir__' => 'getEzpublish_ConfigResolver_Fake_BinaryDirService',
            'ezpublish.config_resolver.fake.image.published_images_dir__' => 'getEzpublish_ConfigResolver_Fake_Image_PublishedImagesDirService',
            'ezpublish.config_resolver.fake.image.versioned_images_dir__' => 'getEzpublish_ConfigResolver_Fake_Image_VersionedImagesDirService',
            'ezpublish.config_resolver.fake.io.binarydata_handler__' => 'getEzpublish_ConfigResolver_Fake_Io_BinarydataHandlerService',
            'ezpublish.config_resolver.fake.io.legacy_url_prefix__' => 'getEzpublish_ConfigResolver_Fake_Io_LegacyUrlPrefixService',
            'ezpublish.config_resolver.fake.io.metadata_handler__' => 'getEzpublish_ConfigResolver_Fake_Io_MetadataHandlerService',
            'ezpublish.config_resolver.fake.io.root_dir__' => 'getEzpublish_ConfigResolver_Fake_Io_RootDirService',
            'ezpublish.config_resolver.fake.io.url_prefix__' => 'getEzpublish_ConfigResolver_Fake_Io_UrlPrefixService',
            'ezpublish.config_resolver.fake.storage_dir__' => 'getEzpublish_ConfigResolver_Fake_StorageDirService',
            'ezpublish.config_resolver.fake.var_dir__' => 'getEzpublish_ConfigResolver_Fake_VarDirService',
            'ezpublish.config_scope_listener' => 'getEzpublish_ConfigScopeListenerService',
            'ezpublish.content_preview_helper' => 'getEzpublish_ContentPreviewHelperService',
            'ezpublish.content_view.matcher_factory' => 'getEzpublish_ContentView_MatcherFactoryService',
            'ezpublish.content_view_provider.configured' => 'getEzpublish_ContentViewProvider_ConfiguredService',
            'ezpublish.controller.content.preview.core' => 'getEzpublish_Controller_Content_Preview_CoreService',
            'ezpublish.controller.content.view' => 'getEzpublish_Controller_Content_ViewService',
            'ezpublish.controller.page.view' => 'getEzpublish_Controller_Page_ViewService',
            'ezpublish.controller_listener' => 'getEzpublish_ControllerListenerService',
            'ezpublish.controller_manager' => 'getEzpublish_ControllerManagerService',
            'ezpublish.core.io.binarydata_handler' => 'getEzpublish_Core_Io_BinarydataHandlerService',
            'ezpublish.core.io.binarydata_handler.factory' => 'getEzpublish_Core_Io_BinarydataHandler_FactoryService',
            'ezpublish.core.io.binarydata_handler.flysystem.default' => 'getEzpublish_Core_Io_BinarydataHandler_Flysystem_DefaultService',
            'ezpublish.core.io.flysystem.default_adapter' => 'getEzpublish_Core_Io_Flysystem_DefaultAdapterService',
            'ezpublish.core.io.flysystem.default_filesystem' => 'getEzpublish_Core_Io_Flysystem_DefaultFilesystemService',
            'ezpublish.core.io.image_fieldtype.legacy_url_decorator' => 'getEzpublish_Core_Io_ImageFieldtype_LegacyUrlDecoratorService',
            'ezpublish.core.io.image_fieldtype.legacy_url_redecorator' => 'getEzpublish_Core_Io_ImageFieldtype_LegacyUrlRedecoratorService',
            'ezpublish.core.io.metadata_handler' => 'getEzpublish_Core_Io_MetadataHandlerService',
            'ezpublish.core.io.metadata_handler.factory' => 'getEzpublish_Core_Io_MetadataHandler_FactoryService',
            'ezpublish.core.io.metadata_handler.flysystem.default' => 'getEzpublish_Core_Io_MetadataHandler_Flysystem_DefaultService',
            'ezpublish.core.io.mimetypedetector.fileinfo' => 'getEzpublish_Core_Io_Mimetypedetector_FileinfoService',
            'ezpublish.core.io.prefix_url_decorator' => 'getEzpublish_Core_Io_PrefixUrlDecoratorService',
            'ezpublish.core.io.service' => 'getEzpublish_Core_Io_ServiceService',
            'ezpublish.core.io.stream_file_listener' => 'getEzpublish_Core_Io_StreamFileListenerService',
            'ezpublish.dynamic_settings_listener' => 'getEzpublish_DynamicSettingsListenerService',
            'ezpublish.field_helper' => 'getEzpublish_FieldHelperService',
            'ezpublish.field_type_collection.factory' => 'getEzpublish_FieldTypeCollection_FactoryService',
            'ezpublish.fieldtype.externalstoragehandler.ezgmaplocation.gateway' => 'getEzpublish_Fieldtype_Externalstoragehandler_Ezgmaplocation_GatewayService',
            'ezpublish.fieldtype.ezauthor' => 'getEzpublish_Fieldtype_EzauthorService',
            'ezpublish.fieldtype.ezauthor.converter' => 'getEzpublish_Fieldtype_Ezauthor_ConverterService',
            'ezpublish.fieldtype.ezbinaryfile' => 'getEzpublish_Fieldtype_EzbinaryfileService',
            'ezpublish.fieldtype.ezbinaryfile.converter' => 'getEzpublish_Fieldtype_Ezbinaryfile_ConverterService',
            'ezpublish.fieldtype.ezbinaryfile.externalstorage' => 'getEzpublish_Fieldtype_Ezbinaryfile_ExternalstorageService',
            'ezpublish.fieldtype.ezbinaryfile.io_service' => 'getEzpublish_Fieldtype_Ezbinaryfile_IoServiceService',
            'ezpublish.fieldtype.ezbinaryfile.pathgenerator' => 'getEzpublish_Fieldtype_Ezbinaryfile_PathgeneratorService',
            'ezpublish.fieldtype.ezbinaryfile.storage_gateway' => 'getEzpublish_Fieldtype_Ezbinaryfile_StorageGatewayService',
            'ezpublish.fieldtype.ezboolean' => 'getEzpublish_Fieldtype_EzbooleanService',
            'ezpublish.fieldtype.ezboolean.converter' => 'getEzpublish_Fieldtype_Ezboolean_ConverterService',
            'ezpublish.fieldtype.ezcomcomments' => 'getEzpublish_Fieldtype_EzcomcommentsService',
            'ezpublish.fieldtype.ezcomcomments.converter' => 'getEzpublish_Fieldtype_Ezcomcomments_ConverterService',
            'ezpublish.fieldtype.ezcountry' => 'getEzpublish_Fieldtype_EzcountryService',
            'ezpublish.fieldtype.ezcountry.converter' => 'getEzpublish_Fieldtype_Ezcountry_ConverterService',
            'ezpublish.fieldtype.ezdate' => 'getEzpublish_Fieldtype_EzdateService',
            'ezpublish.fieldtype.ezdate.converter' => 'getEzpublish_Fieldtype_Ezdate_ConverterService',
            'ezpublish.fieldtype.ezdatetime' => 'getEzpublish_Fieldtype_EzdatetimeService',
            'ezpublish.fieldtype.ezdatetime.converter' => 'getEzpublish_Fieldtype_Ezdatetime_ConverterService',
            'ezpublish.fieldtype.ezdatetime.parameterprovider' => 'getEzpublish_Fieldtype_Ezdatetime_ParameterproviderService',
            'ezpublish.fieldtype.ezemail' => 'getEzpublish_Fieldtype_EzemailService',
            'ezpublish.fieldtype.ezemail.converter' => 'getEzpublish_Fieldtype_Ezemail_ConverterService',
            'ezpublish.fieldtype.ezenum' => 'getEzpublish_Fieldtype_EzenumService',
            'ezpublish.fieldtype.ezenum.converter' => 'getEzpublish_Fieldtype_Ezenum_ConverterService',
            'ezpublish.fieldtype.ezfloat' => 'getEzpublish_Fieldtype_EzfloatService',
            'ezpublish.fieldtype.ezfloat.converter' => 'getEzpublish_Fieldtype_Ezfloat_ConverterService',
            'ezpublish.fieldtype.ezgmaplocation' => 'getEzpublish_Fieldtype_EzgmaplocationService',
            'ezpublish.fieldtype.ezgmaplocation.converter' => 'getEzpublish_Fieldtype_Ezgmaplocation_ConverterService',
            'ezpublish.fieldtype.ezgmaplocation.externalstorage' => 'getEzpublish_Fieldtype_Ezgmaplocation_ExternalstorageService',
            'ezpublish.fieldtype.ezidentifier' => 'getEzpublish_Fieldtype_EzidentifierService',
            'ezpublish.fieldtype.ezidentifier.converter' => 'getEzpublish_Fieldtype_Ezidentifier_ConverterService',
            'ezpublish.fieldtype.ezimage' => 'getEzpublish_Fieldtype_EzimageService',
            'ezpublish.fieldtype.ezimage.converter' => 'getEzpublish_Fieldtype_Ezimage_ConverterService',
            'ezpublish.fieldtype.ezimage.externalstorage' => 'getEzpublish_Fieldtype_Ezimage_ExternalstorageService',
            'ezpublish.fieldtype.ezimage.io_service' => 'getEzpublish_Fieldtype_Ezimage_IoServiceService',
            'ezpublish.fieldtype.ezimage.io_service.draft' => 'getEzpublish_Fieldtype_Ezimage_IoService_DraftService',
            'ezpublish.fieldtype.ezimage.io_service.options_provider' => 'getEzpublish_Fieldtype_Ezimage_IoService_OptionsProviderService',
            'ezpublish.fieldtype.ezimage.io_service.published' => 'getEzpublish_Fieldtype_Ezimage_IoService_PublishedService',
            'ezpublish.fieldtype.ezimage.pathgenerator' => 'getEzpublish_Fieldtype_Ezimage_PathgeneratorService',
            'ezpublish.fieldtype.ezimage.storage_gateway' => 'getEzpublish_Fieldtype_Ezimage_StorageGatewayService',
            'ezpublish.fieldtype.ezinisetting' => 'getEzpublish_Fieldtype_EzinisettingService',
            'ezpublish.fieldtype.ezinisetting.converter' => 'getEzpublish_Fieldtype_Ezinisetting_ConverterService',
            'ezpublish.fieldtype.ezinteger' => 'getEzpublish_Fieldtype_EzintegerService',
            'ezpublish.fieldtype.ezinteger.converter' => 'getEzpublish_Fieldtype_Ezinteger_ConverterService',
            'ezpublish.fieldtype.ezisbn' => 'getEzpublish_Fieldtype_EzisbnService',
            'ezpublish.fieldtype.ezisbn.converter' => 'getEzpublish_Fieldtype_Ezisbn_ConverterService',
            'ezpublish.fieldtype.ezkeyword' => 'getEzpublish_Fieldtype_EzkeywordService',
            'ezpublish.fieldtype.ezkeyword.converter' => 'getEzpublish_Fieldtype_Ezkeyword_ConverterService',
            'ezpublish.fieldtype.ezkeyword.externalstorage' => 'getEzpublish_Fieldtype_Ezkeyword_ExternalstorageService',
            'ezpublish.fieldtype.ezkeyword.storage_gateway' => 'getEzpublish_Fieldtype_Ezkeyword_StorageGatewayService',
            'ezpublish.fieldtype.ezmatrix' => 'getEzpublish_Fieldtype_EzmatrixService',
            'ezpublish.fieldtype.ezmatrix.converter' => 'getEzpublish_Fieldtype_Ezmatrix_ConverterService',
            'ezpublish.fieldtype.ezmedia' => 'getEzpublish_Fieldtype_EzmediaService',
            'ezpublish.fieldtype.ezmedia.converter' => 'getEzpublish_Fieldtype_Ezmedia_ConverterService',
            'ezpublish.fieldtype.ezmedia.externalstorage' => 'getEzpublish_Fieldtype_Ezmedia_ExternalstorageService',
            'ezpublish.fieldtype.ezmedia.storage_gateway' => 'getEzpublish_Fieldtype_Ezmedia_StorageGatewayService',
            'ezpublish.fieldtype.ezmultioption' => 'getEzpublish_Fieldtype_EzmultioptionService',
            'ezpublish.fieldtype.ezmultioption.converter' => 'getEzpublish_Fieldtype_Ezmultioption_ConverterService',
            'ezpublish.fieldtype.ezmultioption2' => 'getEzpublish_Fieldtype_Ezmultioption2Service',
            'ezpublish.fieldtype.ezmultioption2.converter' => 'getEzpublish_Fieldtype_Ezmultioption2_ConverterService',
            'ezpublish.fieldtype.ezmultiprice' => 'getEzpublish_Fieldtype_EzmultipriceService',
            'ezpublish.fieldtype.ezmultiprice.converter' => 'getEzpublish_Fieldtype_Ezmultiprice_ConverterService',
            'ezpublish.fieldtype.ezobjectrelation' => 'getEzpublish_Fieldtype_EzobjectrelationService',
            'ezpublish.fieldtype.ezobjectrelation.converter' => 'getEzpublish_Fieldtype_Ezobjectrelation_ConverterService',
            'ezpublish.fieldtype.ezobjectrelationlist' => 'getEzpublish_Fieldtype_EzobjectrelationlistService',
            'ezpublish.fieldtype.ezobjectrelationlist.converter' => 'getEzpublish_Fieldtype_Ezobjectrelationlist_ConverterService',
            'ezpublish.fieldtype.ezoption' => 'getEzpublish_Fieldtype_EzoptionService',
            'ezpublish.fieldtype.ezoption.converter' => 'getEzpublish_Fieldtype_Ezoption_ConverterService',
            'ezpublish.fieldtype.ezpackage' => 'getEzpublish_Fieldtype_EzpackageService',
            'ezpublish.fieldtype.ezpackage.converter' => 'getEzpublish_Fieldtype_Ezpackage_ConverterService',
            'ezpublish.fieldtype.ezpaex' => 'getEzpublish_Fieldtype_EzpaexService',
            'ezpublish.fieldtype.ezpaex.converter' => 'getEzpublish_Fieldtype_Ezpaex_ConverterService',
            'ezpublish.fieldtype.ezpage' => 'getEzpublish_Fieldtype_EzpageService',
            'ezpublish.fieldtype.ezpage.converter' => 'getEzpublish_Fieldtype_Ezpage_ConverterService',
            'ezpublish.fieldtype.ezpage.hashconverter' => 'getEzpublish_Fieldtype_Ezpage_HashconverterService',
            'ezpublish.fieldtype.ezpage.pageservice' => 'getEzpublish_Fieldtype_Ezpage_PageserviceService',
            'ezpublish.fieldtype.ezpage.pageservice.factory' => 'getEzpublish_Fieldtype_Ezpage_Pageservice_FactoryService',
            'ezpublish.fieldtype.ezpage.parameterprovider' => 'getEzpublish_Fieldtype_Ezpage_ParameterproviderService',
            'ezpublish.fieldtype.ezpage.storage_gateway' => 'getEzpublish_Fieldtype_Ezpage_StorageGatewayService',
            'ezpublish.fieldtype.ezprice' => 'getEzpublish_Fieldtype_EzpriceService',
            'ezpublish.fieldtype.ezprice.converter' => 'getEzpublish_Fieldtype_Ezprice_ConverterService',
            'ezpublish.fieldtype.ezproductcategory' => 'getEzpublish_Fieldtype_EzproductcategoryService',
            'ezpublish.fieldtype.ezproductcategory.converter' => 'getEzpublish_Fieldtype_Ezproductcategory_ConverterService',
            'ezpublish.fieldtype.ezrangeoption' => 'getEzpublish_Fieldtype_EzrangeoptionService',
            'ezpublish.fieldtype.ezrangeoption.converter' => 'getEzpublish_Fieldtype_Ezrangeoption_ConverterService',
            'ezpublish.fieldtype.ezrecommendation' => 'getEzpublish_Fieldtype_EzrecommendationService',
            'ezpublish.fieldtype.ezrecommendation.converter' => 'getEzpublish_Fieldtype_Ezrecommendation_ConverterService',
            'ezpublish.fieldtype.ezrichtext' => 'getEzpublish_Fieldtype_EzrichtextService',
            'ezpublish.fieldtype.ezrichtext.converter' => 'getEzpublish_Fieldtype_Ezrichtext_ConverterService',
            'ezpublish.fieldtype.ezrichtext.converter.edit.xhtml5' => 'getEzpublish_Fieldtype_Ezrichtext_Converter_Edit_Xhtml5Service',
            'ezpublish.fieldtype.ezrichtext.converter.embed' => 'getEzpublish_Fieldtype_Ezrichtext_Converter_EmbedService',
            'ezpublish.fieldtype.ezrichtext.converter.input.dispatcher' => 'getEzpublish_Fieldtype_Ezrichtext_Converter_Input_DispatcherService',
            'ezpublish.fieldtype.ezrichtext.converter.input.ezxml' => 'getEzpublish_Fieldtype_Ezrichtext_Converter_Input_EzxmlService',
            'ezpublish.fieldtype.ezrichtext.converter.input.xhtml5' => 'getEzpublish_Fieldtype_Ezrichtext_Converter_Input_Xhtml5Service',
            'ezpublish.fieldtype.ezrichtext.converter.link' => 'getEzpublish_Fieldtype_Ezrichtext_Converter_LinkService',
            'ezpublish.fieldtype.ezrichtext.converter.output.xhtml5' => 'getEzpublish_Fieldtype_Ezrichtext_Converter_Output_Xhtml5Service',
            'ezpublish.fieldtype.ezrichtext.converter.output.xhtml5.core' => 'getEzpublish_Fieldtype_Ezrichtext_Converter_Output_Xhtml5_CoreService',
            'ezpublish.fieldtype.ezrichtext.converter.output.xhtml5.fragment' => 'getEzpublish_Fieldtype_Ezrichtext_Converter_Output_Xhtml5_FragmentService',
            'ezpublish.fieldtype.ezrichtext.converter.template' => 'getEzpublish_Fieldtype_Ezrichtext_Converter_TemplateService',
            'ezpublish.fieldtype.ezrichtext.externalstorage' => 'getEzpublish_Fieldtype_Ezrichtext_ExternalstorageService',
            'ezpublish.fieldtype.ezrichtext.renderer' => 'getEzpublish_Fieldtype_Ezrichtext_RendererService',
            'ezpublish.fieldtype.ezrichtext.storage_gateway' => 'getEzpublish_Fieldtype_Ezrichtext_StorageGatewayService',
            'ezpublish.fieldtype.ezrichtext.validator.dispatcher' => 'getEzpublish_Fieldtype_Ezrichtext_Validator_DispatcherService',
            'ezpublish.fieldtype.ezrichtext.validator.docbook' => 'getEzpublish_Fieldtype_Ezrichtext_Validator_DocbookService',
            'ezpublish.fieldtype.ezrichtext.validator.input.ezxhtml5' => 'getEzpublish_Fieldtype_Ezrichtext_Validator_Input_Ezxhtml5Service',
            'ezpublish.fieldtype.ezrichtext.validator.output.ezxhtml5' => 'getEzpublish_Fieldtype_Ezrichtext_Validator_Output_Ezxhtml5Service',
            'ezpublish.fieldtype.ezselection' => 'getEzpublish_Fieldtype_EzselectionService',
            'ezpublish.fieldtype.ezselection.converter' => 'getEzpublish_Fieldtype_Ezselection_ConverterService',
            'ezpublish.fieldtype.ezsrrating' => 'getEzpublish_Fieldtype_EzsrratingService',
            'ezpublish.fieldtype.ezsrrating.converter' => 'getEzpublish_Fieldtype_Ezsrrating_ConverterService',
            'ezpublish.fieldtype.ezstring' => 'getEzpublish_Fieldtype_EzstringService',
            'ezpublish.fieldtype.ezstring.converter' => 'getEzpublish_Fieldtype_Ezstring_ConverterService',
            'ezpublish.fieldtype.ezsubtreesubscription' => 'getEzpublish_Fieldtype_EzsubtreesubscriptionService',
            'ezpublish.fieldtype.ezsubtreesubscription.converter' => 'getEzpublish_Fieldtype_Ezsubtreesubscription_ConverterService',
            'ezpublish.fieldtype.ezsurvey' => 'getEzpublish_Fieldtype_EzsurveyService',
            'ezpublish.fieldtype.ezsurvey.converter' => 'getEzpublish_Fieldtype_Ezsurvey_ConverterService',
            'ezpublish.fieldtype.eztags' => 'getEzpublish_Fieldtype_EztagsService',
            'ezpublish.fieldtype.eztags.converter' => 'getEzpublish_Fieldtype_Eztags_ConverterService',
            'ezpublish.fieldtype.eztext' => 'getEzpublish_Fieldtype_EztextService',
            'ezpublish.fieldtype.eztext.converter' => 'getEzpublish_Fieldtype_Eztext_ConverterService',
            'ezpublish.fieldtype.eztime' => 'getEzpublish_Fieldtype_EztimeService',
            'ezpublish.fieldtype.eztime.converter' => 'getEzpublish_Fieldtype_Eztime_ConverterService',
            'ezpublish.fieldtype.ezurl' => 'getEzpublish_Fieldtype_EzurlService',
            'ezpublish.fieldtype.ezurl.converter' => 'getEzpublish_Fieldtype_Ezurl_ConverterService',
            'ezpublish.fieldtype.ezurl.externalstorage' => 'getEzpublish_Fieldtype_Ezurl_ExternalstorageService',
            'ezpublish.fieldtype.ezurl.storage_gateway' => 'getEzpublish_Fieldtype_Ezurl_StorageGatewayService',
            'ezpublish.fieldtype.ezuser' => 'getEzpublish_Fieldtype_EzuserService',
            'ezpublish.fieldtype.ezuser.converter' => 'getEzpublish_Fieldtype_Ezuser_ConverterService',
            'ezpublish.fieldtype.ezuser.externalstorage' => 'getEzpublish_Fieldtype_Ezuser_ExternalstorageService',
            'ezpublish.fieldtype.ezuser.storage_gateway' => 'getEzpublish_Fieldtype_Ezuser_StorageGatewayService',
            'ezpublish.fieldtype.ezxmltext' => 'getEzpublish_Fieldtype_EzxmltextService',
            'ezpublish.fieldtype.ezxmltext.converter' => 'getEzpublish_Fieldtype_Ezxmltext_ConverterService',
            'ezpublish.fieldtype.ezxmltext.converter.customtags' => 'getEzpublish_Fieldtype_Ezxmltext_Converter_CustomtagsService',
            'ezpublish.fieldtype.ezxmltext.converter.embedtohtml5' => 'getEzpublish_Fieldtype_Ezxmltext_Converter_Embedtohtml5Service',
            'ezpublish.fieldtype.ezxmltext.converter.ezlinktohtml5' => 'getEzpublish_Fieldtype_Ezxmltext_Converter_Ezlinktohtml5Service',
            'ezpublish.fieldtype.ezxmltext.converter.html5' => 'getEzpublish_Fieldtype_Ezxmltext_Converter_Html5Service',
            'ezpublish.fieldtype.ezxmltext.externalstorage' => 'getEzpublish_Fieldtype_Ezxmltext_ExternalstorageService',
            'ezpublish.fieldtype.ezxmltext.storage_gateway' => 'getEzpublish_Fieldtype_Ezxmltext_StorageGatewayService',
            'ezpublish.fieldtype.metadatahandler.imagesize' => 'getEzpublish_Fieldtype_Metadatahandler_ImagesizeService',
            'ezpublish.fieldtype.parameterproviderregistry' => 'getEzpublish_Fieldtype_ParameterproviderregistryService',
            'ezpublish.fragment_listener.factory' => 'getEzpublish_FragmentListener_FactoryService',
            'ezpublish.http_cache.cache_manager' => 'getEzpublish_HttpCache_CacheManagerService',
            'ezpublish.http_cache.proxy_client.varnish.factory' => 'getEzpublish_HttpCache_ProxyClient_Varnish_FactoryService',
            'ezpublish.http_cache.purge_client.fos' => 'getEzpublish_HttpCache_PurgeClient_FosService',
            'ezpublish.http_cache.purge_client.local' => 'getEzpublish_HttpCache_PurgeClient_LocalService',
            'ezpublish.http_cache.purger.instant' => 'getEzpublish_HttpCache_Purger_InstantService',
            'ezpublish.http_cache.store' => 'getEzpublish_HttpCache_StoreService',
            'ezpublish.image_alias.imagine.alias_cleaner' => 'getEzpublish_ImageAlias_Imagine_AliasCleanerService',
            'ezpublish.image_alias.imagine.alias_generator' => 'getEzpublish_ImageAlias_Imagine_AliasGeneratorService',
            'ezpublish.image_alias.imagine.binary_loader' => 'getEzpublish_ImageAlias_Imagine_BinaryLoaderService',
            'ezpublish.image_alias.imagine.cache_resolver' => 'getEzpublish_ImageAlias_Imagine_CacheResolverService',
            'ezpublish.image_alias.imagine.filter.reduce_noise' => 'getEzpublish_ImageAlias_Imagine_Filter_ReduceNoiseService',
            'ezpublish.locale.converter' => 'getEzpublish_Locale_ConverterService',
            'ezpublish.location_view.matcher_factory' => 'getEzpublish_LocationView_MatcherFactoryService',
            'ezpublish.location_view_provider.configured' => 'getEzpublish_LocationViewProvider_ConfiguredService',
            'ezpublish.original_request_listener' => 'getEzpublish_OriginalRequestListenerService',
            'ezpublish.page_controller_listener' => 'getEzpublish_PageControllerListenerService',
            'ezpublish.persistence.connection' => 'getEzpublish_Persistence_ConnectionService',
            'ezpublish.persistence.connection.factory' => 'getEzpublish_Persistence_Connection_FactoryService',
            'ezpublish.persistence.external_storage_registry' => 'getEzpublish_Persistence_ExternalStorageRegistryService',
            'ezpublish.persistence.external_storage_registry.factory' => 'getEzpublish_Persistence_ExternalStorageRegistry_FactoryService',
            'ezpublish.persistence.field_type_registry' => 'getEzpublish_Persistence_FieldTypeRegistryService',
            'ezpublish.persistence.field_type_registry.factory' => 'getEzpublish_Persistence_FieldTypeRegistry_FactoryService',
            'ezpublish.persistence.legacy.content.gateway.exception_conversion' => 'getEzpublish_Persistence_Legacy_Content_Gateway_ExceptionConversionService',
            'ezpublish.persistence.legacy.content.gateway.inner' => 'getEzpublish_Persistence_Legacy_Content_Gateway_InnerService',
            'ezpublish.persistence.legacy.content.mapper' => 'getEzpublish_Persistence_Legacy_Content_MapperService',
            'ezpublish.persistence.legacy.content.query_builder' => 'getEzpublish_Persistence_Legacy_Content_QueryBuilderService',
            'ezpublish.persistence.legacy.content_type.content_updater' => 'getEzpublish_Persistence_Legacy_ContentType_ContentUpdaterService',
            'ezpublish.persistence.legacy.content_type.gateway.exception_conversion' => 'getEzpublish_Persistence_Legacy_ContentType_Gateway_ExceptionConversionService',
            'ezpublish.persistence.legacy.content_type.gateway.inner' => 'getEzpublish_Persistence_Legacy_ContentType_Gateway_InnerService',
            'ezpublish.persistence.legacy.content_type.mapper' => 'getEzpublish_Persistence_Legacy_ContentType_MapperService',
            'ezpublish.persistence.legacy.content_type.update_handler.basic' => 'getEzpublish_Persistence_Legacy_ContentType_UpdateHandler_BasicService',
            'ezpublish.persistence.legacy.external_storage_handler' => 'getEzpublish_Persistence_Legacy_ExternalStorageHandlerService',
            'ezpublish.persistence.legacy.field_handler' => 'getEzpublish_Persistence_Legacy_FieldHandlerService',
            'ezpublish.persistence.legacy.field_value_converter.registry' => 'getEzpublish_Persistence_Legacy_FieldValueConverter_RegistryService',
            'ezpublish.persistence.legacy.language.cache' => 'getEzpublish_Persistence_Legacy_Language_CacheService',
            'ezpublish.persistence.legacy.language.gateway.exception_conversion' => 'getEzpublish_Persistence_Legacy_Language_Gateway_ExceptionConversionService',
            'ezpublish.persistence.legacy.language.gateway.inner' => 'getEzpublish_Persistence_Legacy_Language_Gateway_InnerService',
            'ezpublish.persistence.legacy.language.mapper' => 'getEzpublish_Persistence_Legacy_Language_MapperService',
            'ezpublish.persistence.legacy.language.mask_generator' => 'getEzpublish_Persistence_Legacy_Language_MaskGeneratorService',
            'ezpublish.persistence.legacy.location.gateway.exception_conversion' => 'getEzpublish_Persistence_Legacy_Location_Gateway_ExceptionConversionService',
            'ezpublish.persistence.legacy.location.gateway.inner' => 'getEzpublish_Persistence_Legacy_Location_Gateway_InnerService',
            'ezpublish.persistence.legacy.location.mapper' => 'getEzpublish_Persistence_Legacy_Location_MapperService',
            'ezpublish.persistence.legacy.object_state.gateway.exception_conversion' => 'getEzpublish_Persistence_Legacy_ObjectState_Gateway_ExceptionConversionService',
            'ezpublish.persistence.legacy.object_state.gateway.inner' => 'getEzpublish_Persistence_Legacy_ObjectState_Gateway_InnerService',
            'ezpublish.persistence.legacy.object_state.mapper' => 'getEzpublish_Persistence_Legacy_ObjectState_MapperService',
            'ezpublish.persistence.legacy.role.gateway.exception_conversion' => 'getEzpublish_Persistence_Legacy_Role_Gateway_ExceptionConversionService',
            'ezpublish.persistence.legacy.role.gateway.inner' => 'getEzpublish_Persistence_Legacy_Role_Gateway_InnerService',
            'ezpublish.persistence.legacy.role.limitation.converter' => 'getEzpublish_Persistence_Legacy_Role_Limitation_ConverterService',
            'ezpublish.persistence.legacy.role.limitation.handler.object_state' => 'getEzpublish_Persistence_Legacy_Role_Limitation_Handler_ObjectStateService',
            'ezpublish.persistence.legacy.search.gateway.content.exception_conversion' => 'getEzpublish_Persistence_Legacy_Search_Gateway_Content_ExceptionConversionService',
            'ezpublish.persistence.legacy.search.gateway.content.inner' => 'getEzpublish_Persistence_Legacy_Search_Gateway_Content_InnerService',
            'ezpublish.persistence.legacy.search.gateway.criteria_converter.content' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriteriaConverter_ContentService',
            'ezpublish.persistence.legacy.search.gateway.criteria_converter.location' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriteriaConverter_LocationService',
            'ezpublish.persistence.legacy.search.gateway.criterion_field_value_converter' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionFieldValueConverterService',
            'ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.collection.comma_separated' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionFieldValueHandler_Collection_CommaSeparatedService',
            'ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.collection.hypen_separated' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionFieldValueHandler_Collection_HypenSeparatedService',
            'ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.composite' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionFieldValueHandler_CompositeService',
            'ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.registry' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionFieldValueHandler_RegistryService',
            'ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.simple' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionFieldValueHandler_SimpleService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_id' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_ContentIdService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_type_group_id' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_ContentTypeGroupIdService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_type_id' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_ContentTypeIdService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_type_identifier' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_ContentTypeIdentifierService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.date_metadata' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_DateMetadataService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.field' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_FieldService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.field_relation' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_FieldRelationService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.full_text' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_FullTextService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.language_code' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_LanguageCodeService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.logical_and' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_LogicalAndService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.logical_not' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_LogicalNotService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.logical_or' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_LogicalOrService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.map_location_distance' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_MapLocationDistanceService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.match_all' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_MatchAllService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.match_none' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_MatchNoneService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.object_state_id' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_ObjectStateIdService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.remote_id' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_RemoteIdService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.section_id' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_SectionIdService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.user_metadata' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_UserMetadataService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.content.depth' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Content_DepthService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.content.location_id' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Content_LocationIdService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.content.location_priority' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Content_LocationPriorityService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.content.location_remote_id' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Content_LocationRemoteIdService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.content.parent_location_id' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Content_ParentLocationIdService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.content.permission_subtree' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Content_PermissionSubtreeService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.content.subtree' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Content_SubtreeService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.content.visibility' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Content_VisibilityService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.location.depth' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Location_DepthService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.location.is_main_location' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Location_IsMainLocationService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.location.location_id' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Location_LocationIdService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.location.location_remote_id' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Location_LocationRemoteIdService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.location.parent_location_id' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Location_ParentLocationIdService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.location.priority' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Location_PriorityService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.location.subtree' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Location_SubtreeService',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.location.visibility' => 'getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Location_VisibilityService',
            'ezpublish.persistence.legacy.search.gateway.location.exception_conversion' => 'getEzpublish_Persistence_Legacy_Search_Gateway_Location_ExceptionConversionService',
            'ezpublish.persistence.legacy.search.gateway.location.inner' => 'getEzpublish_Persistence_Legacy_Search_Gateway_Location_InnerService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_converter.content' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseConverter_ContentService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_converter.location' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseConverter_LocationService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.content_id' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Common_ContentIdService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.content_name' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Common_ContentNameService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.date_modified' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Common_DateModifiedService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.date_published' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Common_DatePublishedService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.field' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Common_FieldService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.map_location_distance' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Common_MapLocationDistanceService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.section_identifier' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Common_SectionIdentifierService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.section_name' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Common_SectionNameService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.content.location_depth' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Content_LocationDepthService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.content.location_path_string' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Content_LocationPathStringService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.content.location_priority' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Content_LocationPriorityService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.depth' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Location_DepthService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.id' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Location_IdService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.is_main_location' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Location_IsMainLocationService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.path' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Location_PathService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.priority' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Location_PriorityService',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.visibility' => 'getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Location_VisibilityService',
            'ezpublish.persistence.legacy.section.gateway.exception_conversion' => 'getEzpublish_Persistence_Legacy_Section_Gateway_ExceptionConversionService',
            'ezpublish.persistence.legacy.section.gateway.inner' => 'getEzpublish_Persistence_Legacy_Section_Gateway_InnerService',
            'ezpublish.persistence.legacy.tree_handler' => 'getEzpublish_Persistence_Legacy_TreeHandlerService',
            'ezpublish.persistence.legacy.url_alias.gateway.exception_conversion' => 'getEzpublish_Persistence_Legacy_UrlAlias_Gateway_ExceptionConversionService',
            'ezpublish.persistence.legacy.url_alias.gateway.inner' => 'getEzpublish_Persistence_Legacy_UrlAlias_Gateway_InnerService',
            'ezpublish.persistence.legacy.url_alias.mapper' => 'getEzpublish_Persistence_Legacy_UrlAlias_MapperService',
            'ezpublish.persistence.legacy.url_wildcard.gateway.exception_conversion' => 'getEzpublish_Persistence_Legacy_UrlWildcard_Gateway_ExceptionConversionService',
            'ezpublish.persistence.legacy.url_wildcard.gateway.inner' => 'getEzpublish_Persistence_Legacy_UrlWildcard_Gateway_InnerService',
            'ezpublish.persistence.legacy.url_wildcard.mapper' => 'getEzpublish_Persistence_Legacy_UrlWildcard_MapperService',
            'ezpublish.persistence.legacy.user.gateway.exception_conversion' => 'getEzpublish_Persistence_Legacy_User_Gateway_ExceptionConversionService',
            'ezpublish.persistence.legacy.user.gateway.inner' => 'getEzpublish_Persistence_Legacy_User_Gateway_InnerService',
            'ezpublish.persistence.legacy.user.mapper' => 'getEzpublish_Persistence_Legacy_User_MapperService',
            'ezpublish.persistence.slug_converter' => 'getEzpublish_Persistence_SlugConverterService',
            'ezpublish.request_redirect_listener' => 'getEzpublish_RequestRedirectListenerService',
            'ezpublish.route_reference.generator' => 'getEzpublish_RouteReference_GeneratorService',
            'ezpublish.route_reference.listener.language_switch' => 'getEzpublish_RouteReference_Listener_LanguageSwitchService',
            'ezpublish.security.controller' => 'getEzpublish_Security_ControllerService',
            'ezpublish.security.login_listener' => 'getEzpublish_Security_LoginListenerService',
            'ezpublish.security.user_provider' => 'getEzpublish_Security_UserProviderService',
            'ezpublish.session_init_by_post_listener' => 'getEzpublish_SessionInitByPostListenerService',
            'ezpublish.session_set_dynamic_name_listener' => 'getEzpublish_SessionSetDynamicNameListenerService',
            'ezpublish.signalslot.event_converter_slot' => 'getEzpublish_Signalslot_EventConverterSlotService',
            'ezpublish.signalslot.repository' => 'getEzpublish_Signalslot_RepositoryService',
            'ezpublish.signalslot.signal_dispatcher' => 'getEzpublish_Signalslot_SignalDispatcherService',
            'ezpublish.signalslot.signal_dispatcher_transaction_wrapper' => 'getEzpublish_Signalslot_SignalDispatcherTransactionWrapperService',
            'ezpublish.siteaccess' => 'getEzpublish_SiteaccessService',
            'ezpublish.siteaccess.matcher_builder' => 'getEzpublish_Siteaccess_MatcherBuilderService',
            'ezpublish.siteaccess_listener' => 'getEzpublish_SiteaccessListenerService',
            'ezpublish.siteaccess_listener.routing' => 'getEzpublish_SiteaccessListener_RoutingService',
            'ezpublish.siteaccess_match_listener' => 'getEzpublish_SiteaccessMatchListenerService',
            'ezpublish.siteaccess_router' => 'getEzpublish_SiteaccessRouterService',
            'ezpublish.spi.persistence.cache' => 'getEzpublish_Spi_Persistence_CacheService',
            'ezpublish.spi.persistence.cache.contenthandler' => 'getEzpublish_Spi_Persistence_Cache_ContenthandlerService',
            'ezpublish.spi.persistence.cache.contentlanguagehandler' => 'getEzpublish_Spi_Persistence_Cache_ContentlanguagehandlerService',
            'ezpublish.spi.persistence.cache.contenttypehandler' => 'getEzpublish_Spi_Persistence_Cache_ContenttypehandlerService',
            'ezpublish.spi.persistence.cache.locationhandler' => 'getEzpublish_Spi_Persistence_Cache_LocationhandlerService',
            'ezpublish.spi.persistence.cache.locationsearchhandler' => 'getEzpublish_Spi_Persistence_Cache_LocationsearchhandlerService',
            'ezpublish.spi.persistence.cache.objectstatehandler' => 'getEzpublish_Spi_Persistence_Cache_ObjectstatehandlerService',
            'ezpublish.spi.persistence.cache.persistencelogger' => 'getEzpublish_Spi_Persistence_Cache_PersistenceloggerService',
            'ezpublish.spi.persistence.cache.searchhandler' => 'getEzpublish_Spi_Persistence_Cache_SearchhandlerService',
            'ezpublish.spi.persistence.cache.sectionhandler' => 'getEzpublish_Spi_Persistence_Cache_SectionhandlerService',
            'ezpublish.spi.persistence.cache.transactionhandler' => 'getEzpublish_Spi_Persistence_Cache_TransactionhandlerService',
            'ezpublish.spi.persistence.cache.trashhandler' => 'getEzpublish_Spi_Persistence_Cache_TrashhandlerService',
            'ezpublish.spi.persistence.cache.urlaliashandler' => 'getEzpublish_Spi_Persistence_Cache_UrlaliashandlerService',
            'ezpublish.spi.persistence.cache.userhandler' => 'getEzpublish_Spi_Persistence_Cache_UserhandlerService',
            'ezpublish.spi.persistence.legacy' => 'getEzpublish_Spi_Persistence_LegacyService',
            'ezpublish.spi.persistence.legacy.content.handler' => 'getEzpublish_Spi_Persistence_Legacy_Content_HandlerService',
            'ezpublish.spi.persistence.legacy.content_type.handler.caching' => 'getEzpublish_Spi_Persistence_Legacy_ContentType_Handler_CachingService',
            'ezpublish.spi.persistence.legacy.content_type.handler.inner' => 'getEzpublish_Spi_Persistence_Legacy_ContentType_Handler_InnerService',
            'ezpublish.spi.persistence.legacy.language.handler.caching' => 'getEzpublish_Spi_Persistence_Legacy_Language_Handler_CachingService',
            'ezpublish.spi.persistence.legacy.language.handler.inner' => 'getEzpublish_Spi_Persistence_Legacy_Language_Handler_InnerService',
            'ezpublish.spi.persistence.legacy.location.handler' => 'getEzpublish_Spi_Persistence_Legacy_Location_HandlerService',
            'ezpublish.spi.persistence.legacy.object_state.handler' => 'getEzpublish_Spi_Persistence_Legacy_ObjectState_HandlerService',
            'ezpublish.spi.persistence.legacy.search.handler.content' => 'getEzpublish_Spi_Persistence_Legacy_Search_Handler_ContentService',
            'ezpublish.spi.persistence.legacy.search.handler.location' => 'getEzpublish_Spi_Persistence_Legacy_Search_Handler_LocationService',
            'ezpublish.spi.persistence.legacy.section.handler' => 'getEzpublish_Spi_Persistence_Legacy_Section_HandlerService',
            'ezpublish.spi.persistence.legacy.transactionhandler' => 'getEzpublish_Spi_Persistence_Legacy_TransactionhandlerService',
            'ezpublish.spi.persistence.legacy.trash.handler' => 'getEzpublish_Spi_Persistence_Legacy_Trash_HandlerService',
            'ezpublish.spi.persistence.legacy.url_alias.handler' => 'getEzpublish_Spi_Persistence_Legacy_UrlAlias_HandlerService',
            'ezpublish.spi.persistence.legacy.url_wildcard.handler' => 'getEzpublish_Spi_Persistence_Legacy_UrlWildcard_HandlerService',
            'ezpublish.spi.persistence.legacy.user.handler' => 'getEzpublish_Spi_Persistence_Legacy_User_HandlerService',
            'ezpublish.templating.extension.routing' => 'getEzpublish_Templating_Extension_RoutingService',
            'ezpublish.templating.global_helper.core' => 'getEzpublish_Templating_GlobalHelper_CoreService',
            'ezpublish.templating.global_helper.legacy' => 'getEzpublish_Templating_GlobalHelper_LegacyService',
            'ezpublish.translation_helper' => 'getEzpublish_TranslationHelperService',
            'ezpublish.twig.extension.content' => 'getEzpublish_Twig_Extension_ContentService',
            'ezpublish.twig.extension.core' => 'getEzpublish_Twig_Extension_CoreService',
            'ezpublish.twig.extension.filesize' => 'getEzpublish_Twig_Extension_FilesizeService',
            'ezpublish.urlalias_generator' => 'getEzpublish_UrlaliasGeneratorService',
            'ezpublish.urlalias_router' => 'getEzpublish_UrlaliasRouterService',
            'ezpublish.user.hash_generator' => 'getEzpublish_User_HashGeneratorService',
            'ezpublish.user.identity' => 'getEzpublish_User_IdentityService',
            'ezpublish.user.identity_definer.role_id' => 'getEzpublish_User_IdentityDefiner_RoleIdService',
            'ezpublish.utils.deprecation_warner' => 'getEzpublish_Utils_DeprecationWarnerService',
            'ezpublish.view_manager' => 'getEzpublish_ViewManagerService',
            'ezpublish_legacy.block_view_provider' => 'getEzpublishLegacy_BlockViewProviderService',
            'ezpublish_legacy.config.resolver' => 'getEzpublishLegacy_Config_ResolverService',
            'ezpublish_legacy.config_scope_listener' => 'getEzpublishLegacy_ConfigScopeListenerService',
            'ezpublish_legacy.configuration_mapper' => 'getEzpublishLegacy_ConfigurationMapperService',
            'ezpublish_legacy.content_exception_handler' => 'getEzpublishLegacy_ContentExceptionHandlerService',
            'ezpublish_legacy.content_view_provider' => 'getEzpublishLegacy_ContentViewProviderService',
            'ezpublish_legacy.controller' => 'getEzpublishLegacy_ControllerService',
            'ezpublish_legacy.fieldtype.ezimage.variation_service' => 'getEzpublishLegacy_Fieldtype_Ezimage_VariationServiceService',
            'ezpublish_legacy.image_alias.cleaner' => 'getEzpublishLegacy_ImageAlias_CleanerService',
            'ezpublish_legacy.kernel.lazy' => 'getEzpublishLegacy_Kernel_LazyService',
            'ezpublish_legacy.kernel.lazy_loader' => 'getEzpublishLegacy_Kernel_LazyLoaderService',
            'ezpublish_legacy.kernel_handler.cli' => 'getEzpublishLegacy_KernelHandler_CliService',
            'ezpublish_legacy.kernel_handler.treemenu' => 'getEzpublishLegacy_KernelHandler_TreemenuService',
            'ezpublish_legacy.kernel_handler.web' => 'getEzpublishLegacy_KernelHandler_WebService',
            'ezpublish_legacy.legacy_bundles.extension_locator' => 'getEzpublishLegacy_LegacyBundles_ExtensionLocatorService',
            'ezpublish_legacy.legacy_bundles_mapper' => 'getEzpublishLegacy_LegacyBundlesMapperService',
            'ezpublish_legacy.legacy_cache_purger' => 'getEzpublishLegacy_LegacyCachePurgerService',
            'ezpublish_legacy.legacy_kernel_listener' => 'getEzpublishLegacy_LegacyKernelListenerService',
            'ezpublish_legacy.location_view_provider' => 'getEzpublishLegacy_LocationViewProviderService',
            'ezpublish_legacy.persistence_cache_purger' => 'getEzpublishLegacy_PersistenceCachePurgerService',
            'ezpublish_legacy.preview.controller' => 'getEzpublishLegacy_Preview_ControllerService',
            'ezpublish_legacy.request_listener' => 'getEzpublishLegacy_RequestListenerService',
            'ezpublish_legacy.response_listener' => 'getEzpublishLegacy_ResponseListenerService',
            'ezpublish_legacy.response_manager' => 'getEzpublishLegacy_ResponseManagerService',
            'ezpublish_legacy.rest_listener' => 'getEzpublishLegacy_RestListenerService',
            'ezpublish_legacy.router' => 'getEzpublishLegacy_RouterService',
            'ezpublish_legacy.security.login_cleanup_listener' => 'getEzpublishLegacy_Security_LoginCleanupListenerService',
            'ezpublish_legacy.security_mapper' => 'getEzpublishLegacy_SecurityMapperService',
            'ezpublish_legacy.session_mapper' => 'getEzpublishLegacy_SessionMapperService',
            'ezpublish_legacy.setup.controller' => 'getEzpublishLegacy_Setup_ControllerService',
            'ezpublish_legacy.setup_wizard.configuration_converter' => 'getEzpublishLegacy_SetupWizard_ConfigurationConverterService',
            'ezpublish_legacy.setup_wizard.configuration_dumper' => 'getEzpublishLegacy_SetupWizard_ConfigurationDumperService',
            'ezpublish_legacy.signalslot.assign_section' => 'getEzpublishLegacy_Signalslot_AssignSectionService',
            'ezpublish_legacy.signalslot.assign_user_to_user_group' => 'getEzpublishLegacy_Signalslot_AssignUserToUserGroupService',
            'ezpublish_legacy.signalslot.copy_content' => 'getEzpublishLegacy_Signalslot_CopyContentService',
            'ezpublish_legacy.signalslot.create_language' => 'getEzpublishLegacy_Signalslot_CreateLanguageService',
            'ezpublish_legacy.signalslot.create_location' => 'getEzpublishLegacy_Signalslot_CreateLocationService',
            'ezpublish_legacy.signalslot.create_object_state' => 'getEzpublishLegacy_Signalslot_CreateObjectStateService',
            'ezpublish_legacy.signalslot.create_object_state_group' => 'getEzpublishLegacy_Signalslot_CreateObjectStateGroupService',
            'ezpublish_legacy.signalslot.delete_content' => 'getEzpublishLegacy_Signalslot_DeleteContentService',
            'ezpublish_legacy.signalslot.delete_language' => 'getEzpublishLegacy_Signalslot_DeleteLanguageService',
            'ezpublish_legacy.signalslot.delete_location' => 'getEzpublishLegacy_Signalslot_DeleteLocationService',
            'ezpublish_legacy.signalslot.delete_object_state' => 'getEzpublishLegacy_Signalslot_DeleteObjectStateService',
            'ezpublish_legacy.signalslot.delete_object_state_group' => 'getEzpublishLegacy_Signalslot_DeleteObjectStateGroupService',
            'ezpublish_legacy.signalslot.delete_version' => 'getEzpublishLegacy_Signalslot_DeleteVersionService',
            'ezpublish_legacy.signalslot.disable_language' => 'getEzpublishLegacy_Signalslot_DisableLanguageService',
            'ezpublish_legacy.signalslot.enable_language' => 'getEzpublishLegacy_Signalslot_EnableLanguageService',
            'ezpublish_legacy.signalslot.hide_location' => 'getEzpublishLegacy_Signalslot_HideLocationService',
            'ezpublish_legacy.signalslot.move_subtree' => 'getEzpublishLegacy_Signalslot_MoveSubtreeService',
            'ezpublish_legacy.signalslot.publish_content_type_draft' => 'getEzpublishLegacy_Signalslot_PublishContentTypeDraftService',
            'ezpublish_legacy.signalslot.publish_version' => 'getEzpublishLegacy_Signalslot_PublishVersionService',
            'ezpublish_legacy.signalslot.set_content_state' => 'getEzpublishLegacy_Signalslot_SetContentStateService',
            'ezpublish_legacy.signalslot.set_priority_of_object_state' => 'getEzpublishLegacy_Signalslot_SetPriorityOfObjectStateService',
            'ezpublish_legacy.signalslot.swap_location' => 'getEzpublishLegacy_Signalslot_SwapLocationService',
            'ezpublish_legacy.signalslot.unassign_user_from_user_group' => 'getEzpublishLegacy_Signalslot_UnassignUserFromUserGroupService',
            'ezpublish_legacy.signalslot.unhide_location' => 'getEzpublishLegacy_Signalslot_UnhideLocationService',
            'ezpublish_legacy.signalslot.update_language_name' => 'getEzpublishLegacy_Signalslot_UpdateLanguageNameService',
            'ezpublish_legacy.signalslot.update_location' => 'getEzpublishLegacy_Signalslot_UpdateLocationService',
            'ezpublish_legacy.signalslot.update_object_state' => 'getEzpublishLegacy_Signalslot_UpdateObjectStateService',
            'ezpublish_legacy.signalslot.update_object_state_group' => 'getEzpublishLegacy_Signalslot_UpdateObjectStateGroupService',
            'ezpublish_legacy.signalslot.update_user' => 'getEzpublishLegacy_Signalslot_UpdateUserService',
            'ezpublish_legacy.siteaccess_mapper' => 'getEzpublishLegacy_SiteaccessMapperService',
            'ezpublish_legacy.templating.api_content_converter' => 'getEzpublishLegacy_Templating_ApiContentConverterService',
            'ezpublish_legacy.templating.delegating_converter' => 'getEzpublishLegacy_Templating_DelegatingConverterService',
            'ezpublish_legacy.templating.generic_converter' => 'getEzpublishLegacy_Templating_GenericConverterService',
            'ezpublish_legacy.templating.legacy_helper' => 'getEzpublishLegacy_Templating_LegacyHelperService',
            'ezpublish_legacy.templating.pageparts_converter' => 'getEzpublishLegacy_Templating_PagepartsConverterService',
            'ezpublish_legacy.treemenu.controller' => 'getEzpublishLegacy_Treemenu_ControllerService',
            'ezpublish_legacy.twig.extension' => 'getEzpublishLegacy_Twig_ExtensionService',
            'ezpublish_legacy.uri_helper' => 'getEzpublishLegacy_UriHelperService',
            'ezpublish_legacy.url_generator' => 'getEzpublishLegacy_UrlGeneratorService',
            'ezpublish_legacy.view_decorator.twig' => 'getEzpublishLegacy_ViewDecorator_TwigService',
            'ezpublish_legacy.webconfigurator' => 'getEzpublishLegacy_WebconfiguratorService',
            'ezpublish_legacy.webconfigurator.factory' => 'getEzpublishLegacy_Webconfigurator_FactoryService',
            'ezpublish_legacy.website_toolbar.controller' => 'getEzpublishLegacy_WebsiteToolbar_ControllerService',
            'ezpublish_rest.controller.base' => 'getEzpublishRest_Controller_BaseService',
            'ezpublish_rest.controller.binary_content' => 'getEzpublishRest_Controller_BinaryContentService',
            'ezpublish_rest.controller.content' => 'getEzpublishRest_Controller_ContentService',
            'ezpublish_rest.controller.content_type' => 'getEzpublishRest_Controller_ContentTypeService',
            'ezpublish_rest.controller.location' => 'getEzpublishRest_Controller_LocationService',
            'ezpublish_rest.controller.object_state' => 'getEzpublishRest_Controller_ObjectStateService',
            'ezpublish_rest.controller.options' => 'getEzpublishRest_Controller_OptionsService',
            'ezpublish_rest.controller.role' => 'getEzpublishRest_Controller_RoleService',
            'ezpublish_rest.controller.root' => 'getEzpublishRest_Controller_RootService',
            'ezpublish_rest.controller.section' => 'getEzpublishRest_Controller_SectionService',
            'ezpublish_rest.controller.services' => 'getEzpublishRest_Controller_ServicesService',
            'ezpublish_rest.controller.trash' => 'getEzpublishRest_Controller_TrashService',
            'ezpublish_rest.controller.url_alias' => 'getEzpublishRest_Controller_UrlAliasService',
            'ezpublish_rest.controller.url_wildcard' => 'getEzpublishRest_Controller_UrlWildcardService',
            'ezpublish_rest.controller.user' => 'getEzpublishRest_Controller_UserService',
            'ezpublish_rest.cors_option_provider' => 'getEzpublishRest_CorsOptionProviderService',
            'ezpublish_rest.csrf_listener' => 'getEzpublishRest_CsrfListenerService',
            'ezpublish_rest.factory' => 'getEzpublishRest_FactoryService',
            'ezpublish_rest.field_type_parser' => 'getEzpublishRest_FieldTypeParserService',
            'ezpublish_rest.field_type_processor.ezbinaryfile' => 'getEzpublishRest_FieldTypeProcessor_EzbinaryfileService',
            'ezpublish_rest.field_type_processor.ezdate' => 'getEzpublishRest_FieldTypeProcessor_EzdateService',
            'ezpublish_rest.field_type_processor.ezdatetime' => 'getEzpublishRest_FieldTypeProcessor_EzdatetimeService',
            'ezpublish_rest.field_type_processor.ezimage' => 'getEzpublishRest_FieldTypeProcessor_EzimageService',
            'ezpublish_rest.field_type_processor.ezmedia' => 'getEzpublishRest_FieldTypeProcessor_EzmediaService',
            'ezpublish_rest.field_type_processor.ezobjectrelation' => 'getEzpublishRest_FieldTypeProcessor_EzobjectrelationService',
            'ezpublish_rest.field_type_processor.ezobjectrelationlist' => 'getEzpublishRest_FieldTypeProcessor_EzobjectrelationlistService',
            'ezpublish_rest.field_type_processor.ezpage' => 'getEzpublishRest_FieldTypeProcessor_EzpageService',
            'ezpublish_rest.field_type_processor.ezrichtext' => 'getEzpublishRest_FieldTypeProcessor_EzrichtextService',
            'ezpublish_rest.field_type_processor.eztime' => 'getEzpublishRest_FieldTypeProcessor_EztimeService',
            'ezpublish_rest.field_type_processor.ezxmltext' => 'getEzpublishRest_FieldTypeProcessor_EzxmltextService',
            'ezpublish_rest.field_type_processor_registry' => 'getEzpublishRest_FieldTypeProcessorRegistryService',
            'ezpublish_rest.field_type_serializer' => 'getEzpublishRest_FieldTypeSerializerService',
            'ezpublish_rest.input.dispatcher' => 'getEzpublishRest_Input_DispatcherService',
            'ezpublish_rest.input.handler.json' => 'getEzpublishRest_Input_Handler_JsonService',
            'ezpublish_rest.input.handler.xml' => 'getEzpublishRest_Input_Handler_XmlService',
            'ezpublish_rest.input.parser.content' => 'getEzpublishRest_Input_Parser_ContentService',
            'ezpublish_rest.input.parser.contentcreate' => 'getEzpublishRest_Input_Parser_ContentcreateService',
            'ezpublish_rest.input.parser.contentinfo' => 'getEzpublishRest_Input_Parser_ContentinfoService',
            'ezpublish_rest.input.parser.contentlist' => 'getEzpublishRest_Input_Parser_ContentlistService',
            'ezpublish_rest.input.parser.contentobjectstates' => 'getEzpublishRest_Input_Parser_ContentobjectstatesService',
            'ezpublish_rest.input.parser.contenttype' => 'getEzpublishRest_Input_Parser_ContenttypeService',
            'ezpublish_rest.input.parser.contenttypecreate' => 'getEzpublishRest_Input_Parser_ContenttypecreateService',
            'ezpublish_rest.input.parser.contenttypegroup' => 'getEzpublishRest_Input_Parser_ContenttypegroupService',
            'ezpublish_rest.input.parser.contenttypegroupinput' => 'getEzpublishRest_Input_Parser_ContenttypegroupinputService',
            'ezpublish_rest.input.parser.contenttypegrouplist' => 'getEzpublishRest_Input_Parser_ContenttypegrouplistService',
            'ezpublish_rest.input.parser.contenttypegroupreflist' => 'getEzpublishRest_Input_Parser_ContenttypegroupreflistService',
            'ezpublish_rest.input.parser.contenttypelist' => 'getEzpublishRest_Input_Parser_ContenttypelistService',
            'ezpublish_rest.input.parser.contenttypeupdate' => 'getEzpublishRest_Input_Parser_ContenttypeupdateService',
            'ezpublish_rest.input.parser.contentupdate' => 'getEzpublishRest_Input_Parser_ContentupdateService',
            'ezpublish_rest.input.parser.errormessage' => 'getEzpublishRest_Input_Parser_ErrormessageService',
            'ezpublish_rest.input.parser.fielddefinition' => 'getEzpublishRest_Input_Parser_FielddefinitionService',
            'ezpublish_rest.input.parser.fielddefinitioncreate' => 'getEzpublishRest_Input_Parser_FielddefinitioncreateService',
            'ezpublish_rest.input.parser.fielddefinitionlist' => 'getEzpublishRest_Input_Parser_FielddefinitionlistService',
            'ezpublish_rest.input.parser.fielddefinitionupdate' => 'getEzpublishRest_Input_Parser_FielddefinitionupdateService',
            'ezpublish_rest.input.parser.internal.cgriterion.field' => 'getEzpublishRest_Input_Parser_Internal_Cgriterion_FieldService',
            'ezpublish_rest.input.parser.internal.criterion.contentid' => 'getEzpublishRest_Input_Parser_Internal_Criterion_ContentidService',
            'ezpublish_rest.input.parser.internal.criterion.contentremoteid' => 'getEzpublishRest_Input_Parser_Internal_Criterion_ContentremoteidService',
            'ezpublish_rest.input.parser.internal.criterion.contenttypegroupid' => 'getEzpublishRest_Input_Parser_Internal_Criterion_ContenttypegroupidService',
            'ezpublish_rest.input.parser.internal.criterion.contenttypeid' => 'getEzpublishRest_Input_Parser_Internal_Criterion_ContenttypeidService',
            'ezpublish_rest.input.parser.internal.criterion.contenttypeidentifier' => 'getEzpublishRest_Input_Parser_Internal_Criterion_ContenttypeidentifierService',
            'ezpublish_rest.input.parser.internal.criterion.datemetadata' => 'getEzpublishRest_Input_Parser_Internal_Criterion_DatemetadataService',
            'ezpublish_rest.input.parser.internal.criterion.fulltext' => 'getEzpublishRest_Input_Parser_Internal_Criterion_FulltextService',
            'ezpublish_rest.input.parser.internal.criterion.languagecode' => 'getEzpublishRest_Input_Parser_Internal_Criterion_LanguagecodeService',
            'ezpublish_rest.input.parser.internal.criterion.locationid' => 'getEzpublishRest_Input_Parser_Internal_Criterion_LocationidService',
            'ezpublish_rest.input.parser.internal.criterion.locationremoteid' => 'getEzpublishRest_Input_Parser_Internal_Criterion_LocationremoteidService',
            'ezpublish_rest.input.parser.internal.criterion.logicaland' => 'getEzpublishRest_Input_Parser_Internal_Criterion_LogicalandService',
            'ezpublish_rest.input.parser.internal.criterion.logicalnot' => 'getEzpublishRest_Input_Parser_Internal_Criterion_LogicalnotService',
            'ezpublish_rest.input.parser.internal.criterion.logicaloperator' => 'getEzpublishRest_Input_Parser_Internal_Criterion_LogicaloperatorService',
            'ezpublish_rest.input.parser.internal.criterion.logicalor' => 'getEzpublishRest_Input_Parser_Internal_Criterion_LogicalorService',
            'ezpublish_rest.input.parser.internal.criterion.morelikethis' => 'getEzpublishRest_Input_Parser_Internal_Criterion_MorelikethisService',
            'ezpublish_rest.input.parser.internal.criterion.objectstateid' => 'getEzpublishRest_Input_Parser_Internal_Criterion_ObjectstateidService',
            'ezpublish_rest.input.parser.internal.criterion.operator' => 'getEzpublishRest_Input_Parser_Internal_Criterion_OperatorService',
            'ezpublish_rest.input.parser.internal.criterion.parentlocationid' => 'getEzpublishRest_Input_Parser_Internal_Criterion_ParentlocationidService',
            'ezpublish_rest.input.parser.internal.criterion.parentlocationremoteid' => 'getEzpublishRest_Input_Parser_Internal_Criterion_ParentlocationremoteidService',
            'ezpublish_rest.input.parser.internal.criterion.sectionid' => 'getEzpublishRest_Input_Parser_Internal_Criterion_SectionidService',
            'ezpublish_rest.input.parser.internal.criterion.sectionidentifier' => 'getEzpublishRest_Input_Parser_Internal_Criterion_SectionidentifierService',
            'ezpublish_rest.input.parser.internal.criterion.subtree' => 'getEzpublishRest_Input_Parser_Internal_Criterion_SubtreeService',
            'ezpublish_rest.input.parser.internal.criterion.usermetadata' => 'getEzpublishRest_Input_Parser_Internal_Criterion_UsermetadataService',
            'ezpublish_rest.input.parser.internal.criterion.visibility' => 'getEzpublishRest_Input_Parser_Internal_Criterion_VisibilityService',
            'ezpublish_rest.input.parser.limitation' => 'getEzpublishRest_Input_Parser_LimitationService',
            'ezpublish_rest.input.parser.location' => 'getEzpublishRest_Input_Parser_LocationService',
            'ezpublish_rest.input.parser.locationcreate' => 'getEzpublishRest_Input_Parser_LocationcreateService',
            'ezpublish_rest.input.parser.locationupdate' => 'getEzpublishRest_Input_Parser_LocationupdateService',
            'ezpublish_rest.input.parser.objectstate' => 'getEzpublishRest_Input_Parser_ObjectstateService',
            'ezpublish_rest.input.parser.objectstatecreate' => 'getEzpublishRest_Input_Parser_ObjectstatecreateService',
            'ezpublish_rest.input.parser.objectstategroup' => 'getEzpublishRest_Input_Parser_ObjectstategroupService',
            'ezpublish_rest.input.parser.objectstategroupcreate' => 'getEzpublishRest_Input_Parser_ObjectstategroupcreateService',
            'ezpublish_rest.input.parser.objectstategrouplist' => 'getEzpublishRest_Input_Parser_ObjectstategrouplistService',
            'ezpublish_rest.input.parser.objectstategroupupdate' => 'getEzpublishRest_Input_Parser_ObjectstategroupupdateService',
            'ezpublish_rest.input.parser.objectstatelist' => 'getEzpublishRest_Input_Parser_ObjectstatelistService',
            'ezpublish_rest.input.parser.objectstateupdate' => 'getEzpublishRest_Input_Parser_ObjectstateupdateService',
            'ezpublish_rest.input.parser.policy' => 'getEzpublishRest_Input_Parser_PolicyService',
            'ezpublish_rest.input.parser.policycreate' => 'getEzpublishRest_Input_Parser_PolicycreateService',
            'ezpublish_rest.input.parser.policylist' => 'getEzpublishRest_Input_Parser_PolicylistService',
            'ezpublish_rest.input.parser.policyupdate' => 'getEzpublishRest_Input_Parser_PolicyupdateService',
            'ezpublish_rest.input.parser.relation' => 'getEzpublishRest_Input_Parser_RelationService',
            'ezpublish_rest.input.parser.relationcreate' => 'getEzpublishRest_Input_Parser_RelationcreateService',
            'ezpublish_rest.input.parser.relationlist' => 'getEzpublishRest_Input_Parser_RelationlistService',
            'ezpublish_rest.input.parser.role' => 'getEzpublishRest_Input_Parser_RoleService',
            'ezpublish_rest.input.parser.roleassigninput' => 'getEzpublishRest_Input_Parser_RoleassigninputService',
            'ezpublish_rest.input.parser.roleassignment' => 'getEzpublishRest_Input_Parser_RoleassignmentService',
            'ezpublish_rest.input.parser.roleassignmentlist' => 'getEzpublishRest_Input_Parser_RoleassignmentlistService',
            'ezpublish_rest.input.parser.roleinput' => 'getEzpublishRest_Input_Parser_RoleinputService',
            'ezpublish_rest.input.parser.rolelist' => 'getEzpublishRest_Input_Parser_RolelistService',
            'ezpublish_rest.input.parser.section' => 'getEzpublishRest_Input_Parser_SectionService',
            'ezpublish_rest.input.parser.sectioninput' => 'getEzpublishRest_Input_Parser_SectioninputService',
            'ezpublish_rest.input.parser.sectionlist' => 'getEzpublishRest_Input_Parser_SectionlistService',
            'ezpublish_rest.input.parser.sessioninput' => 'getEzpublishRest_Input_Parser_SessioninputService',
            'ezpublish_rest.input.parser.urlaliascreate' => 'getEzpublishRest_Input_Parser_UrlaliascreateService',
            'ezpublish_rest.input.parser.urlwildcardcreate' => 'getEzpublishRest_Input_Parser_UrlwildcardcreateService',
            'ezpublish_rest.input.parser.usercreate' => 'getEzpublishRest_Input_Parser_UsercreateService',
            'ezpublish_rest.input.parser.usergroupcreate' => 'getEzpublishRest_Input_Parser_UsergroupcreateService',
            'ezpublish_rest.input.parser.usergroupupdate' => 'getEzpublishRest_Input_Parser_UsergroupupdateService',
            'ezpublish_rest.input.parser.userupdate' => 'getEzpublishRest_Input_Parser_UserupdateService',
            'ezpublish_rest.input.parser.versioninfo' => 'getEzpublishRest_Input_Parser_VersioninfoService',
            'ezpublish_rest.input.parser.versionupdate' => 'getEzpublishRest_Input_Parser_VersionupdateService',
            'ezpublish_rest.input.parser.viewinput' => 'getEzpublishRest_Input_Parser_ViewinputService',
            'ezpublish_rest.input.parsing_dispatcher' => 'getEzpublishRest_Input_ParsingDispatcherService',
            'ezpublish_rest.output.generator.json' => 'getEzpublishRest_Output_Generator_JsonService',
            'ezpublish_rest.output.generator.json.field_type_hash_generator' => 'getEzpublishRest_Output_Generator_Json_FieldTypeHashGeneratorService',
            'ezpublish_rest.output.generator.xml' => 'getEzpublishRest_Output_Generator_XmlService',
            'ezpublish_rest.output.generator.xml.field_type_hash_generator' => 'getEzpublishRest_Output_Generator_Xml_FieldTypeHashGeneratorService',
            'ezpublish_rest.output.value_object_visitor.badrequestexception' => 'getEzpublishRest_Output_ValueObjectVisitor_BadrequestexceptionService',
            'ezpublish_rest.output.value_object_visitor.badstateexception' => 'getEzpublishRest_Output_ValueObjectVisitor_BadstateexceptionService',
            'ezpublish_rest.output.value_object_visitor.base' => 'getEzpublishRest_Output_ValueObjectVisitor_BaseService',
            'ezpublish_rest.output.value_object_visitor.cached_value' => 'getEzpublishRest_Output_ValueObjectVisitor_CachedValueService',
            'ezpublish_rest.output.value_object_visitor.conflict' => 'getEzpublishRest_Output_ValueObjectVisitor_ConflictService',
            'ezpublish_rest.output.value_object_visitor.contentlist' => 'getEzpublishRest_Output_ValueObjectVisitor_ContentlistService',
            'ezpublish_rest.output.value_object_visitor.contentobjectstates' => 'getEzpublishRest_Output_ValueObjectVisitor_ContentobjectstatesService',
            'ezpublish_rest.output.value_object_visitor.contenttypecreatestruct' => 'getEzpublishRest_Output_ValueObjectVisitor_ContenttypecreatestructService',
            'ezpublish_rest.output.value_object_visitor.contenttypegroup' => 'getEzpublishRest_Output_ValueObjectVisitor_ContenttypegroupService',
            'ezpublish_rest.output.value_object_visitor.contenttypegroupcreatestruct' => 'getEzpublishRest_Output_ValueObjectVisitor_ContenttypegroupcreatestructService',
            'ezpublish_rest.output.value_object_visitor.contenttypegrouplist' => 'getEzpublishRest_Output_ValueObjectVisitor_ContenttypegrouplistService',
            'ezpublish_rest.output.value_object_visitor.contenttypegroupreflist' => 'getEzpublishRest_Output_ValueObjectVisitor_ContenttypegroupreflistService',
            'ezpublish_rest.output.value_object_visitor.contenttypegroupupdatestruct' => 'getEzpublishRest_Output_ValueObjectVisitor_ContenttypegroupupdatestructService',
            'ezpublish_rest.output.value_object_visitor.contenttypeinfolist' => 'getEzpublishRest_Output_ValueObjectVisitor_ContenttypeinfolistService',
            'ezpublish_rest.output.value_object_visitor.contenttypelist' => 'getEzpublishRest_Output_ValueObjectVisitor_ContenttypelistService',
            'ezpublish_rest.output.value_object_visitor.countrylist' => 'getEzpublishRest_Output_ValueObjectVisitor_CountrylistService',
            'ezpublish_rest.output.value_object_visitor.createdcontent' => 'getEzpublishRest_Output_ValueObjectVisitor_CreatedcontentService',
            'ezpublish_rest.output.value_object_visitor.createdcontenttype' => 'getEzpublishRest_Output_ValueObjectVisitor_CreatedcontenttypeService',
            'ezpublish_rest.output.value_object_visitor.createdcontenttypegroup' => 'getEzpublishRest_Output_ValueObjectVisitor_CreatedcontenttypegroupService',
            'ezpublish_rest.output.value_object_visitor.createdfielddefinition' => 'getEzpublishRest_Output_ValueObjectVisitor_CreatedfielddefinitionService',
            'ezpublish_rest.output.value_object_visitor.createdlocation' => 'getEzpublishRest_Output_ValueObjectVisitor_CreatedlocationService',
            'ezpublish_rest.output.value_object_visitor.createdobjectstate' => 'getEzpublishRest_Output_ValueObjectVisitor_CreatedobjectstateService',
            'ezpublish_rest.output.value_object_visitor.createdobjectstategroup' => 'getEzpublishRest_Output_ValueObjectVisitor_CreatedobjectstategroupService',
            'ezpublish_rest.output.value_object_visitor.createdpolicy' => 'getEzpublishRest_Output_ValueObjectVisitor_CreatedpolicyService',
            'ezpublish_rest.output.value_object_visitor.createdrelation' => 'getEzpublishRest_Output_ValueObjectVisitor_CreatedrelationService',
            'ezpublish_rest.output.value_object_visitor.createdrole' => 'getEzpublishRest_Output_ValueObjectVisitor_CreatedroleService',
            'ezpublish_rest.output.value_object_visitor.createdsection' => 'getEzpublishRest_Output_ValueObjectVisitor_CreatedsectionService',
            'ezpublish_rest.output.value_object_visitor.createdurlalias' => 'getEzpublishRest_Output_ValueObjectVisitor_CreatedurlaliasService',
            'ezpublish_rest.output.value_object_visitor.createdurlwildcard' => 'getEzpublishRest_Output_ValueObjectVisitor_CreatedurlwildcardService',
            'ezpublish_rest.output.value_object_visitor.createduser' => 'getEzpublishRest_Output_ValueObjectVisitor_CreateduserService',
            'ezpublish_rest.output.value_object_visitor.createdusergroup' => 'getEzpublishRest_Output_ValueObjectVisitor_CreatedusergroupService',
            'ezpublish_rest.output.value_object_visitor.createdversion' => 'getEzpublishRest_Output_ValueObjectVisitor_CreatedversionService',
            'ezpublish_rest.output.value_object_visitor.dispatcher' => 'getEzpublishRest_Output_ValueObjectVisitor_DispatcherService',
            'ezpublish_rest.output.value_object_visitor.exception' => 'getEzpublishRest_Output_ValueObjectVisitor_ExceptionService',
            'ezpublish_rest.output.value_object_visitor.exception.invalidargumentexception' => 'getEzpublishRest_Output_ValueObjectVisitor_Exception_InvalidargumentexceptionService',
            'ezpublish_rest.output.value_object_visitor.fielddefinitioncreatestruct' => 'getEzpublishRest_Output_ValueObjectVisitor_FielddefinitioncreatestructService',
            'ezpublish_rest.output.value_object_visitor.fielddefinitionlist' => 'getEzpublishRest_Output_ValueObjectVisitor_FielddefinitionlistService',
            'ezpublish_rest.output.value_object_visitor.forbiddenexception' => 'getEzpublishRest_Output_ValueObjectVisitor_ForbiddenexceptionService',
            'ezpublish_rest.output.value_object_visitor.imagevariation' => 'getEzpublishRest_Output_ValueObjectVisitor_ImagevariationService',
            'ezpublish_rest.output.value_object_visitor.invalidargumentexception' => 'getEzpublishRest_Output_ValueObjectVisitor_InvalidargumentexceptionService',
            'ezpublish_rest.output.value_object_visitor.limitation' => 'getEzpublishRest_Output_ValueObjectVisitor_LimitationService',
            'ezpublish_rest.output.value_object_visitor.locationcreatestruct' => 'getEzpublishRest_Output_ValueObjectVisitor_LocationcreatestructService',
            'ezpublish_rest.output.value_object_visitor.locationlist' => 'getEzpublishRest_Output_ValueObjectVisitor_LocationlistService',
            'ezpublish_rest.output.value_object_visitor.locationupdatestruct' => 'getEzpublishRest_Output_ValueObjectVisitor_LocationupdatestructService',
            'ezpublish_rest.output.value_object_visitor.nocontent' => 'getEzpublishRest_Output_ValueObjectVisitor_NocontentService',
            'ezpublish_rest.output.value_object_visitor.notfoundexception' => 'getEzpublishRest_Output_ValueObjectVisitor_NotfoundexceptionService',
            'ezpublish_rest.output.value_object_visitor.notimplementedexception' => 'getEzpublishRest_Output_ValueObjectVisitor_NotimplementedexceptionService',
            'ezpublish_rest.output.value_object_visitor.objectstatecreatestruct' => 'getEzpublishRest_Output_ValueObjectVisitor_ObjectstatecreatestructService',
            'ezpublish_rest.output.value_object_visitor.objectstategroup' => 'getEzpublishRest_Output_ValueObjectVisitor_ObjectstategroupService',
            'ezpublish_rest.output.value_object_visitor.objectstategroupcreatestruct' => 'getEzpublishRest_Output_ValueObjectVisitor_ObjectstategroupcreatestructService',
            'ezpublish_rest.output.value_object_visitor.objectstategrouplist' => 'getEzpublishRest_Output_ValueObjectVisitor_ObjectstategrouplistService',
            'ezpublish_rest.output.value_object_visitor.objectstategroupupdatastruct' => 'getEzpublishRest_Output_ValueObjectVisitor_ObjectstategroupupdatastructService',
            'ezpublish_rest.output.value_object_visitor.objectstatelist' => 'getEzpublishRest_Output_ValueObjectVisitor_ObjectstatelistService',
            'ezpublish_rest.output.value_object_visitor.objectstateupdatestruct' => 'getEzpublishRest_Output_ValueObjectVisitor_ObjectstateupdatestructService',
            'ezpublish_rest.output.value_object_visitor.options' => 'getEzpublishRest_Output_ValueObjectVisitor_OptionsService',
            'ezpublish_rest.output.value_object_visitor.permanentredirect' => 'getEzpublishRest_Output_ValueObjectVisitor_PermanentredirectService',
            'ezpublish_rest.output.value_object_visitor.policy' => 'getEzpublishRest_Output_ValueObjectVisitor_PolicyService',
            'ezpublish_rest.output.value_object_visitor.policycreatestruct' => 'getEzpublishRest_Output_ValueObjectVisitor_PolicycreatestructService',
            'ezpublish_rest.output.value_object_visitor.policylist' => 'getEzpublishRest_Output_ValueObjectVisitor_PolicylistService',
            'ezpublish_rest.output.value_object_visitor.policyupdatestruct' => 'getEzpublishRest_Output_ValueObjectVisitor_PolicyupdatestructService',
            'ezpublish_rest.output.value_object_visitor.relationlist' => 'getEzpublishRest_Output_ValueObjectVisitor_RelationlistService',
            'ezpublish_rest.output.value_object_visitor.resourcecreated' => 'getEzpublishRest_Output_ValueObjectVisitor_ResourcecreatedService',
            'ezpublish_rest.output.value_object_visitor.restcontent' => 'getEzpublishRest_Output_ValueObjectVisitor_RestcontentService',
            'ezpublish_rest.output.value_object_visitor.restcontenttype' => 'getEzpublishRest_Output_ValueObjectVisitor_RestcontenttypeService',
            'ezpublish_rest.output.value_object_visitor.restexecutedview' => 'getEzpublishRest_Output_ValueObjectVisitor_RestexecutedviewService',
            'ezpublish_rest.output.value_object_visitor.restfielddefinition' => 'getEzpublishRest_Output_ValueObjectVisitor_RestfielddefinitionService',
            'ezpublish_rest.output.value_object_visitor.restlocation' => 'getEzpublishRest_Output_ValueObjectVisitor_RestlocationService',
            'ezpublish_rest.output.value_object_visitor.restobjectstate' => 'getEzpublishRest_Output_ValueObjectVisitor_RestobjectstateService',
            'ezpublish_rest.output.value_object_visitor.restrelation' => 'getEzpublishRest_Output_ValueObjectVisitor_RestrelationService',
            'ezpublish_rest.output.value_object_visitor.resttrashitem' => 'getEzpublishRest_Output_ValueObjectVisitor_ResttrashitemService',
            'ezpublish_rest.output.value_object_visitor.restuser' => 'getEzpublishRest_Output_ValueObjectVisitor_RestuserService',
            'ezpublish_rest.output.value_object_visitor.restusergroup' => 'getEzpublishRest_Output_ValueObjectVisitor_RestusergroupService',
            'ezpublish_rest.output.value_object_visitor.restusergrouproleassignment' => 'getEzpublishRest_Output_ValueObjectVisitor_RestusergrouproleassignmentService',
            'ezpublish_rest.output.value_object_visitor.restuserroleassignment' => 'getEzpublishRest_Output_ValueObjectVisitor_RestuserroleassignmentService',
            'ezpublish_rest.output.value_object_visitor.role' => 'getEzpublishRest_Output_ValueObjectVisitor_RoleService',
            'ezpublish_rest.output.value_object_visitor.roleassignment' => 'getEzpublishRest_Output_ValueObjectVisitor_RoleassignmentService',
            'ezpublish_rest.output.value_object_visitor.roleassignmentlist' => 'getEzpublishRest_Output_ValueObjectVisitor_RoleassignmentlistService',
            'ezpublish_rest.output.value_object_visitor.rolecreatestruct' => 'getEzpublishRest_Output_ValueObjectVisitor_RolecreatestructService',
            'ezpublish_rest.output.value_object_visitor.rolelist' => 'getEzpublishRest_Output_ValueObjectVisitor_RolelistService',
            'ezpublish_rest.output.value_object_visitor.roleupdatestruct' => 'getEzpublishRest_Output_ValueObjectVisitor_RoleupdatestructService',
            'ezpublish_rest.output.value_object_visitor.root' => 'getEzpublishRest_Output_ValueObjectVisitor_RootService',
            'ezpublish_rest.output.value_object_visitor.section' => 'getEzpublishRest_Output_ValueObjectVisitor_SectionService',
            'ezpublish_rest.output.value_object_visitor.sectioncreatestruct' => 'getEzpublishRest_Output_ValueObjectVisitor_SectioncreatestructService',
            'ezpublish_rest.output.value_object_visitor.sectionlist' => 'getEzpublishRest_Output_ValueObjectVisitor_SectionlistService',
            'ezpublish_rest.output.value_object_visitor.sectionupdatestruct' => 'getEzpublishRest_Output_ValueObjectVisitor_SectionupdatestructService',
            'ezpublish_rest.output.value_object_visitor.seeother' => 'getEzpublishRest_Output_ValueObjectVisitor_SeeotherService',
            'ezpublish_rest.output.value_object_visitor.temporaryredirect' => 'getEzpublishRest_Output_ValueObjectVisitor_TemporaryredirectService',
            'ezpublish_rest.output.value_object_visitor.trash' => 'getEzpublishRest_Output_ValueObjectVisitor_TrashService',
            'ezpublish_rest.output.value_object_visitor.unauthorizedexception' => 'getEzpublishRest_Output_ValueObjectVisitor_UnauthorizedexceptionService',
            'ezpublish_rest.output.value_object_visitor.urlalias' => 'getEzpublishRest_Output_ValueObjectVisitor_UrlaliasService',
            'ezpublish_rest.output.value_object_visitor.urlaliaslist' => 'getEzpublishRest_Output_ValueObjectVisitor_UrlaliaslistService',
            'ezpublish_rest.output.value_object_visitor.urlaliasreflist' => 'getEzpublishRest_Output_ValueObjectVisitor_UrlaliasreflistService',
            'ezpublish_rest.output.value_object_visitor.urlwildcard' => 'getEzpublishRest_Output_ValueObjectVisitor_UrlwildcardService',
            'ezpublish_rest.output.value_object_visitor.urlwildcardlist' => 'getEzpublishRest_Output_ValueObjectVisitor_UrlwildcardlistService',
            'ezpublish_rest.output.value_object_visitor.usergrouplist' => 'getEzpublishRest_Output_ValueObjectVisitor_UsergrouplistService',
            'ezpublish_rest.output.value_object_visitor.usergroupreflist' => 'getEzpublishRest_Output_ValueObjectVisitor_UsergroupreflistService',
            'ezpublish_rest.output.value_object_visitor.userlist' => 'getEzpublishRest_Output_ValueObjectVisitor_UserlistService',
            'ezpublish_rest.output.value_object_visitor.userreflist' => 'getEzpublishRest_Output_ValueObjectVisitor_UserreflistService',
            'ezpublish_rest.output.value_object_visitor.usersession' => 'getEzpublishRest_Output_ValueObjectVisitor_UsersessionService',
            'ezpublish_rest.output.value_object_visitor.usersessiondeleted' => 'getEzpublishRest_Output_ValueObjectVisitor_UsersessiondeletedService',
            'ezpublish_rest.output.value_object_visitor.version' => 'getEzpublishRest_Output_ValueObjectVisitor_VersionService',
            'ezpublish_rest.output.value_object_visitor.versioninfo' => 'getEzpublishRest_Output_ValueObjectVisitor_VersioninfoService',
            'ezpublish_rest.output.value_object_visitor.versionlist' => 'getEzpublishRest_Output_ValueObjectVisitor_VersionlistService',
            'ezpublish_rest.output.visitor.dispatcher' => 'getEzpublishRest_Output_Visitor_DispatcherService',
            'ezpublish_rest.output.visitor.json' => 'getEzpublishRest_Output_Visitor_JsonService',
            'ezpublish_rest.output.visitor.xml' => 'getEzpublishRest_Output_Visitor_XmlService',
            'ezpublish_rest.parser_tools' => 'getEzpublishRest_ParserToolsService',
            'ezpublish_rest.request_listener' => 'getEzpublishRest_RequestListenerService',
            'ezpublish_rest.request_parser' => 'getEzpublishRest_RequestParserService',
            'ezpublish_rest.response_listener' => 'getEzpublishRest_ResponseListenerService',
            'ezpublish_rest.routing.options_loader' => 'getEzpublishRest_Routing_OptionsLoaderService',
            'ezpublish_rest.routing.options_loader.mapper' => 'getEzpublishRest_Routing_OptionsLoader_MapperService',
            'ezpublish_rest.routing.options_loader.route_collection_mapper' => 'getEzpublishRest_Routing_OptionsLoader_RouteCollectionMapperService',
            'ezpublish_rest.security.authentication.logout_handler' => 'getEzpublishRest_Security_Authentication_LogoutHandlerService',
            'ezpublish_rest.templated_router' => 'getEzpublishRest_TemplatedRouterService',
            'file_locator' => 'getFileLocatorService',
            'filesystem' => 'getFilesystemService',
            'form.csrf_provider' => 'getForm_CsrfProviderService',
            'form.factory' => 'getForm_FactoryService',
            'form.registry' => 'getForm_RegistryService',
            'form.resolved_type_factory' => 'getForm_ResolvedTypeFactoryService',
            'form.type.birthday' => 'getForm_Type_BirthdayService',
            'form.type.button' => 'getForm_Type_ButtonService',
            'form.type.checkbox' => 'getForm_Type_CheckboxService',
            'form.type.choice' => 'getForm_Type_ChoiceService',
            'form.type.collection' => 'getForm_Type_CollectionService',
            'form.type.country' => 'getForm_Type_CountryService',
            'form.type.currency' => 'getForm_Type_CurrencyService',
            'form.type.date' => 'getForm_Type_DateService',
            'form.type.datetime' => 'getForm_Type_DatetimeService',
            'form.type.email' => 'getForm_Type_EmailService',
            'form.type.file' => 'getForm_Type_FileService',
            'form.type.form' => 'getForm_Type_FormService',
            'form.type.hidden' => 'getForm_Type_HiddenService',
            'form.type.integer' => 'getForm_Type_IntegerService',
            'form.type.language' => 'getForm_Type_LanguageService',
            'form.type.locale' => 'getForm_Type_LocaleService',
            'form.type.money' => 'getForm_Type_MoneyService',
            'form.type.number' => 'getForm_Type_NumberService',
            'form.type.password' => 'getForm_Type_PasswordService',
            'form.type.percent' => 'getForm_Type_PercentService',
            'form.type.radio' => 'getForm_Type_RadioService',
            'form.type.repeated' => 'getForm_Type_RepeatedService',
            'form.type.reset' => 'getForm_Type_ResetService',
            'form.type.search' => 'getForm_Type_SearchService',
            'form.type.submit' => 'getForm_Type_SubmitService',
            'form.type.text' => 'getForm_Type_TextService',
            'form.type.textarea' => 'getForm_Type_TextareaService',
            'form.type.time' => 'getForm_Type_TimeService',
            'form.type.timezone' => 'getForm_Type_TimezoneService',
            'form.type.url' => 'getForm_Type_UrlService',
            'form.type_extension.csrf' => 'getForm_TypeExtension_CsrfService',
            'form.type_extension.form.http_foundation' => 'getForm_TypeExtension_Form_HttpFoundationService',
            'form.type_extension.form.validator' => 'getForm_TypeExtension_Form_ValidatorService',
            'form.type_extension.repeated.validator' => 'getForm_TypeExtension_Repeated_ValidatorService',
            'form.type_extension.submit.validator' => 'getForm_TypeExtension_Submit_ValidatorService',
            'form.type_guesser.validator' => 'getForm_TypeGuesser_ValidatorService',
            'fos_http_cache.cache_manager' => 'getFosHttpCache_CacheManagerService',
            'fos_http_cache.command.invalidate_path' => 'getFosHttpCache_Command_InvalidatePathService',
            'fos_http_cache.command.invalidate_regex' => 'getFosHttpCache_Command_InvalidateRegexService',
            'fos_http_cache.command.invalidate_tag' => 'getFosHttpCache_Command_InvalidateTagService',
            'fos_http_cache.command.refresh_path' => 'getFosHttpCache_Command_RefreshPathService',
            'fos_http_cache.event_listener.invalidation' => 'getFosHttpCache_EventListener_InvalidationService',
            'fos_http_cache.event_listener.log' => 'getFosHttpCache_EventListener_LogService',
            'fos_http_cache.event_listener.tag' => 'getFosHttpCache_EventListener_TagService',
            'fos_http_cache.event_listener.user_context' => 'getFosHttpCache_EventListener_UserContextService',
            'fos_http_cache.proxy_client.varnish' => 'getFosHttpCache_ProxyClient_VarnishService',
            'fos_http_cache.user_context.hash_generator' => 'getFosHttpCache_UserContext_HashGeneratorService',
            'fos_http_cache.user_context.logout_handler' => 'getFosHttpCache_UserContext_LogoutHandlerService',
            'fos_http_cache.user_context.request_matcher' => 'getFosHttpCache_UserContext_RequestMatcherService',
            'fragment.handler' => 'getFragment_HandlerService',
            'fragment.listener' => 'getFragment_ListenerService',
            'fragment.renderer.esi' => 'getFragment_Renderer_EsiService',
            'fragment.renderer.hinclude' => 'getFragment_Renderer_HincludeService',
            'fragment.renderer.inline' => 'getFragment_Renderer_InlineService',
            'hautelook.router.template' => 'getHautelook_Router_TemplateService',
            'http_kernel' => 'getHttpKernelService',
            'kernel' => 'getKernelService',
            'knp_menu.factory' => 'getKnpMenu_FactoryService',
            'knp_menu.menu_provider' => 'getKnpMenu_MenuProviderService',
            'knp_menu.renderer.list' => 'getKnpMenu_Renderer_ListService',
            'knp_menu.renderer.twig' => 'getKnpMenu_Renderer_TwigService',
            'knp_menu.renderer_provider' => 'getKnpMenu_RendererProviderService',
            'liip_imagine' => 'getLiipImagineService',
            'liip_imagine.binary.loader.default' => 'getLiipImagine_Binary_Loader_DefaultService',
            'liip_imagine.binary.loader.prototype.filesystem' => 'getLiipImagine_Binary_Loader_Prototype_FilesystemService',
            'liip_imagine.binary.loader.prototype.stream' => 'getLiipImagine_Binary_Loader_Prototype_StreamService',
            'liip_imagine.binary.mime_type_guesser' => 'getLiipImagine_Binary_MimeTypeGuesserService',
            'liip_imagine.cache.manager' => 'getLiipImagine_Cache_ManagerService',
            'liip_imagine.cache.resolver.default' => 'getLiipImagine_Cache_Resolver_DefaultService',
            'liip_imagine.cache.resolver.no_cache_web_path' => 'getLiipImagine_Cache_Resolver_NoCacheWebPathService',
            'liip_imagine.cache.signer' => 'getLiipImagine_Cache_SignerService',
            'liip_imagine.controller' => 'getLiipImagine_ControllerService',
            'liip_imagine.data.manager' => 'getLiipImagine_Data_ManagerService',
            'liip_imagine.extension_guesser' => 'getLiipImagine_ExtensionGuesserService',
            'liip_imagine.filter.configuration' => 'getLiipImagine_Filter_ConfigurationService',
            'liip_imagine.filter.loader.auto_rotate' => 'getLiipImagine_Filter_Loader_AutoRotateService',
            'liip_imagine.filter.loader.background' => 'getLiipImagine_Filter_Loader_BackgroundService',
            'liip_imagine.filter.loader.crop' => 'getLiipImagine_Filter_Loader_CropService',
            'liip_imagine.filter.loader.paste' => 'getLiipImagine_Filter_Loader_PasteService',
            'liip_imagine.filter.loader.relative_resize' => 'getLiipImagine_Filter_Loader_RelativeResizeService',
            'liip_imagine.filter.loader.resize' => 'getLiipImagine_Filter_Loader_ResizeService',
            'liip_imagine.filter.loader.strip' => 'getLiipImagine_Filter_Loader_StripService',
            'liip_imagine.filter.loader.thumbnail' => 'getLiipImagine_Filter_Loader_ThumbnailService',
            'liip_imagine.filter.loader.upscale' => 'getLiipImagine_Filter_Loader_UpscaleService',
            'liip_imagine.filter.loader.watermark' => 'getLiipImagine_Filter_Loader_WatermarkService',
            'liip_imagine.filter.manager' => 'getLiipImagine_Filter_ManagerService',
            'liip_imagine.filter.post_processor.jpegoptim' => 'getLiipImagine_Filter_PostProcessor_JpegoptimService',
            'liip_imagine.form.type.image' => 'getLiipImagine_Form_Type_ImageService',
            'liip_imagine.mime_type_guesser' => 'getLiipImagine_MimeTypeGuesserService',
            'liip_imagine.templating.helper' => 'getLiipImagine_Templating_HelperService',
            'locale_listener' => 'getLocaleListenerService',
            'logger' => 'getLoggerService',
            'monolog.handler.console' => 'getMonolog_Handler_ConsoleService',
            'monolog.handler.main' => 'getMonolog_Handler_MainService',
            'monolog.handler.nested' => 'getMonolog_Handler_NestedService',
            'monolog.logger.assetic' => 'getMonolog_Logger_AsseticService',
            'monolog.logger.doctrine' => 'getMonolog_Logger_DoctrineService',
            'monolog.logger.emergency' => 'getMonolog_Logger_EmergencyService',
            'monolog.logger.request' => 'getMonolog_Logger_RequestService',
            'monolog.logger.router' => 'getMonolog_Logger_RouterService',
            'monolog.logger.security' => 'getMonolog_Logger_SecurityService',
            'nelmio_cors.cors_listener' => 'getNelmioCors_CorsListenerService',
            'nelmio_cors.options_provider.config' => 'getNelmioCors_OptionsProvider_ConfigService',
            'oneup_flysystem.mount_manager' => 'getOneupFlysystem_MountManagerService',
            'pagerfanta.convert_not_valid_current_page_to_not_found_listener' => 'getPagerfanta_ConvertNotValidCurrentPageToNotFoundListenerService',
            'pagerfanta.convert_not_valid_max_per_page_to_not_found_listener' => 'getPagerfanta_ConvertNotValidMaxPerPageToNotFoundListenerService',
            'property_accessor' => 'getPropertyAccessorService',
            'request' => 'getRequestService',
            'request_stack' => 'getRequestStackService',
            'response_listener' => 'getResponseListenerService',
            'router.default' => 'getRouter_DefaultService',
            'router.request_context' => 'getRouter_RequestContextService',
            'router_listener' => 'getRouterListenerService',
            'routing.loader' => 'getRouting_LoaderService',
            'security.access.decision_manager' => 'getSecurity_Access_DecisionManagerService',
            'security.access_listener' => 'getSecurity_AccessListenerService',
            'security.access_map' => 'getSecurity_AccessMapService',
            'security.authentication.manager' => 'getSecurity_Authentication_ManagerService',
            'security.authentication.trust_resolver' => 'getSecurity_Authentication_TrustResolverService',
            'security.channel_listener' => 'getSecurity_ChannelListenerService',
            'security.context' => 'getSecurity_ContextService',
            'security.csrf.token_manager' => 'getSecurity_Csrf_TokenManagerService',
            'security.encoder_factory' => 'getSecurity_EncoderFactoryService',
            'security.firewall' => 'getSecurity_FirewallService',
            'security.firewall.map.context.default' => 'getSecurity_Firewall_Map_Context_DefaultService',
            'security.firewall.map.context.dev' => 'getSecurity_Firewall_Map_Context_DevService',
            'security.firewall.map.context.ezpublish_front' => 'getSecurity_Firewall_Map_Context_EzpublishFrontService',
            'security.firewall.map.context.ezpublish_rest' => 'getSecurity_Firewall_Map_Context_EzpublishRestService',
            'security.firewall.map.context.ezpublish_setup' => 'getSecurity_Firewall_Map_Context_EzpublishSetupService',
            'security.http_utils' => 'getSecurity_HttpUtilsService',
            'security.rememberme.response_listener' => 'getSecurity_Rememberme_ResponseListenerService',
            'security.role_hierarchy' => 'getSecurity_RoleHierarchyService',
            'security.secure_random' => 'getSecurity_SecureRandomService',
            'security.validator.user_password' => 'getSecurity_Validator_UserPasswordService',
            'sensio_framework_extra.cache.listener' => 'getSensioFrameworkExtra_Cache_ListenerService',
            'sensio_framework_extra.controller.listener' => 'getSensioFrameworkExtra_Controller_ListenerService',
            'sensio_framework_extra.converter.datetime' => 'getSensioFrameworkExtra_Converter_DatetimeService',
            'sensio_framework_extra.converter.doctrine.orm' => 'getSensioFrameworkExtra_Converter_Doctrine_OrmService',
            'sensio_framework_extra.converter.listener' => 'getSensioFrameworkExtra_Converter_ListenerService',
            'sensio_framework_extra.converter.manager' => 'getSensioFrameworkExtra_Converter_ManagerService',
            'sensio_framework_extra.security.listener' => 'getSensioFrameworkExtra_Security_ListenerService',
            'sensio_framework_extra.view.guesser' => 'getSensioFrameworkExtra_View_GuesserService',
            'sensio_framework_extra.view.listener' => 'getSensioFrameworkExtra_View_ListenerService',
            'service_container' => 'getServiceContainerService',
            'session' => 'getSessionService',
            'session.attribute_bag' => 'getSession_AttributeBagService',
            'session.storage.filesystem' => 'getSession_Storage_FilesystemService',
            'session.storage.metadata_bag' => 'getSession_Storage_MetadataBagService',
            'session.storage.native' => 'getSession_Storage_NativeService',
            'session.storage.php_bridge' => 'getSession_Storage_PhpBridgeService',
            'session_listener' => 'getSessionListenerService',
            'stash.default_cache' => 'getStash_DefaultCacheService',
            'stash.driver.default_cache' => 'getStash_Driver_DefaultCacheService',
            'stash.tracker.default_cache' => 'getStash_Tracker_DefaultCacheService',
            'streamed_response_listener' => 'getStreamedResponseListenerService',
            'swiftmailer.email_sender.listener' => 'getSwiftmailer_EmailSender_ListenerService',
            'swiftmailer.mailer.default' => 'getSwiftmailer_Mailer_DefaultService',
            'swiftmailer.mailer.default.spool' => 'getSwiftmailer_Mailer_Default_SpoolService',
            'swiftmailer.mailer.default.transport' => 'getSwiftmailer_Mailer_Default_TransportService',
            'swiftmailer.mailer.default.transport.eventdispatcher' => 'getSwiftmailer_Mailer_Default_Transport_EventdispatcherService',
            'swiftmailer.mailer.default.transport.real' => 'getSwiftmailer_Mailer_Default_Transport_RealService',
            'templating' => 'getTemplatingService',
            'templating.asset.package_factory' => 'getTemplating_Asset_PackageFactoryService',
            'templating.engine.eztpl' => 'getTemplating_Engine_EztplService',
            'templating.engine.twig' => 'getTemplating_Engine_TwigService',
            'templating.filename_parser' => 'getTemplating_FilenameParserService',
            'templating.globals' => 'getTemplating_GlobalsService',
            'templating.helper.actions' => 'getTemplating_Helper_ActionsService',
            'templating.helper.assets' => 'getTemplating_Helper_AssetsService',
            'templating.helper.code' => 'getTemplating_Helper_CodeService',
            'templating.helper.form' => 'getTemplating_Helper_FormService',
            'templating.helper.logout_url' => 'getTemplating_Helper_LogoutUrlService',
            'templating.helper.request' => 'getTemplating_Helper_RequestService',
            'templating.helper.router' => 'getTemplating_Helper_RouterService',
            'templating.helper.security' => 'getTemplating_Helper_SecurityService',
            'templating.helper.session' => 'getTemplating_Helper_SessionService',
            'templating.helper.slots' => 'getTemplating_Helper_SlotsService',
            'templating.helper.stopwatch' => 'getTemplating_Helper_StopwatchService',
            'templating.helper.translator' => 'getTemplating_Helper_TranslatorService',
            'templating.loader' => 'getTemplating_LoaderService',
            'templating.locator' => 'getTemplating_LocatorService',
            'templating.name_parser' => 'getTemplating_NameParserService',
            'translation.dumper.csv' => 'getTranslation_Dumper_CsvService',
            'translation.dumper.ini' => 'getTranslation_Dumper_IniService',
            'translation.dumper.json' => 'getTranslation_Dumper_JsonService',
            'translation.dumper.mo' => 'getTranslation_Dumper_MoService',
            'translation.dumper.php' => 'getTranslation_Dumper_PhpService',
            'translation.dumper.po' => 'getTranslation_Dumper_PoService',
            'translation.dumper.qt' => 'getTranslation_Dumper_QtService',
            'translation.dumper.res' => 'getTranslation_Dumper_ResService',
            'translation.dumper.xliff' => 'getTranslation_Dumper_XliffService',
            'translation.dumper.yml' => 'getTranslation_Dumper_YmlService',
            'translation.extractor' => 'getTranslation_ExtractorService',
            'translation.extractor.php' => 'getTranslation_Extractor_PhpService',
            'translation.loader' => 'getTranslation_LoaderService',
            'translation.loader.csv' => 'getTranslation_Loader_CsvService',
            'translation.loader.dat' => 'getTranslation_Loader_DatService',
            'translation.loader.ini' => 'getTranslation_Loader_IniService',
            'translation.loader.json' => 'getTranslation_Loader_JsonService',
            'translation.loader.mo' => 'getTranslation_Loader_MoService',
            'translation.loader.php' => 'getTranslation_Loader_PhpService',
            'translation.loader.po' => 'getTranslation_Loader_PoService',
            'translation.loader.qt' => 'getTranslation_Loader_QtService',
            'translation.loader.res' => 'getTranslation_Loader_ResService',
            'translation.loader.xliff' => 'getTranslation_Loader_XliffService',
            'translation.loader.yml' => 'getTranslation_Loader_YmlService',
            'translation.writer' => 'getTranslation_WriterService',
            'translator' => 'getTranslatorService',
            'translator.default' => 'getTranslator_DefaultService',
            'translator.selector' => 'getTranslator_SelectorService',
            'twig' => 'getTwigService',
            'twig.controller.exception' => 'getTwig_Controller_ExceptionService',
            'twig.exception_listener' => 'getTwig_ExceptionListenerService',
            'twig.extension.intl' => 'getTwig_Extension_IntlService',
            'twig.loader' => 'getTwig_LoaderService',
            'twig.loader.string' => 'getTwig_Loader_StringService',
            'twig.translation.extractor' => 'getTwig_Translation_ExtractorService',
            'uri_signer' => 'getUriSignerService',
            'validator' => 'getValidatorService',
            'validator.builder' => 'getValidator_BuilderService',
            'validator.email' => 'getValidator_EmailService',
            'validator.expression' => 'getValidator_ExpressionService',
            'white_october_breadcrumbs' => 'getWhiteOctoberBreadcrumbsService',
            'white_october_breadcrumbs.helper' => 'getWhiteOctoberBreadcrumbs_HelperService',
            'white_october_breadcrumbs.twig' => 'getWhiteOctoberBreadcrumbs_TwigService',
            'white_october_pagerfanta.view_factory' => 'getWhiteOctoberPagerfanta_ViewFactoryService',
        );
        $this->aliases = array(
            'console.command.fos_httpcachebundle_command_invalidatepathcommand' => 'fos_http_cache.command.invalidate_path',
            'console.command.fos_httpcachebundle_command_invalidateregexcommand' => 'fos_http_cache.command.invalidate_regex',
            'console.command.fos_httpcachebundle_command_invalidatetagcommand' => 'fos_http_cache.command.invalidate_tag',
            'console.command.fos_httpcachebundle_command_refreshpathcommand' => 'fos_http_cache.command.refresh_path',
            'database_connection' => 'doctrine.dbal.eng_repository_connection_connection',
            'ez_content' => 'ezpublish.controller.content.view',
            'ez_page' => 'ezpublish.controller.page.view',
            'ezpublish.api.persistence_handler' => 'ezpublish.spi.persistence.cache',
            'ezpublish.api.repository' => 'ezpublish.signalslot.repository',
            'ezpublish.api.storage_engine.legacy' => 'ezpublish.spi.persistence.legacy',
            'ezpublish.api.storage_engine.legacy.connection' => 'ezpublish.persistence.connection',
            'ezpublish.config.resolver' => 'ezpublish.config.resolver.chain',
            'ezpublish.connection' => 'ezpublish.api.storage_engine.legacy.dbhandler',
            'ezpublish.controller.content.preview' => 'ezpublish_legacy.preview.controller',
            'ezpublish.core.io.default_url_decorator' => 'ezpublish.core.io.prefix_url_decorator',
            'ezpublish.core.io.mimetypedetector' => 'ezpublish.core.io.mimetypedetector.fileinfo',
            'ezpublish.fieldtype.ezimage.variation_service' => 'ezpublish.image_alias.imagine.alias_generator',
            'ezpublish.http_cache.purge_client' => 'ezpublish.http_cache.purge_client.local',
            'ezpublish.http_cache.purger' => 'ezpublish.http_cache.purger.instant',
            'ezpublish.image_alias.imagine.filter.swirl' => 'ezpublish.image_alias.imagine.filter.reduce_noise',
            'ezpublish.persistence.legacy.content.gateway' => 'ezpublish.persistence.legacy.content.gateway.exception_conversion',
            'ezpublish.persistence.legacy.content_type.gateway' => 'ezpublish.persistence.legacy.content_type.gateway.exception_conversion',
            'ezpublish.persistence.legacy.content_type.update_handler' => 'ezpublish.persistence.legacy.content_type.update_handler.basic',
            'ezpublish.persistence.legacy.language.gateway' => 'ezpublish.persistence.legacy.language.gateway.exception_conversion',
            'ezpublish.persistence.legacy.location.gateway' => 'ezpublish.persistence.legacy.location.gateway.exception_conversion',
            'ezpublish.persistence.legacy.object_state.gateway' => 'ezpublish.persistence.legacy.object_state.gateway.exception_conversion',
            'ezpublish.persistence.legacy.role.gateway' => 'ezpublish.persistence.legacy.role.gateway.exception_conversion',
            'ezpublish.persistence.legacy.search.gateway.content' => 'ezpublish.persistence.legacy.search.gateway.content.exception_conversion',
            'ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.default' => 'ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.composite',
            'ezpublish.persistence.legacy.search.gateway.location' => 'ezpublish.persistence.legacy.search.gateway.location.exception_conversion',
            'ezpublish.persistence.legacy.section.gateway' => 'ezpublish.persistence.legacy.section.gateway.exception_conversion',
            'ezpublish.persistence.legacy.url_alias.gateway' => 'ezpublish.persistence.legacy.url_alias.gateway.exception_conversion',
            'ezpublish.persistence.legacy.url_wildcard.gateway' => 'ezpublish.persistence.legacy.url_wildcard.gateway.exception_conversion',
            'ezpublish.persistence.legacy.user.gateway' => 'ezpublish.persistence.legacy.user.gateway.exception_conversion',
            'ezpublish.spi.persistence.legacy.content_type.handler' => 'ezpublish.spi.persistence.legacy.content_type.handler.caching',
            'ezpublish.spi.persistence.legacy.language.handler' => 'ezpublish.spi.persistence.legacy.language.handler.caching',
            'ezpublish.templating.global_helper' => 'ezpublish.templating.global_helper.legacy',
            'ezpublish_legacy.kernel' => 'ezpublish_legacy.kernel.lazy',
            'ezpublish_legacy.kernel_handler' => 'ezpublish_legacy.kernel_handler.web',
            'ezpublish_legacy.templating.object_converter' => 'ezpublish_legacy.templating.delegating_converter',
            'ezpublish_legacy.view_decorator' => 'ezpublish_legacy.view_decorator.twig',
            'fos_http_cache.default_proxy_client' => 'fos_http_cache.proxy_client.varnish',
            'mailer' => 'swiftmailer.mailer.default',
            'router' => 'ezpublish.chain_router',
            'session.storage' => 'session.storage.native',
            'stash' => 'stash.default_cache',
            'swiftmailer.mailer' => 'swiftmailer.mailer.default',
            'swiftmailer.spool' => 'swiftmailer.mailer.default.spool',
            'swiftmailer.transport' => 'swiftmailer.mailer.default.transport',
            'swiftmailer.transport.real' => 'swiftmailer.mailer.default.transport.real',
        );
    }
    protected function getAnnotationReaderService()
    {
        return $this->services['annotation_reader'] = new \Doctrine\Common\Annotations\FileCacheReader(new \Doctrine\Common\Annotations\AnnotationReader(), '/var/www/ayaville/ezpublish/cache/prod/annotations', false);
    }
    protected function getAssetic_AssetManagerService()
    {
        $a = $this->get('templating.loader');
        $this->services['assetic.asset_manager'] = $instance = new \Assetic\Factory\LazyAssetManager($this->get('assetic.asset_factory'), array('twig' => new \Assetic\Factory\Loader\CachedFormulaLoader(new \Assetic\Extension\Twig\TwigFormulaLoader($this->get('twig'), $this->get('monolog.logger.assetic', ContainerInterface::NULL_ON_INVALID_REFERENCE)), new \Assetic\Cache\ConfigCache('/var/www/ayaville/ezpublish/cache/prod/assetic/config'), false), 'eztpl' => $this->get('assetic.eztpl_formula_loader')));
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($a, 'eZDemoBundle', '/var/www/ayaville/ezpublish/Resources/eZDemoBundle/views', '/\\.[^.]+\\.eztpl$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($a, 'eZDemoBundle', '/var/www/ayaville/vendor/ezsystems/demobundle/EzSystems/DemoBundle/Resources/views', '/\\.[^.]+\\.eztpl$/'))), 'eztpl');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\CoalescingDirectoryResource(array(0 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($a, 'eZDemoBundle', '/var/www/ayaville/ezpublish/Resources/eZDemoBundle/views', '/\\.[^.]+\\.twig$/'), 1 => new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($a, 'eZDemoBundle', '/var/www/ayaville/vendor/ezsystems/demobundle/EzSystems/DemoBundle/Resources/views', '/\\.[^.]+\\.twig$/'))), 'twig');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($a, '', '/var/www/ayaville/ezpublish/Resources/views', '/\\.[^.]+\\.eztpl$/'), 'eztpl');
        $instance->addResource(new \Symfony\Bundle\AsseticBundle\Factory\Resource\DirectoryResource($a, '', '/var/www/ayaville/ezpublish/Resources/views', '/\\.[^.]+\\.twig$/'), 'twig');
        return $instance;
    }
    protected function getAssetic_EztplFormulaLoaderService()
    {
        return $this->services['assetic.eztpl_formula_loader'] = new \eZ\Publish\Core\MVC\Legacy\Templating\LegacyFormulaLoader();
    }
    protected function getAssetic_Filter_CssrewriteService()
    {
        return $this->services['assetic.filter.cssrewrite'] = new \Assetic\Filter\CssRewriteFilter();
    }
    protected function getAssetic_FilterManagerService()
    {
        return $this->services['assetic.filter_manager'] = new \Symfony\Bundle\AsseticBundle\FilterManager($this, array('cssrewrite' => 'assetic.filter.cssrewrite'));
    }
    protected function getCacheClearerService()
    {
        return $this->services['cache_clearer'] = new \Symfony\Component\HttpKernel\CacheClearer\ChainCacheClearer(array(0 => $this->get('ezpublish.http_cache.purger.instant'), 1 => $this->get('ezpublish_legacy.persistence_cache_purger'), 2 => $this->get('ezpublish_legacy.legacy_cache_purger')));
    }
    protected function getCacheWarmerService()
    {
        $a = $this->get('kernel');
        $b = $this->get('templating.filename_parser');
        $c = new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplateFinder($a, $b, '/var/www/ayaville/ezpublish/Resources');
        return $this->services['cache_warmer'] = new \Symfony\Component\HttpKernel\CacheWarmer\CacheWarmerAggregate(array(0 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\TemplatePathsCacheWarmer($c, $this->get('templating.locator')), 1 => new \Symfony\Bundle\AsseticBundle\CacheWarmer\AssetManagerCacheWarmer($this), 2 => new \Symfony\Bundle\FrameworkBundle\CacheWarmer\RouterCacheWarmer($this->get('ezpublish.chain_router')), 3 => new \Symfony\Bundle\TwigBundle\CacheWarmer\TemplateCacheCacheWarmer($this, $c)));
    }
    protected function getDataCollector_StashService()
    {
        $this->services['data_collector.stash'] = $instance = new \Tedivm\StashBundle\Collector\CacheDataCollector('default', array('default' => 'stash.default_cache'), array('default' => array('drivers' => array(0 => 'FileSystem'), 'inMemory' => true, 'registerDoctrineAdapter' => false, 'registerSessionHandler' => false, 'BlackHole' => array(), 'Ephemeral' => array(), 'FileSystem' => array('dirSplit' => 2, 'path' => '/var/www/ayaville/ezpublish/cache/prod/stash', 'filePermissions' => 432, 'dirPermissions' => 504, 'memKeyLimit' => 200, 'keyHashFunction' => 'md5'))));
        $instance->addTracker($this->get('stash.tracker.default_cache'));
        return $instance;
    }
    protected function getDebug_EmergencyLoggerListenerService()
    {
        return $this->services['debug.emergency_logger_listener'] = new \Symfony\Component\HttpKernel\EventListener\ErrorsLoggerListener('emergency', $this->get('monolog.logger.emergency', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getDoctrineService()
    {
        return $this->services['doctrine'] = new \Doctrine\Bundle\DoctrineBundle\Registry($this, array('eng_repository_connection' => 'doctrine.dbal.eng_repository_connection_connection'), array(), 'eng_repository_connection', '');
    }
    protected function getDoctrine_Dbal_ConnectionFactoryService()
    {
        return $this->services['doctrine.dbal.connection_factory'] = new \Doctrine\Bundle\DoctrineBundle\ConnectionFactory(array());
    }
    protected function getDoctrine_Dbal_EngRepositoryConnectionConnectionService()
    {
        return $this->services['doctrine.dbal.eng_repository_connection_connection'] = $this->get('doctrine.dbal.connection_factory')->createConnection(array('driver' => 'pdo_mysql', 'host' => 'localhost', 'user' => 'root', 'password' => 'pouf', 'dbname' => 'PFE_aYaline', 'charset' => 'UTF8', 'port' => '3306', 'driverOptions' => array()), new \Doctrine\DBAL\Configuration(), new \Symfony\Bridge\Doctrine\ContainerAwareEventManager($this), array());
    }
    protected function getEsiService()
    {
        return $this->services['esi'] = new \Symfony\Component\HttpKernel\HttpCache\Esi();
    }
    protected function getEsiListenerService()
    {
        return $this->services['esi_listener'] = new \Symfony\Component\HttpKernel\EventListener\EsiListener($this->get('esi', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEventDispatcherService()
    {
        $this->services['event_dispatcher'] = $instance = new \Symfony\Component\EventDispatcher\ContainerAwareEventDispatcher($this);
        $instance->addListenerService('console.command', array(0 => 'monolog.handler.console', 1 => 'onCommand'), 255);
        $instance->addListenerService('console.terminate', array(0 => 'monolog.handler.console', 1 => 'onTerminate'), -255);
        $instance->addListenerService('kernel.request', array(0 => 'nelmio_cors.cors_listener', 1 => 'onKernelRequest'), 10000);
        $instance->addSubscriberService('response_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ResponseListener');
        $instance->addSubscriberService('streamed_response_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\StreamedResponseListener');
        $instance->addSubscriberService('locale_listener', 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\LocaleListener');
        $instance->addSubscriberService('debug.emergency_logger_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ErrorsLoggerListener');
        $instance->addSubscriberService('session_listener', 'Symfony\\Bundle\\FrameworkBundle\\EventListener\\SessionListener');
        $instance->addSubscriberService('esi_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\EsiListener');
        $instance->addSubscriberService('fragment.listener', 'Symfony\\Component\\HttpKernel\\EventListener\\FragmentListener');
        $instance->addSubscriberService('router_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\RouterListener');
        $instance->addSubscriberService('security.firewall', 'Symfony\\Component\\Security\\Http\\Firewall');
        $instance->addSubscriberService('security.rememberme.response_listener', 'Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener');
        $instance->addSubscriberService('twig.exception_listener', 'Symfony\\Component\\HttpKernel\\EventListener\\ExceptionListener');
        $instance->addSubscriberService('swiftmailer.email_sender.listener', 'Symfony\\Bundle\\SwiftmailerBundle\\EventListener\\EmailSenderListener');
        $instance->addSubscriberService('sensio_framework_extra.controller.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ControllerListener');
        $instance->addSubscriberService('sensio_framework_extra.converter.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ParamConverterListener');
        $instance->addSubscriberService('sensio_framework_extra.view.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\TemplateListener');
        $instance->addSubscriberService('sensio_framework_extra.cache.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\HttpCacheListener');
        $instance->addSubscriberService('sensio_framework_extra.security.listener', 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\SecurityListener');
        $instance->addSubscriberService('fos_http_cache.event_listener.tag', 'FOS\\HttpCacheBundle\\EventListener\\TagSubscriber');
        $instance->addSubscriberService('fos_http_cache.event_listener.invalidation', 'FOS\\HttpCacheBundle\\EventListener\\InvalidationSubscriber');
        $instance->addSubscriberService('fos_http_cache.event_listener.user_context', 'FOS\\HttpCacheBundle\\EventListener\\UserContextSubscriber');
        $instance->addSubscriberService('ezpublish.controller_listener', 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\ViewControllerListener');
        $instance->addSubscriberService('ezpublish.page_controller_listener', 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\PageControllerListener');
        $instance->addSubscriberService('ezpublish.security.login_listener', 'eZ\\Publish\\Core\\MVC\\Symfony\\Security\\EventListener\\SecurityListener');
        $instance->addSubscriberService('ezpublish.siteaccess_match_listener', 'eZ\\Publish\\Core\\MVC\\Symfony\\EventListener\\SiteAccessMatchListener');
        $instance->addSubscriberService('ezpublish.siteaccess_listener', 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\SiteAccessListener');
        $instance->addSubscriberService('ezpublish.siteaccess_listener.routing', 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\RoutingListener');
        $instance->addSubscriberService('ezpublish.request_redirect_listener', 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\RequestEventListener');
        $instance->addSubscriberService('ezpublish.route_reference.listener.language_switch', 'eZ\\Publish\\Core\\MVC\\Symfony\\EventListener\\LanguageSwitchListener');
        $instance->addSubscriberService('ezpublish.original_request_listener', 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\OriginalRequestListener');
        $instance->addSubscriberService('ezpublish.session_set_dynamic_name_listener', 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\SessionSetDynamicNameListener');
        $instance->addSubscriberService('ezpublish.session_init_by_post_listener', 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\SessionInitByPostListener');
        $instance->addSubscriberService('ezpublish.config_scope_listener', 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\ConfigScopeListener');
        $instance->addSubscriberService('ezpublish.dynamic_settings_listener', 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\DynamicSettingsListener');
        $instance->addSubscriberService('ezpublish_legacy.siteaccess_mapper', 'eZ\\Bundle\\EzPublishLegacyBundle\\LegacyMapper\\SiteAccess');
        $instance->addSubscriberService('ezpublish_legacy.session_mapper', 'eZ\\Bundle\\EzPublishLegacyBundle\\LegacyMapper\\Session');
        $instance->addSubscriberService('ezpublish_legacy.configuration_mapper', 'eZ\\Bundle\\EzPublishLegacyBundle\\LegacyMapper\\Configuration');
        $instance->addSubscriberService('ezpublish_legacy.legacy_bundles_mapper', 'eZ\\Bundle\\EzPublishLegacyBundle\\LegacyMapper\\LegacyBundles');
        $instance->addSubscriberService('ezpublish_legacy.content_exception_handler', 'eZ\\Publish\\Core\\MVC\\Legacy\\EventListener\\APIContentExceptionListener');
        $instance->addSubscriberService('ezpublish_legacy.rest_listener', 'eZ\\Bundle\\EzPublishLegacyBundle\\EventListener\\RestListener');
        $instance->addSubscriberService('ezpublish_legacy.request_listener', 'eZ\\Bundle\\EzPublishLegacyBundle\\EventListener\\RequestListener');
        $instance->addSubscriberService('ezpublish_legacy.response_listener', 'eZ\\Bundle\\EzPublishLegacyBundle\\EventListener\\CsrfTokenResponseListener');
        $instance->addSubscriberService('ezpublish_legacy.config_scope_listener', 'eZ\\Bundle\\EzPublishLegacyBundle\\EventListener\\ConfigScopeListener');
        $instance->addSubscriberService('ezpublish_legacy.legacy_kernel_listener', 'eZ\\Bundle\\EzPublishLegacyBundle\\EventListener\\LegacyKernelListener');
        $instance->addSubscriberService('ezpublish_legacy.security.login_cleanup_listener', 'eZ\\Publish\\Core\\MVC\\Legacy\\Security\\Firewall\\LoginCleanupListener');
        $instance->addSubscriberService('ezpublish_legacy.security_mapper', 'eZ\\Bundle\\EzPublishLegacyBundle\\LegacyMapper\\Security');
        $instance->addSubscriberService('ezpublish.core.io.stream_file_listener', 'eZ\\Bundle\\EzPublishIOBundle\\EventListener\\StreamFileListener');
        $instance->addSubscriberService('ezpublish_rest.request_listener', 'eZ\\Bundle\\EzPublishRestBundle\\EventListener\\RequestListener');
        $instance->addSubscriberService('ezpublish_rest.response_listener', 'eZ\\Bundle\\EzPublishRestBundle\\EventListener\\ResponseListener');
        $instance->addSubscriberService('ezpublish_rest.csrf_listener', 'eZ\\Bundle\\EzPublishRestBundle\\EventListener\\CsrfListener');
        return $instance;
    }
    protected function getEzComments_ContentMatcherFactoryService()
    {
        return $this->services['ez_comments.content_matcher_factory'] = new \EzSystems\CommentsBundle\Matcher\ContentMatcherFactory($this);
    }
    protected function getEzComments_Controller_CommentsRendererService()
    {
        $this->services['ez_comments.controller.comments_renderer'] = $instance = new \EzSystems\CommentsBundle\Controller\CommentsRendererController($this->get('ez_comments.renderer'), $this->get('ezpublish.api.service.content'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    public function getEzComments_Provider_DisqusService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ez_comments.provider.disqus'] = new EzSystemsCommentsBundleCommentsProviderDisqus_000000002343b1d3000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzComments_Provider_DisqusService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return $this->get('ez_comments.provider.factory')->buildDisqus('EzSystems\\CommentsBundle\\Comments\\Provider\\Disqus');
    }
    public function getEzComments_Provider_FacebookService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ez_comments.provider.facebook'] = new EzSystemsCommentsBundleCommentsProviderFacebook_000000002343b0d5000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzComments_Provider_FacebookService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return $this->get('ez_comments.provider.factory')->buildFacebook($this->get('ezpublish.api.service.location'), $this->get('ezpublish.chain_router'));
    }
    protected function getEzComments_Provider_FactoryService()
    {
        return $this->services['ez_comments.provider.factory'] = new \EzSystems\CommentsBundle\Comments\Provider\SiteAccessAwareFactory($this->get('ezpublish.config.resolver.chain'), $this->get('templating'));
    }
    protected function getEzComments_Provider_NullService()
    {
        return $this->services['ez_comments.provider.null'] = new \EzSystems\CommentsBundle\Comments\Provider\Null();
    }
    protected function getEzComments_RendererService()
    {
        $this->services['ez_comments.renderer'] = $instance = new \EzSystems\CommentsBundle\Comments\CommentsRenderer($this->get('ez_comments.content_matcher_factory'), $this->get('ezpublish.config.resolver.chain'));
        $instance->setLogger($this->get('logger'));
        $instance->addProvider($this->get('ez_comments.provider.null'), 'no_comments');
        $instance->addProvider($this->get('ez_comments.provider.disqus'), 'disqus');
        $instance->addProvider($this->get('ez_comments.provider.facebook'), 'facebook');
        return $instance;
    }
    protected function getEzComments_Twig_ExtensionService()
    {
        $this->services['ez_comments.twig.extension'] = $instance = new \EzSystems\CommentsBundle\Twig\Extension\CommentsExtension($this->get('ez_comments.renderer'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getEzdemo_CriteriaHelperService()
    {
        return $this->services['ezdemo.criteria_helper'] = new \EzSystems\DemoBundle\Helper\CriteriaHelper();
    }
    protected function getEzdemo_EmailHelperService()
    {
        return $this->services['ezdemo.email_helper'] = new \EzSystems\DemoBundle\Helper\EmailHelper($this->get('translator'), $this->get('templating'), $this->get('swiftmailer.mailer.default'));
    }
    protected function getEzdemo_Form_Type_FeedbackService()
    {
        return $this->services['ezdemo.form.type.feedback'] = new \EzSystems\DemoBundle\Form\Type\FeedbackType();
    }
    protected function getEzdemo_Form_Type_SimpleSearchService()
    {
        return $this->services['ezdemo.form.type.simple_search'] = new \EzSystems\DemoBundle\Form\Type\SimpleSearchType();
    }
    protected function getEzdemo_Menu_BuilderService()
    {
        return $this->services['ezdemo.menu.builder'] = new \EzSystems\DemoBundle\Menu\Builder($this->get('knp_menu.factory'), $this->get('ezpublish.api.service.search'), $this->get('ezpublish.chain_router'), $this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish.api.service.location'), $this->get('ezpublish.translation_helper'));
    }
    protected function getEzdemo_Menu_TopService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('ezdemo.menu.top', 'request');
        }
        return $this->services['ezdemo.menu.top'] = $this->scopedServices['request']['ezdemo.menu.top'] = $this->get('ezdemo.menu.builder')->createTopMenu($this->get('request'));
    }
    protected function getEzdemo_MenuHelperService()
    {
        return $this->services['ezdemo.menu_helper'] = new \EzSystems\DemoBundle\Helper\MenuHelper($this->get('ezpublish.signalslot.repository'), 10, $this->get('ezdemo.search_helper'));
    }
    protected function getEzdemo_PlaceHelperService()
    {
        return $this->services['ezdemo.place_helper'] = new \EzSystems\DemoBundle\Helper\PlaceHelper($this->get('ezpublish.api.service.location'), $this->get('ezpublish.api.service.search'), $this->get('ezdemo.search_helper'), 0, 20000);
    }
    protected function getEzdemo_SearchHelperService()
    {
        return $this->services['ezdemo.search_helper'] = new \EzSystems\DemoBundle\Helper\SearchHelper($this->get('ezpublish.api.service.search'), 10);
    }
    public function getEzpublish_Api_InnerRepositoryService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.api.inner_repository'] = new eZPublishCoreRepositoryRepository_000000002343a9d1000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Api_InnerRepositoryService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return $this->get('ezpublish.api.repository.factory')->buildRepository($this->get('ezpublish.spi.persistence.cache'));
    }
    protected function getEzpublish_Api_Repository_FactoryService()
    {
        $this->services['ezpublish.api.repository.factory'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\ApiLoader\RepositoryFactory($this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish.field_type_collection.factory'), 'eZ\\Publish\\Core\\Repository\\Repository');
        $instance->setContainer($this);
        $instance->registerLimitationType('Class', $this->get('ezpublish.api.role.limitation_type.content_type'));
        $instance->registerLimitationType('Language', $this->get('ezpublish.api.role.limitation_type.language'));
        $instance->registerLimitationType('Node', $this->get('ezpublish.api.role.limitation_type.location'));
        $instance->registerLimitationType('Owner', $this->get('ezpublish.api.role.limitation_type.owner'));
        $instance->registerLimitationType('ParentClass', $this->get('ezpublish.api.role.limitation_type.parent_content_type'));
        $instance->registerLimitationType('ParentDepth', $this->get('ezpublish.api.role.limitation_type.parent_depth'));
        $instance->registerLimitationType('ParentOwner', $this->get('ezpublish.api.role.limitation_type.parent_owner'));
        $instance->registerLimitationType('ParentGroup', $this->get('ezpublish.api.role.limitation_type.parent_group'));
        $instance->registerLimitationType('Section', $this->get('ezpublish.api.role.limitation_type.section'));
        $instance->registerLimitationType('NewSection', $this->get('ezpublish.api.role.limitation_type.new_section'));
        $instance->registerLimitationType('SiteAccess', $this->get('ezpublish.api.role.limitation_type.siteaccess'));
        $instance->registerLimitationType('State', $this->get('ezpublish.api.role.limitation_type.state'));
        $instance->registerLimitationType('NewState', $this->get('ezpublish.api.role.limitation_type.new_state'));
        $instance->registerLimitationType('Subtree', $this->get('ezpublish.api.role.limitation_type.subtree'));
        $instance->registerLimitationType('Group', $this->get('ezpublish.api.role.limitation_type.user_group'));
        $instance->registerLimitationType('Status', $this->get('ezpublish.api.role.limitation_type.status'));
        $instance->registerLimitationType('FunctionList', $this->get('ezpublish.api.role.limitation_type.function_list'));
        $instance->registerLimitationType('ContentSection', $this->get('ezpublish.api.role.limitation_type.ezcomments.content_section'));
        $instance->registerLimitationType('CommentCreator', $this->get('ezpublish.api.role.limitation_type.ezcomments.comment_creator'));
        $instance->registerLimitationType('AntiSpam', $this->get('ezpublish.api.role.limitation_type.ezcomments.anti_spam'));
        return $instance;
    }
    protected function getEzpublish_Api_Repository_LazyService()
    {
        return $this->services['ezpublish.api.repository.lazy'] = $this->get('ezpublish.api.repository.lazy_factory')->buildRepository();
    }
    protected function getEzpublish_Api_Repository_LazyFactoryService()
    {
        return $this->services['ezpublish.api.repository.lazy_factory'] = new \eZ\Bundle\EzPublishCoreBundle\ApiLoader\LazyRepositoryFactory($this->get('ezpublish.signalslot.repository'));
    }
    protected function getEzpublish_Api_Role_LimitationType_ContentTypeService()
    {
        return $this->services['ezpublish.api.role.limitation_type.content_type'] = new \eZ\Publish\Core\Limitation\ContentTypeLimitationType($this->get('ezpublish.spi.persistence.cache'));
    }
    protected function getEzpublish_Api_Role_LimitationType_Ezcomments_AntiSpamService()
    {
        return $this->services['ezpublish.api.role.limitation_type.ezcomments.anti_spam'] = new \eZ\Publish\Core\Limitation\BlockingLimitationType('AntiSpam');
    }
    protected function getEzpublish_Api_Role_LimitationType_Ezcomments_CommentCreatorService()
    {
        return $this->services['ezpublish.api.role.limitation_type.ezcomments.comment_creator'] = new \eZ\Publish\Core\Limitation\BlockingLimitationType('CommentCreator');
    }
    protected function getEzpublish_Api_Role_LimitationType_Ezcomments_ContentSectionService()
    {
        return $this->services['ezpublish.api.role.limitation_type.ezcomments.content_section'] = new \eZ\Publish\Core\Limitation\BlockingLimitationType('ContentSection');
    }
    protected function getEzpublish_Api_Role_LimitationType_FunctionListService()
    {
        return $this->services['ezpublish.api.role.limitation_type.function_list'] = new \eZ\Publish\Core\Limitation\BlockingLimitationType('FunctionList');
    }
    protected function getEzpublish_Api_Role_LimitationType_LanguageService()
    {
        return $this->services['ezpublish.api.role.limitation_type.language'] = new \eZ\Publish\Core\Limitation\LanguageLimitationType($this->get('ezpublish.spi.persistence.cache'));
    }
    protected function getEzpublish_Api_Role_LimitationType_LocationService()
    {
        return $this->services['ezpublish.api.role.limitation_type.location'] = new \eZ\Publish\Core\Limitation\LocationLimitationType($this->get('ezpublish.spi.persistence.cache'));
    }
    protected function getEzpublish_Api_Role_LimitationType_NewSectionService()
    {
        return $this->services['ezpublish.api.role.limitation_type.new_section'] = new \eZ\Publish\Core\Limitation\NewSectionLimitationType($this->get('ezpublish.spi.persistence.cache'));
    }
    protected function getEzpublish_Api_Role_LimitationType_NewStateService()
    {
        return $this->services['ezpublish.api.role.limitation_type.new_state'] = new \eZ\Publish\Core\Limitation\NewObjectStateLimitationType($this->get('ezpublish.spi.persistence.cache'));
    }
    protected function getEzpublish_Api_Role_LimitationType_OwnerService()
    {
        return $this->services['ezpublish.api.role.limitation_type.owner'] = new \eZ\Publish\Core\Limitation\OwnerLimitationType($this->get('ezpublish.spi.persistence.cache'));
    }
    protected function getEzpublish_Api_Role_LimitationType_ParentContentTypeService()
    {
        return $this->services['ezpublish.api.role.limitation_type.parent_content_type'] = new \eZ\Publish\Core\Limitation\ParentContentTypeLimitationType($this->get('ezpublish.spi.persistence.cache'));
    }
    protected function getEzpublish_Api_Role_LimitationType_ParentDepthService()
    {
        return $this->services['ezpublish.api.role.limitation_type.parent_depth'] = new \eZ\Publish\Core\Limitation\ParentDepthLimitationType($this->get('ezpublish.spi.persistence.cache'));
    }
    protected function getEzpublish_Api_Role_LimitationType_ParentGroupService()
    {
        return $this->services['ezpublish.api.role.limitation_type.parent_group'] = new \eZ\Publish\Core\Limitation\ParentUserGroupLimitationType($this->get('ezpublish.spi.persistence.cache'));
    }
    protected function getEzpublish_Api_Role_LimitationType_ParentOwnerService()
    {
        return $this->services['ezpublish.api.role.limitation_type.parent_owner'] = new \eZ\Publish\Core\Limitation\ParentOwnerLimitationType($this->get('ezpublish.spi.persistence.cache'));
    }
    protected function getEzpublish_Api_Role_LimitationType_SectionService()
    {
        return $this->services['ezpublish.api.role.limitation_type.section'] = new \eZ\Publish\Core\Limitation\SectionLimitationType($this->get('ezpublish.spi.persistence.cache'));
    }
    protected function getEzpublish_Api_Role_LimitationType_SiteaccessService()
    {
        return $this->services['ezpublish.api.role.limitation_type.siteaccess'] = new \eZ\Publish\Core\Limitation\SiteAccessLimitationType();
    }
    protected function getEzpublish_Api_Role_LimitationType_StateService()
    {
        return $this->services['ezpublish.api.role.limitation_type.state'] = new \eZ\Publish\Core\Limitation\ObjectStateLimitationType($this->get('ezpublish.spi.persistence.cache'));
    }
    protected function getEzpublish_Api_Role_LimitationType_StatusService()
    {
        return $this->services['ezpublish.api.role.limitation_type.status'] = new \eZ\Publish\Core\Limitation\StatusLimitationType();
    }
    protected function getEzpublish_Api_Role_LimitationType_SubtreeService()
    {
        return $this->services['ezpublish.api.role.limitation_type.subtree'] = new \eZ\Publish\Core\Limitation\SubtreeLimitationType($this->get('ezpublish.spi.persistence.cache'));
    }
    protected function getEzpublish_Api_Role_LimitationType_UserGroupService()
    {
        return $this->services['ezpublish.api.role.limitation_type.user_group'] = new \eZ\Publish\Core\Limitation\UserGroupLimitationType($this->get('ezpublish.spi.persistence.cache'));
    }
    public function getEzpublish_Api_Service_ContentService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.api.service.content'] = new eZPublishCoreRepositoryContentService_000000002343a9d0000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Api_Service_ContentService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return $this->get('ezpublish.api.repository.factory')->buildService($this->get('ezpublish.signalslot.repository'), 'Content');
    }
    public function getEzpublish_Api_Service_ContentTypeService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.api.service.content_type'] = new eZPublishCoreRepositoryContentTypeService_000000002343a9dd000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Api_Service_ContentTypeService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return $this->get('ezpublish.api.repository.factory')->buildService($this->get('ezpublish.signalslot.repository'), 'ContentType');
    }
    public function getEzpublish_Api_Service_FieldTypeService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.api.service.field_type'] = new eZPublishCoreRepositoryFieldTypeService_000000002343a9dc000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Api_Service_FieldTypeService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return $this->get('ezpublish.api.repository.factory')->buildService($this->get('ezpublish.signalslot.repository'), 'FieldType');
    }
    public function getEzpublish_Api_Service_LocationService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.api.service.location'] = new eZPublishCoreRepositoryLocationService_000000002343a992000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Api_Service_LocationService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return $this->get('ezpublish.api.repository.factory')->buildService($this->get('ezpublish.signalslot.repository'), 'Location');
    }
    public function getEzpublish_Api_Service_ObjectStateService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.api.service.object_state'] = new eZPublishCoreRepositoryObjectStateService_000000002343a9d8000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Api_Service_ObjectStateService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return $this->get('ezpublish.api.repository.factory')->buildService($this->get('ezpublish.signalslot.repository'), 'ObjectState');
    }
    public function getEzpublish_Api_Service_RoleService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.api.service.role'] = new eZPublishCoreRepositoryRoleService_000000002343a984000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Api_Service_RoleService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return $this->get('ezpublish.api.repository.factory')->buildService($this->get('ezpublish.signalslot.repository'), 'Role');
    }
    public function getEzpublish_Api_Service_SearchService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.api.service.search'] = new eZPublishCoreRepositorySearchService_000000002343a991000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Api_Service_SearchService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return $this->get('ezpublish.api.repository.factory')->buildService($this->get('ezpublish.signalslot.repository'), 'Search');
    }
    public function getEzpublish_Api_Service_SectionService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.api.service.section'] = new eZPublishCoreRepositorySectionService_000000002343a99f000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Api_Service_SectionService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return $this->get('ezpublish.api.repository.factory')->buildService($this->get('ezpublish.signalslot.repository'), 'Section');
    }
    public function getEzpublish_Api_Service_TrashService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.api.service.trash'] = new eZPublishCoreRepositoryTrashService_000000002343a990000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Api_Service_TrashService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return $this->get('ezpublish.api.repository.factory')->buildService($this->get('ezpublish.signalslot.repository'), 'Trash');
    }
    public function getEzpublish_Api_Service_UrlAliasService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.api.service.url_alias'] = new eZPublishCoreRepositoryURLAliasService_000000002343a999000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Api_Service_UrlAliasService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return $this->get('ezpublish.api.repository.factory')->buildService($this->get('ezpublish.signalslot.repository'), 'URLAlias');
    }
    public function getEzpublish_Api_Service_UrlWildcardService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.api.service.url_wildcard'] = new eZPublishCoreRepositoryURLWildcardService_000000002343a998000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Api_Service_UrlWildcardService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return $this->get('ezpublish.api.repository.factory')->buildService($this->get('ezpublish.signalslot.repository'), 'URLWildcard');
    }
    public function getEzpublish_Api_Service_UserService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.api.service.user'] = new eZPublishCoreRepositoryUserService_000000002343a99a000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Api_Service_UserService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return $this->get('ezpublish.api.repository.factory')->buildService($this->get('ezpublish.signalslot.repository'), 'User');
    }
    protected function getEzpublish_Api_StorageEngine_FactoryService()
    {
        $this->services['ezpublish.api.storage_engine.factory'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\ApiLoader\StorageEngineFactory($this->get('ezpublish.api.storage_repository_provider'));
        $instance->registerStorageEngine($this->get('ezpublish.spi.persistence.legacy'), 'legacy');
        return $instance;
    }
    public function getEzpublish_Api_StorageEngine_Legacy_DbhandlerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.api.storage_engine.legacy.dbhandler'] = new eZPublishCorePersistenceDoctrineConnectionHandler_000000002343b608000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Api_StorageEngine_Legacy_DbhandlerService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return \eZ\Publish\Core\Persistence\Doctrine\ConnectionHandler::createFromConnection($this->get('ezpublish.persistence.connection'));
    }
    protected function getEzpublish_Api_StorageEngine_PcreCompilerService()
    {
        return $this->services['ezpublish.api.storage_engine.pcre_compiler'] = new \eZ\Publish\Core\Persistence\TransformationProcessor\PcreCompiler($this->get('ezpublish.api.storage_engine.transformation_converter'));
    }
    protected function getEzpublish_Api_StorageEngine_TransformationConverterService()
    {
        return $this->services['ezpublish.api.storage_engine.transformation_converter'] = new \eZ\Publish\Core\Persistence\Utf8Converter();
    }
    protected function getEzpublish_Api_StorageEngine_TransformationParserService()
    {
        return $this->services['ezpublish.api.storage_engine.transformation_parser'] = new \eZ\Publish\Core\Persistence\TransformationProcessor\DefinitionBased\Parser();
    }
    protected function getEzpublish_Api_StorageEngine_TransformationProcessorService()
    {
        return $this->services['ezpublish.api.storage_engine.transformation_processor'] = new \eZ\Publish\Core\Persistence\TransformationProcessor\PreprocessedBased($this->get('ezpublish.api.storage_engine.pcre_compiler'), array(0 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/ascii.tr.result', 1 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/basic.tr.result', 2 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/cyrillic.tr.result', 3 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/greek.tr.result', 4 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/hebrew.tr.result', 5 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/latin.tr.result', 6 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/search.tr.result'));
    }
    protected function getEzpublish_Api_StorageRepositoryProviderService()
    {
        return $this->services['ezpublish.api.storage_repository_provider'] = new \eZ\Bundle\EzPublishCoreBundle\ApiLoader\StorageRepositoryProvider($this->get('ezpublish.config.resolver.chain'), array('eng_repository' => array('engine' => 'legacy', 'connection' => 'eng_repository_connection', 'config' => array())));
    }
    protected function getEzpublish_BlockView_MatcherFactoryService()
    {
        $this->services['ezpublish.block_view.matcher_factory'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\Matcher\BlockMatcherFactory($this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish.signalslot.repository'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEzpublish_BlockViewProvider_ConfiguredService()
    {
        return $this->services['ezpublish.block_view_provider.configured'] = new \eZ\Bundle\EzPublishCoreBundle\View\Provider\BlockConfigured($this->get('ezpublish.block_view.matcher_factory'));
    }
    protected function getEzpublish_CachePoolService()
    {
        return $this->services['ezpublish.cache_pool'] = $this->get('ezpublish.cache_pool.factory')->getCachePool($this->get('ezpublish.config.resolver.chain'));
    }
    protected function getEzpublish_CachePool_FactoryService()
    {
        $this->services['ezpublish.cache_pool.factory'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\ApiLoader\CacheFactory();
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEzpublish_CachePool_Spi_Cache_DecoratorService()
    {
        return $this->services['ezpublish.cache_pool.spi.cache.decorator'] = new \eZ\Publish\Core\Persistence\Cache\CacheServiceDecorator($this->get('ezpublish.cache_pool'));
    }
    protected function getEzpublish_ChainRouterService()
    {
        $this->services['ezpublish.chain_router'] = $instance = new \eZ\Publish\Core\MVC\Symfony\Routing\ChainRouter($this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->setContext($this->get('router.request_context'));
        $instance->add($this->get('router.default'), 255);
        $instance->add($this->get('ezpublish.urlalias_router'), 200);
        $instance->add($this->get('ezpublish_legacy.router'), -255);
        return $instance;
    }
    protected function getEzpublish_Config_DynamicSetting_ParserService()
    {
        return $this->services['ezpublish.config.dynamic_setting.parser'] = new \eZ\Bundle\EzPublishCoreBundle\DependencyInjection\Configuration\SiteAccessAware\DynamicSettingParser();
    }
    protected function getEzpublish_Config_Resolver_ChainService()
    {
        $this->services['ezpublish.config.resolver.chain'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\DependencyInjection\Configuration\ChainConfigResolver();
        $instance->addResolver($this->get('ezpublish.config.resolver.core'), 200);
        $instance->addResolver($this->get('ezpublish_legacy.config.resolver'), -255);
        return $instance;
    }
    public function getEzpublish_Config_Resolver_CoreService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.config.resolver.core'] = new eZBundleEzPublishCoreBundleDependencyInjectionConfigurationConfigResolver_000000002343a9a9000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Config_Resolver_CoreService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        $instance = new \eZ\Bundle\EzPublishCoreBundle\DependencyInjection\Configuration\ConfigResolver(array('ezdemo_site' => array(0 => 'ezdemo_frontend_group'), 'ezdemo_site_user' => array(0 => 'ezdemo_frontend_group'), 'eng' => array(0 => 'ezdemo_frontend_group', 1 => 'ezdemo_site_group'), 'fre' => array(0 => 'ezdemo_frontend_group', 1 => 'ezdemo_site_group'), 'ezdemo' => array(0 => 'ezdemo_site_group'), 'ezdemo_admin' => array(0 => 'ezdemo_site_group')), 'ezsettings');
        $instance->setSiteAccess($this->get('ezpublish.siteaccess'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEzpublish_ConfigResolver_Fake_BinaryDirService()
    {
        return $this->services['ezpublish.config_resolver.fake.binary_dir__'] = $this->get('ezpublish.config.resolver.chain')->getParameter('binary_dir', NULL, NULL);
    }
    protected function getEzpublish_ConfigResolver_Fake_Image_PublishedImagesDirService()
    {
        return $this->services['ezpublish.config_resolver.fake.image.published_images_dir__'] = $this->get('ezpublish.config.resolver.chain')->getParameter('image.published_images_dir', NULL, NULL);
    }
    protected function getEzpublish_ConfigResolver_Fake_Image_VersionedImagesDirService()
    {
        return $this->services['ezpublish.config_resolver.fake.image.versioned_images_dir__'] = $this->get('ezpublish.config.resolver.chain')->getParameter('image.versioned_images_dir', NULL, NULL);
    }
    protected function getEzpublish_ConfigResolver_Fake_Io_BinarydataHandlerService()
    {
        return $this->services['ezpublish.config_resolver.fake.io.binarydata_handler__'] = $this->get('ezpublish.config.resolver.chain')->getParameter('io.binarydata_handler', NULL, NULL);
    }
    protected function getEzpublish_ConfigResolver_Fake_Io_LegacyUrlPrefixService()
    {
        return $this->services['ezpublish.config_resolver.fake.io.legacy_url_prefix__'] = $this->get('ezpublish.config.resolver.chain')->getParameter('io.legacy_url_prefix', NULL, NULL);
    }
    protected function getEzpublish_ConfigResolver_Fake_Io_MetadataHandlerService()
    {
        return $this->services['ezpublish.config_resolver.fake.io.metadata_handler__'] = $this->get('ezpublish.config.resolver.chain')->getParameter('io.metadata_handler', NULL, NULL);
    }
    protected function getEzpublish_ConfigResolver_Fake_Io_RootDirService()
    {
        return $this->services['ezpublish.config_resolver.fake.io.root_dir__'] = $this->get('ezpublish.config.resolver.chain')->getParameter('io.root_dir', NULL, NULL);
    }
    protected function getEzpublish_ConfigResolver_Fake_Io_UrlPrefixService()
    {
        return $this->services['ezpublish.config_resolver.fake.io.url_prefix__'] = $this->get('ezpublish.config.resolver.chain')->getParameter('io.url_prefix', NULL, NULL);
    }
    protected function getEzpublish_ConfigResolver_Fake_StorageDirService()
    {
        return $this->services['ezpublish.config_resolver.fake.storage_dir__'] = $this->get('ezpublish.config.resolver.chain')->getParameter('storage_dir', NULL, NULL);
    }
    protected function getEzpublish_ConfigResolver_Fake_VarDirService()
    {
        return $this->services['ezpublish.config_resolver.fake.var_dir__'] = $this->get('ezpublish.config.resolver.chain')->getParameter('var_dir', NULL, NULL);
    }
    protected function getEzpublish_ConfigScopeListenerService()
    {
        return $this->services['ezpublish.config_scope_listener'] = new \eZ\Bundle\EzPublishCoreBundle\EventListener\ConfigScopeListener($this->get('ezpublish.config.resolver.core'), $this->get('ezpublish.view_manager'));
    }
    protected function getEzpublish_ContentPreviewHelperService()
    {
        $this->services['ezpublish.content_preview_helper'] = $instance = new \eZ\Publish\Core\Helper\ContentPreviewHelper($this->get('ezpublish.api.service.content'), $this->get('ezpublish.api.service.location'), $this->get('event_dispatcher'), $this->get('ezpublish.config.resolver.chain'));
        $instance->setSiteAccess($this->get('ezpublish.siteaccess'));
        return $instance;
    }
    protected function getEzpublish_ContentView_MatcherFactoryService()
    {
        $this->services['ezpublish.content_view.matcher_factory'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\Matcher\ContentMatcherFactory($this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish.signalslot.repository'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEzpublish_ContentViewProvider_ConfiguredService()
    {
        return $this->services['ezpublish.content_view_provider.configured'] = new \eZ\Bundle\EzPublishCoreBundle\View\Provider\ContentConfigured($this->get('ezpublish.content_view.matcher_factory'));
    }
    protected function getEzpublish_Controller_Content_Preview_CoreService()
    {
        $this->services['ezpublish.controller.content.preview.core'] = $instance = new \eZ\Publish\Core\MVC\Symfony\Controller\Content\PreviewController($this->get('ezpublish.api.service.content'), $this->get('http_kernel'), $this->get('ezpublish.content_preview_helper'), $this->get('security.context'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getEzpublish_Controller_Content_ViewService()
    {
        $this->services['ezpublish.controller.content.view'] = $instance = new \eZ\Publish\Core\MVC\Symfony\Controller\Content\ViewController($this->get('ezpublish.view_manager'), $this->get('security.context'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEzpublish_Controller_Page_ViewService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('ezpublish.controller.page.view', 'request');
        }
        $this->services['ezpublish.controller.page.view'] = $this->scopedServices['request']['ezpublish.controller.page.view'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\Controller\PageController($this->get('ezpublish.view_manager'), $this->get('ezpublish.fieldtype.ezpage.pageservice'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEzpublish_ControllerListenerService()
    {
        return $this->services['ezpublish.controller_listener'] = new \eZ\Bundle\EzPublishCoreBundle\EventListener\ViewControllerListener($this->get('controller_resolver'), $this->get('ezpublish.controller_manager'), $this->get('ezpublish.signalslot.repository'), $this->get('logger'));
    }
    protected function getEzpublish_ControllerManagerService()
    {
        return $this->services['ezpublish.controller_manager'] = new \eZ\Publish\Core\MVC\Symfony\Controller\Manager($this->get('ezpublish.location_view.matcher_factory'), $this->get('ezpublish.content_view.matcher_factory'), $this->get('ezpublish.block_view.matcher_factory'), $this->get('logger'));
    }
    protected function getEzpublish_Core_Io_BinarydataHandlerService()
    {
        return $this->services['ezpublish.core.io.binarydata_handler'] = $this->get('ezpublish.core.io.binarydata_handler.factory')->getConfiguredHandler($this->get('ezpublish.config_resolver.fake.io.binarydata_handler__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublish_Core_Io_BinarydataHandler_FactoryService()
    {
        $this->services['ezpublish.core.io.binarydata_handler.factory'] = $instance = new \eZ\Bundle\EzPublishIOBundle\ApiLoader\HandlerFactory();
        $instance->setContainer($this);
        $instance->setHandlersMap(array('default' => 'ezpublish.core.io.binarydata_handler.flysystem.default'));
        return $instance;
    }
    protected function getEzpublish_Core_Io_BinarydataHandler_Flysystem_DefaultService()
    {
        return $this->services['ezpublish.core.io.binarydata_handler.flysystem.default'] = new \eZ\Publish\Core\IO\IOBinarydataHandler\Flysystem($this->get('ezpublish.core.io.flysystem.default_filesystem'), $this->get('ezpublish.core.io.prefix_url_decorator'));
    }
    protected function getEzpublish_Core_Io_Flysystem_DefaultAdapterService()
    {
        return $this->services['ezpublish.core.io.flysystem.default_adapter'] = new \League\Flysystem\Adapter\Local($this->get('ezpublish.config_resolver.fake.io.root_dir__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublish_Core_Io_Flysystem_DefaultFilesystemService()
    {
        return $this->services['ezpublish.core.io.flysystem.default_filesystem'] = new \League\Flysystem\Filesystem($this->get('ezpublish.core.io.flysystem.default_adapter'));
    }
    protected function getEzpublish_Core_Io_ImageFieldtype_LegacyUrlDecoratorService()
    {
        $this->services['ezpublish.core.io.image_fieldtype.legacy_url_decorator'] = $instance = new \eZ\Publish\Core\IO\UrlDecorator\Prefix();
        $instance->setPrefix($this->get('ezpublish.config_resolver.fake.io.legacy_url_prefix__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        return $instance;
    }
    protected function getEzpublish_Core_Io_ImageFieldtype_LegacyUrlRedecoratorService()
    {
        return $this->services['ezpublish.core.io.image_fieldtype.legacy_url_redecorator'] = new \eZ\Publish\Core\IO\UrlRedecorator($this->get('ezpublish.core.io.prefix_url_decorator'), $this->get('ezpublish.core.io.image_fieldtype.legacy_url_decorator'));
    }
    protected function getEzpublish_Core_Io_MetadataHandlerService()
    {
        return $this->services['ezpublish.core.io.metadata_handler'] = $this->get('ezpublish.core.io.metadata_handler.factory')->getConfiguredHandler($this->get('ezpublish.config_resolver.fake.io.metadata_handler__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublish_Core_Io_MetadataHandler_FactoryService()
    {
        $this->services['ezpublish.core.io.metadata_handler.factory'] = $instance = new \eZ\Bundle\EzPublishIOBundle\ApiLoader\HandlerFactory();
        $instance->setContainer($this);
        $instance->setHandlersMap(array('default' => 'ezpublish.core.io.metadata_handler.flysystem.default'));
        return $instance;
    }
    protected function getEzpublish_Core_Io_MetadataHandler_Flysystem_DefaultService()
    {
        return $this->services['ezpublish.core.io.metadata_handler.flysystem.default'] = new \eZ\Publish\Core\IO\IOMetadataHandler\Flysystem($this->get('ezpublish.core.io.flysystem.default_filesystem'));
    }
    protected function getEzpublish_Core_Io_Mimetypedetector_FileinfoService()
    {
        return $this->services['ezpublish.core.io.mimetypedetector.fileinfo'] = new \eZ\Publish\Core\IO\MimeTypeDetector\FileInfo();
    }
    protected function getEzpublish_Core_Io_PrefixUrlDecoratorService()
    {
        $this->services['ezpublish.core.io.prefix_url_decorator'] = $instance = new \eZ\Publish\Core\IO\UrlDecorator\AbsolutePrefix();
        $instance->setPrefix($this->get('ezpublish.config_resolver.fake.io.url_prefix__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        return $instance;
    }
    public function getEzpublish_Core_Io_ServiceService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.core.io.service'] = new eZPublishCoreIOTolerantIOService_000000002343b651000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Core_Io_ServiceService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        $instance = new \eZ\Publish\Core\IO\TolerantIOService($this->get('ezpublish.core.io.metadata_handler'), $this->get('ezpublish.core.io.binarydata_handler'), $this->get('ezpublish.core.io.mimetypedetector.fileinfo'));
        if ($this->has('logger')) {
            $instance->setLogger($this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getEzpublish_Core_Io_StreamFileListenerService()
    {
        return $this->services['ezpublish.core.io.stream_file_listener'] = new \eZ\Bundle\EzPublishIOBundle\EventListener\StreamFileListener($this->get('ezpublish.fieldtype.ezimage.io_service'), $this->get('ezpublish.config.resolver.chain'));
    }
    protected function getEzpublish_DynamicSettingsListenerService()
    {
        $this->services['ezpublish.dynamic_settings_listener'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\EventListener\DynamicSettingsListener(array(0 => 'ezpublish.core.io.flysystem.default_adapter', 1 => 'ezpublish.core.io.metadata_handler', 2 => 'ezpublish.core.io.binarydata_handler', 3 => 'ezpublish.core.io.service', 4 => 'ezpublish.core.io.flysystem.default_filesystem'), array(0 => 'ezpublish.config_resolver.fake.io.root_dir__', 1 => 'ezpublish.config_resolver.fake.io.url_prefix__', 2 => 'ezpublish.config_resolver.fake.io.legacy_url_prefix__', 3 => 'ezpublish.config_resolver.fake.var_dir__', 4 => 'ezpublish.config_resolver.fake.storage_dir__', 5 => 'ezpublish.config_resolver.fake.image.versioned_images_dir__', 6 => 'ezpublish.config_resolver.fake.image.published_images_dir__', 9 => 'ezpublish.config_resolver.fake.binary_dir__', 10 => 'ezpublish.config_resolver.fake.io.metadata_handler__', 11 => 'ezpublish.config_resolver.fake.io.binarydata_handler__'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEzpublish_FieldHelperService()
    {
        return $this->services['ezpublish.field_helper'] = new \eZ\Publish\Core\Helper\FieldHelper($this->get('ezpublish.translation_helper'), $this->get('ezpublish.api.service.content_type'), $this->get('ezpublish.api.service.field_type'));
    }
    protected function getEzpublish_FieldTypeCollection_FactoryService()
    {
        $this->services['ezpublish.field_type_collection.factory'] = $instance = new \eZ\Publish\Core\Base\Container\ApiLoader\FieldTypeCollectionFactory();
        $instance->setContainer($this);
        $instance->registerFieldType('ezpublish.fieldtype.ezauthor', 'ezauthor');
        $instance->registerFieldType('ezpublish.fieldtype.ezbinaryfile', 'ezbinaryfile');
        $instance->registerFieldType('ezpublish.fieldtype.ezboolean', 'ezboolean');
        $instance->registerFieldType('ezpublish.fieldtype.ezcountry', 'ezcountry');
        $instance->registerFieldType('ezpublish.fieldtype.ezdatetime', 'ezdatetime');
        $instance->registerFieldType('ezpublish.fieldtype.ezemail', 'ezemail');
        $instance->registerFieldType('ezpublish.fieldtype.ezfloat', 'ezfloat');
        $instance->registerFieldType('ezpublish.fieldtype.ezinteger', 'ezinteger');
        $instance->registerFieldType('ezpublish.fieldtype.ezimage', 'ezimage');
        $instance->registerFieldType('ezpublish.fieldtype.ezisbn', 'ezisbn');
        $instance->registerFieldType('ezpublish.fieldtype.ezkeyword', 'ezkeyword');
        $instance->registerFieldType('ezpublish.fieldtype.ezmedia', 'ezmedia');
        $instance->registerFieldType('ezpublish.fieldtype.ezobjectrelation', 'ezobjectrelation');
        $instance->registerFieldType('ezpublish.fieldtype.ezsrrating', 'ezsrrating');
        $instance->registerFieldType('ezpublish.fieldtype.ezselection', 'ezselection');
        $instance->registerFieldType('ezpublish.fieldtype.eztext', 'eztext');
        $instance->registerFieldType('ezpublish.fieldtype.ezstring', 'ezstring');
        $instance->registerFieldType('ezpublish.fieldtype.ezurl', 'ezurl');
        $instance->registerFieldType('ezpublish.fieldtype.ezrichtext', 'ezrichtext');
        $instance->registerFieldType('ezpublish.fieldtype.ezxmltext', 'ezxmltext');
        $instance->registerFieldType('ezpublish.fieldtype.ezpage', 'ezpage');
        $instance->registerFieldType('ezpublish.fieldtype.ezgmaplocation', 'ezgmaplocation');
        $instance->registerFieldType('ezpublish.fieldtype.ezobjectrelationlist', 'ezobjectrelationlist');
        $instance->registerFieldType('ezpublish.fieldtype.ezuser', 'ezuser');
        $instance->registerFieldType('ezpublish.fieldtype.ezdate', 'ezdate');
        $instance->registerFieldType('ezpublish.fieldtype.ezenum', 'ezenum');
        $instance->registerFieldType('ezpublish.fieldtype.ezidentifier', 'ezidentifier');
        $instance->registerFieldType('ezpublish.fieldtype.ezinisetting', 'ezinisetting');
        $instance->registerFieldType('ezpublish.fieldtype.ezmatrix', 'ezmatrix');
        $instance->registerFieldType('ezpublish.fieldtype.ezmultioption', 'ezmultioption');
        $instance->registerFieldType('ezpublish.fieldtype.ezmultioption2', 'ezmultioption2');
        $instance->registerFieldType('ezpublish.fieldtype.ezmultiprice', 'ezmultiprice');
        $instance->registerFieldType('ezpublish.fieldtype.ezoption', 'ezoption');
        $instance->registerFieldType('ezpublish.fieldtype.ezpackage', 'ezpackage');
        $instance->registerFieldType('ezpublish.fieldtype.ezprice', 'ezprice');
        $instance->registerFieldType('ezpublish.fieldtype.ezproductcategory', 'ezproductcategory');
        $instance->registerFieldType('ezpublish.fieldtype.ezrangeoption', 'ezrangeoption');
        $instance->registerFieldType('ezpublish.fieldtype.ezsubtreesubscription', 'ezsubtreesubscription');
        $instance->registerFieldType('ezpublish.fieldtype.eztime', 'eztime');
        $instance->registerFieldType('ezpublish.fieldtype.ezcomcomments', 'ezcomcomments');
        $instance->registerFieldType('ezpublish.fieldtype.ezpaex', 'ezpaex');
        $instance->registerFieldType('ezpublish.fieldtype.ezsurvey', 'ezsurvey');
        $instance->registerFieldType('ezpublish.fieldtype.eztags', 'eztags');
        $instance->registerFieldType('ezpublish.fieldtype.ezrecommendation', 'ezrecommendation');
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Externalstoragehandler_Ezgmaplocation_GatewayService()
    {
        return $this->services['ezpublish.fieldtype.externalstoragehandler.ezgmaplocation.gateway'] = new \eZ\Publish\Core\FieldType\MapLocation\MapLocationStorage\Gateway\LegacyStorage();
    }
    protected function getEzpublish_Fieldtype_EzauthorService()
    {
        $this->services['ezpublish.fieldtype.ezauthor'] = $instance = new \eZ\Publish\Core\FieldType\Author\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezauthor_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezauthor.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Author();
    }
    protected function getEzpublish_Fieldtype_EzbinaryfileService()
    {
        $this->services['ezpublish.fieldtype.ezbinaryfile'] = $instance = new \eZ\Publish\Core\FieldType\BinaryFile\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezbinaryfile_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezbinaryfile.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\BinaryFile();
    }
    protected function getEzpublish_Fieldtype_Ezbinaryfile_ExternalstorageService()
    {
        $this->services['ezpublish.fieldtype.ezbinaryfile.externalstorage'] = $instance = new \eZ\Publish\Core\FieldType\BinaryFile\BinaryFileStorage(array(), $this->get('ezpublish.fieldtype.ezbinaryfile.io_service'), $this->get('ezpublish.fieldtype.ezbinaryfile.pathgenerator'), $this->get('ezpublish.core.io.mimetypedetector.fileinfo'));
        $instance->addGateway('LegacyStorage', $this->get('ezpublish.fieldtype.ezbinaryfile.storage_gateway'));
        return $instance;
    }
    public function getEzpublish_Fieldtype_Ezbinaryfile_IoServiceService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.fieldtype.ezbinaryfile.io_service'] = new eZPublishCoreIOTolerantIOService_000000002343b56c000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Fieldtype_Ezbinaryfile_IoServiceService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        $instance = new \eZ\Publish\Core\IO\TolerantIOService($this->get('ezpublish.core.io.metadata_handler'), $this->get('ezpublish.core.io.binarydata_handler'), $this->get('ezpublish.core.io.mimetypedetector.fileinfo'));
        if ($this->has('logger')) {
            $instance->setLogger($this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setPrefix($this->get('ezpublish.config_resolver.fake.binary_dir__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezbinaryfile_PathgeneratorService()
    {
        return $this->services['ezpublish.fieldtype.ezbinaryfile.pathgenerator'] = new \eZ\Publish\Core\FieldType\BinaryBase\PathGenerator\LegacyPathGenerator();
    }
    protected function getEzpublish_Fieldtype_Ezbinaryfile_StorageGatewayService()
    {
        return $this->services['ezpublish.fieldtype.ezbinaryfile.storage_gateway'] = new \eZ\Publish\Core\FieldType\BinaryFile\BinaryFileStorage\Gateway\LegacyStorage();
    }
    protected function getEzpublish_Fieldtype_EzbooleanService()
    {
        $this->services['ezpublish.fieldtype.ezboolean'] = $instance = new \eZ\Publish\Core\FieldType\Checkbox\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezboolean_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezboolean.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Checkbox();
    }
    protected function getEzpublish_Fieldtype_EzcomcommentsService()
    {
        $this->services['ezpublish.fieldtype.ezcomcomments'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezcomcomments');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezcomcomments_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezcomcomments.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EzcountryService()
    {
        $this->services['ezpublish.fieldtype.ezcountry'] = $instance = new \eZ\Publish\Core\FieldType\Country\Type(array('AF' => array('Name' => 'Afghanistan', 'Alpha2' => 'AF', 'Alpha3' => 'AFG', 'IDC' => '93'), 'AX' => array('Name' => 'Åland', 'Alpha2' => 'AX', 'Alpha3' => 'ALA', 'IDC' => '358'), 'AL' => array('Name' => 'Albania', 'Alpha2' => 'AL', 'Alpha3' => 'ALB', 'IDC' => '355'), 'DZ' => array('Name' => 'Algeria', 'Alpha2' => 'DZ', 'Alpha3' => 'DZA', 'IDC' => '213'), 'AS' => array('Name' => 'American Samoa', 'Alpha2' => 'AS', 'Alpha3' => 'ASM', 'IDC' => '1684'), 'AD' => array('Name' => 'Andorra', 'Alpha2' => 'AD', 'Alpha3' => 'AND', 'IDC' => '376'), 'AO' => array('Name' => 'Angola', 'Alpha2' => 'AO', 'Alpha3' => 'AGO', 'IDC' => '244'), 'AI' => array('Name' => 'Anguilla', 'Alpha2' => 'AI', 'Alpha3' => 'AIA', 'IDC' => '1264'), 'AQ' => array('Name' => 'Antarctica', 'Alpha2' => 'AQ', 'Alpha3' => 'ATA', 'IDC' => '672'), 'AG' => array('Name' => 'Antigua and Barbuda', 'Alpha2' => 'AG', 'Alpha3' => 'ATG', 'IDC' => '1268'), 'AR' => array('Name' => 'Argentina', 'Alpha2' => 'AR', 'Alpha3' => 'ARG', 'IDC' => '54'), 'AM' => array('Name' => 'Armenia', 'Alpha2' => 'AM', 'Alpha3' => 'ARM', 'IDC' => '374'), 'AW' => array('Name' => 'Aruba', 'Alpha2' => 'AW', 'Alpha3' => 'ABW', 'IDC' => '297'), 'AU' => array('Name' => 'Australia', 'Alpha2' => 'AU', 'Alpha3' => 'AUS', 'IDC' => '61'), 'AT' => array('Name' => 'Austria', 'Alpha2' => 'AT', 'Alpha3' => 'AUT', 'IDC' => '43'), 'AZ' => array('Name' => 'Azerbaijan', 'Alpha2' => 'AZ', 'Alpha3' => 'AZE', 'IDC' => '994'), 'BS' => array('Name' => 'Bahamas', 'Alpha2' => 'BS', 'Alpha3' => 'BHS', 'IDC' => '1242'), 'BH' => array('Name' => 'Bahrain', 'Alpha2' => 'BH', 'Alpha3' => 'BHR', 'IDC' => '973'), 'BD' => array('Name' => 'Bangladesh', 'Alpha2' => 'BD', 'Alpha3' => 'BGD', 'IDC' => '880'), 'BB' => array('Name' => 'Barbados', 'Alpha2' => 'BB', 'Alpha3' => 'BRB', 'IDC' => '1246'), 'BY' => array('Name' => 'Belarus', 'Alpha2' => 'BY', 'Alpha3' => 'BLR', 'IDC' => '375'), 'BE' => array('Name' => 'Belgium', 'Alpha2' => 'BE', 'Alpha3' => 'BEL', 'IDC' => '32'), 'BZ' => array('Name' => 'Belize', 'Alpha2' => 'BZ', 'Alpha3' => 'BLZ', 'IDC' => '501'), 'BJ' => array('Name' => 'Benin', 'Alpha2' => 'BJ', 'Alpha3' => 'BEN', 'IDC' => '229'), 'BM' => array('Name' => 'Bermuda', 'Alpha2' => 'BM', 'Alpha3' => 'BMU', 'IDC' => '1441'), 'BT' => array('Name' => 'Bhutan', 'Alpha2' => 'BT', 'Alpha3' => 'BTN', 'IDC' => '975'), 'BO' => array('Name' => 'Bolivia', 'Alpha2' => 'BO', 'Alpha3' => 'BOL', 'IDC' => '591'), 'BA' => array('Name' => 'Bosnia and Herzegovina', 'Alpha2' => 'BA', 'Alpha3' => 'BIH', 'IDC' => '387'), 'BW' => array('Name' => 'Botswana', 'Alpha2' => 'BW', 'Alpha3' => 'BWA', 'IDC' => '267'), 'BV' => array('Name' => 'Bouvet Island', 'Alpha2' => 'BV', 'Alpha3' => 'BVT', 'IDC' => '47'), 'BR' => array('Name' => 'Brazil', 'Alpha2' => 'BR', 'Alpha3' => 'BRA', 'IDC' => '55'), 'IO' => array('Name' => 'British Indian Ocean Territory', 'Alpha2' => 'IO', 'Alpha3' => 'IOT', 'IDC' => '246'), 'BN' => array('Name' => 'Brunei Darussalam', 'Alpha2' => 'BN', 'Alpha3' => 'BRN', 'IDC' => '673'), 'BG' => array('Name' => 'Bulgaria', 'Alpha2' => 'BG', 'Alpha3' => 'BGR', 'IDC' => '359'), 'BF' => array('Name' => 'Burkina Faso', 'Alpha2' => 'BF', 'Alpha3' => 'BFA', 'IDC' => '226'), 'BI' => array('Name' => 'Burundi', 'Alpha2' => 'BI', 'Alpha3' => 'BDI', 'IDC' => '257'), 'KH' => array('Name' => 'Cambodia', 'Alpha2' => 'KH', 'Alpha3' => 'KHM', 'IDC' => '855'), 'CM' => array('Name' => 'Cameroon', 'Alpha2' => 'CM', 'Alpha3' => 'CMR', 'IDC' => '237'), 'CA' => array('Name' => 'Canada', 'Alpha2' => 'CA', 'Alpha3' => 'CAN', 'IDC' => '1'), 'CV' => array('Name' => 'Cape Verde', 'Alpha2' => 'CV', 'Alpha3' => 'CPV', 'IDC' => '238'), 'KY' => array('Name' => 'Cayman Islands', 'Alpha2' => 'KY', 'Alpha3' => 'CYM', 'IDC' => '1345'), 'CF' => array('Name' => 'Central African Republic', 'Alpha2' => 'CF', 'Alpha3' => 'CAF', 'IDC' => '236'), 'TD' => array('Name' => 'Chad', 'Alpha2' => 'TD', 'Alpha3' => 'TCD', 'IDC' => '235'), 'CL' => array('Name' => 'Chile', 'Alpha2' => 'CL', 'Alpha3' => 'CHL', 'IDC' => '56'), 'CN' => array('Name' => 'China', 'Alpha2' => 'CN', 'Alpha3' => 'CHN', 'IDC' => '86'), 'CX' => array('Name' => 'Christmas Island', 'Alpha2' => 'CX', 'Alpha3' => 'CXR', 'IDC' => '61'), 'CC' => array('Name' => 'Cocos (Keeling) Islands', 'Alpha2' => 'CC', 'Alpha3' => 'CCK', 'IDC' => '61'), 'CO' => array('Name' => 'Colombia', 'Alpha2' => 'CO', 'Alpha3' => 'COL', 'IDC' => '57'), 'KM' => array('Name' => 'Comoros', 'Alpha2' => 'KM', 'Alpha3' => 'COM', 'IDC' => '269'), 'CG' => array('Name' => 'Congo', 'Alpha2' => 'CG', 'Alpha3' => 'COG', 'IDC' => '242'), 'CD' => array('Name' => 'Congo, The Democratic Republic Of The', 'Alpha2' => 'CD', 'Alpha3' => 'COD', 'IDC' => '243'), 'CK' => array('Name' => 'Cook Islands', 'Alpha2' => 'CK', 'Alpha3' => 'COK', 'IDC' => '682'), 'CR' => array('Name' => 'Costa Rica', 'Alpha2' => 'CR', 'Alpha3' => 'CRI', 'IDC' => '506'), 'CI' => array('Name' => 'Côte d\'Ivoire', 'Alpha2' => 'CI', 'Alpha3' => 'CIV', 'IDC' => '225'), 'HR' => array('Name' => 'Croatia', 'Alpha2' => 'HR', 'Alpha3' => 'HRV', 'IDC' => '385'), 'CU' => array('Name' => 'Cuba', 'Alpha2' => 'CU', 'Alpha3' => 'CUB', 'IDC' => '53'), 'CY' => array('Name' => 'Cyprus', 'Alpha2' => 'CY', 'Alpha3' => 'CYP', 'IDC' => '357'), 'CZ' => array('Name' => 'Czech Republic', 'Alpha2' => 'CZ', 'Alpha3' => 'CZE', 'IDC' => '420'), 'DK' => array('Name' => 'Denmark', 'Alpha2' => 'DK', 'Alpha3' => 'DNK', 'IDC' => '45'), 'DJ' => array('Name' => 'Djibouti', 'Alpha2' => 'DJ', 'Alpha3' => 'DJI', 'IDC' => '253'), 'DM' => array('Name' => 'Dominica', 'Alpha2' => 'DM', 'Alpha3' => 'DMA', 'IDC' => '1767'), 'DO' => array('Name' => 'Dominican Republic', 'Alpha2' => 'DO', 'Alpha3' => 'DOM', 'IDC' => '1809'), 'EC' => array('Name' => 'Ecuador', 'Alpha2' => 'EC', 'Alpha3' => 'ECU', 'IDC' => '593'), 'EG' => array('Name' => 'Egypt', 'Alpha2' => 'EG', 'Alpha3' => 'EGY', 'IDC' => '20'), 'SV' => array('Name' => 'El Salvador', 'Alpha2' => 'SV', 'Alpha3' => 'SLV', 'IDC' => '503'), 'GQ' => array('Name' => 'Equatorial Guinea', 'Alpha2' => 'GQ', 'Alpha3' => 'GNQ', 'IDC' => '240'), 'ER' => array('Name' => 'Eritrea', 'Alpha2' => 'ER', 'Alpha3' => 'ERI', 'IDC' => '291'), 'EE' => array('Name' => 'Estonia', 'Alpha2' => 'EE', 'Alpha3' => 'EST', 'IDC' => '372'), 'ET' => array('Name' => 'Ethiopia', 'Alpha2' => 'ET', 'Alpha3' => 'ETH', 'IDC' => '251'), 'FK' => array('Name' => 'Falkland Islands (Malvinas)', 'Alpha2' => 'FK', 'Alpha3' => 'FLK', 'IDC' => '500'), 'FO' => array('Name' => 'Faroe Islands', 'Alpha2' => 'FO', 'Alpha3' => 'FRO', 'IDC' => '298'), 'FJ' => array('Name' => 'Fiji', 'Alpha2' => 'FJ', 'Alpha3' => 'FJI', 'IDC' => '679'), 'FI' => array('Name' => 'Finland', 'Alpha2' => 'FI', 'Alpha3' => 'FIN', 'IDC' => '358'), 'FR' => array('Name' => 'France', 'Alpha2' => 'FR', 'Alpha3' => 'FRA', 'IDC' => '33'), 'GF' => array('Name' => 'French Guiana', 'Alpha2' => 'GF', 'Alpha3' => 'GUF', 'IDC' => '594'), 'PF' => array('Name' => 'French Polynesia', 'Alpha2' => 'PF', 'Alpha3' => 'PYF', 'IDC' => '689'), 'TF' => array('Name' => 'French Southern Territories', 'Alpha2' => 'TF', 'Alpha3' => 'ATF', 'IDC' => '0'), 'GA' => array('Name' => 'Gabon', 'Alpha2' => 'GA', 'Alpha3' => 'GAB', 'IDC' => '241'), 'GM' => array('Name' => 'Gambia', 'Alpha2' => 'GM', 'Alpha3' => 'GMB', 'IDC' => '220'), 'GE' => array('Name' => 'Georgia', 'Alpha2' => 'GE', 'Alpha3' => 'GEO', 'IDC' => '995'), 'DE' => array('Name' => 'Germany', 'Alpha2' => 'DE', 'Alpha3' => 'DEU', 'IDC' => '49'), 'GH' => array('Name' => 'Ghana', 'Alpha2' => 'GH', 'Alpha3' => 'GHA', 'IDC' => '233'), 'GI' => array('Name' => 'Gibraltar', 'Alpha2' => 'GI', 'Alpha3' => 'GIB', 'IDC' => '350'), 'GR' => array('Name' => 'Greece', 'Alpha2' => 'GR', 'Alpha3' => 'GRC', 'IDC' => '30'), 'GL' => array('Name' => 'Greenland', 'Alpha2' => 'GL', 'Alpha3' => 'GRL', 'IDC' => '299'), 'GD' => array('Name' => 'Grenada', 'Alpha2' => 'GD', 'Alpha3' => 'GRD', 'IDC' => '1473'), 'GP' => array('Name' => 'Guadeloupe', 'Alpha2' => 'GP', 'Alpha3' => 'GLP', 'IDC' => '590'), 'GU' => array('Name' => 'Guam', 'Alpha2' => 'GU', 'Alpha3' => 'GUM', 'IDC' => '1671'), 'GT' => array('Name' => 'Guatemala', 'Alpha2' => 'GT', 'Alpha3' => 'GTM', 'IDC' => '502'), 'GG' => array('Name' => 'Guernsey', 'Alpha2' => 'GG', 'Alpha3' => 'GGY', 'IDC' => '44'), 'GN' => array('Name' => 'Guinea', 'Alpha2' => 'GN', 'Alpha3' => 'GIN', 'IDC' => '224'), 'GW' => array('Name' => 'Guinea-Bissau', 'Alpha2' => 'GW', 'Alpha3' => 'GNB', 'IDC' => '245'), 'GY' => array('Name' => 'Guyana', 'Alpha2' => 'GY', 'Alpha3' => 'GUY', 'IDC' => '592'), 'HT' => array('Name' => 'Haiti', 'Alpha2' => 'HT', 'Alpha3' => 'HTI', 'IDC' => '509'), 'HM' => array('Name' => 'Heard Island and McDonald Islands', 'Alpha2' => 'HM', 'Alpha3' => 'HMD', 'IDC' => '672'), 'HN' => array('Name' => 'Honduras', 'Alpha2' => 'HN', 'Alpha3' => 'HND', 'IDC' => '504'), 'HK' => array('Name' => 'Hong Kong', 'Alpha2' => 'HK', 'Alpha3' => 'HKG', 'IDC' => '852'), 'HU' => array('Name' => 'Hungary', 'Alpha2' => 'HU', 'Alpha3' => 'HUN', 'IDC' => '36'), 'IS' => array('Name' => 'Iceland', 'Alpha2' => 'IS', 'Alpha3' => 'ISL', 'IDC' => '354'), 'IN' => array('Name' => 'India', 'Alpha2' => 'IN', 'Alpha3' => 'IND', 'IDC' => '91'), 'ID' => array('Name' => 'Indonesia', 'Alpha2' => 'ID', 'Alpha3' => 'IDN', 'IDC' => '62'), 'IR' => array('Name' => 'Iran, Islamic Republic of', 'Alpha2' => 'IR', 'Alpha3' => 'IRN', 'IDC' => '98'), 'IQ' => array('Name' => 'Iraq', 'Alpha2' => 'IQ', 'Alpha3' => 'IRQ', 'IDC' => '964'), 'IE' => array('Name' => 'Ireland', 'Alpha2' => 'IE', 'Alpha3' => 'IRL', 'IDC' => '353'), 'IM' => array('Name' => 'Isle of Man', 'Alpha2' => 'IM', 'Alpha3' => 'IMN', 'IDC' => '44'), 'IL' => array('Name' => 'Israel', 'Alpha2' => 'IL', 'Alpha3' => 'ISR', 'IDC' => '972'), 'IT' => array('Name' => 'Italy', 'Alpha2' => 'IT', 'Alpha3' => 'ITA', 'IDC' => '39'), 'JM' => array('Name' => 'Jamaica', 'Alpha2' => 'JM', 'Alpha3' => 'JAM', 'IDC' => '1876'), 'JP' => array('Name' => 'Japan', 'Alpha2' => 'JP', 'Alpha3' => 'JPN', 'IDC' => '81'), 'JE' => array('Name' => 'Jersey', 'Alpha2' => 'JE', 'Alpha3' => 'JEY', 'IDC' => '44'), 'JO' => array('Name' => 'Jordan', 'Alpha2' => 'JO', 'Alpha3' => 'JOR', 'IDC' => '962'), 'KZ' => array('Name' => 'Kazakhstan', 'Alpha2' => 'KZ', 'Alpha3' => 'KAZ', 'IDC' => '7'), 'KE' => array('Name' => 'Kenya', 'Alpha2' => 'KE', 'Alpha3' => 'KEN', 'IDC' => '254'), 'KI' => array('Name' => 'Kiribati', 'Alpha2' => 'KI', 'Alpha3' => 'KIR', 'IDC' => '686'), 'KP' => array('Name' => 'Korea, Democratic People\'s Republic of', 'Alpha2' => 'KP', 'Alpha3' => 'PRK', 'IDC' => '850'), 'KR' => array('Name' => 'Korea, Republic of', 'Alpha2' => 'KR', 'Alpha3' => 'KOR', 'IDC' => '82'), 'KW' => array('Name' => 'Kuwait', 'Alpha2' => 'KW', 'Alpha3' => 'KWT', 'IDC' => '965'), 'KG' => array('Name' => 'Kyrgyzstan', 'Alpha2' => 'KG', 'Alpha3' => 'KGZ', 'IDC' => '996'), 'LA' => array('Name' => 'Lao People\'s Democratic Republic', 'Alpha2' => 'LA', 'Alpha3' => 'LAO', 'IDC' => '856'), 'LV' => array('Name' => 'Latvia', 'Alpha2' => 'LV', 'Alpha3' => 'LVA', 'IDC' => '371'), 'LB' => array('Name' => 'Lebanon', 'Alpha2' => 'LB', 'Alpha3' => 'LBN', 'IDC' => '961'), 'LS' => array('Name' => 'Lesotho', 'Alpha2' => 'LS', 'Alpha3' => 'LSO', 'IDC' => '266'), 'LR' => array('Name' => 'Liberia', 'Alpha2' => 'LR', 'Alpha3' => 'LBR', 'IDC' => '231'), 'LY' => array('Name' => 'Libyan Arab Jamahiriya', 'Alpha2' => 'LY', 'Alpha3' => 'LBY', 'IDC' => '218'), 'LI' => array('Name' => 'Liechtenstein', 'Alpha2' => 'LI', 'Alpha3' => 'LIE', 'IDC' => '423'), 'LT' => array('Name' => 'Lithuania', 'Alpha2' => 'LT', 'Alpha3' => 'LTU', 'IDC' => '370'), 'LU' => array('Name' => 'Luxembourg', 'Alpha2' => 'LU', 'Alpha3' => 'LUX', 'IDC' => '352'), 'MO' => array('Name' => 'Macau', 'Alpha2' => 'MO', 'Alpha3' => 'MAC', 'IDC' => '853'), 'MK' => array('Name' => 'Macedonia, The Former Yugoslav Republic of', 'Alpha2' => 'MK', 'Alpha3' => 'MKD', 'IDC' => '389'), 'MG' => array('Name' => 'Madagascar', 'Alpha2' => 'MG', 'Alpha3' => 'MDG', 'IDC' => '261'), 'MW' => array('Name' => 'Malawi', 'Alpha2' => 'MW', 'Alpha3' => 'MWI', 'IDC' => '265'), 'MY' => array('Name' => 'Malaysia', 'Alpha2' => 'MY', 'Alpha3' => 'MYS', 'IDC' => '60'), 'MV' => array('Name' => 'Maldives', 'Alpha2' => 'MV', 'Alpha3' => 'MDV', 'IDC' => '960'), 'ML' => array('Name' => 'Mali', 'Alpha2' => 'ML', 'Alpha3' => 'MLI', 'IDC' => '223'), 'MT' => array('Name' => 'Malta', 'Alpha2' => 'MT', 'Alpha3' => 'MLT', 'IDC' => '356'), 'MH' => array('Name' => 'Marshall Islands', 'Alpha2' => 'MH', 'Alpha3' => 'MHL', 'IDC' => '692'), 'MQ' => array('Name' => 'Martinique', 'Alpha2' => 'MQ', 'Alpha3' => 'MTQ', 'IDC' => '596'), 'MR' => array('Name' => 'Mauritania', 'Alpha2' => 'MR', 'Alpha3' => 'MRT', 'IDC' => '222'), 'MU' => array('Name' => 'Mauritius', 'Alpha2' => 'MU', 'Alpha3' => 'MUS', 'IDC' => '230'), 'YT' => array('Name' => 'Mayotte', 'Alpha2' => 'YT', 'Alpha3' => 'MYT', 'IDC' => '262'), 'MX' => array('Name' => 'Mexico', 'Alpha2' => 'MX', 'Alpha3' => 'MEX', 'IDC' => '52'), 'FM' => array('Name' => 'Micronesia, Federated States of', 'Alpha2' => 'FM', 'Alpha3' => 'FSM', 'IDC' => '691'), 'MD' => array('Name' => 'Moldova, Republic of', 'Alpha2' => 'MD', 'Alpha3' => 'MDA', 'IDC' => '373'), 'MC' => array('Name' => 'Monaco', 'Alpha2' => 'MC', 'Alpha3' => 'MCO', 'IDC' => '377'), 'MN' => array('Name' => 'Mongolia', 'Alpha2' => 'MN', 'Alpha3' => 'MNG', 'IDC' => '976'), 'ME' => array('Name' => 'Montenegro', 'Alpha2' => 'ME', 'Alpha3' => 'MNE', 'IDC' => '382'), 'MS' => array('Name' => 'Montserrat', 'Alpha2' => 'MS', 'Alpha3' => 'MSR', 'IDC' => '1664'), 'MA' => array('Name' => 'Morocco', 'Alpha2' => 'MA', 'Alpha3' => 'MAR', 'IDC' => '212'), 'MZ' => array('Name' => 'Mozambique', 'Alpha2' => 'MZ', 'Alpha3' => 'MOZ', 'IDC' => '258'), 'MM' => array('Name' => 'Myanmar', 'Alpha2' => 'MM', 'Alpha3' => 'MMR', 'IDC' => '95'), 'NA' => array('Name' => 'Namibia', 'Alpha2' => 'NA', 'Alpha3' => 'NAM', 'IDC' => '264'), 'NR' => array('Name' => 'Nauru', 'Alpha2' => 'NR', 'Alpha3' => 'NRU', 'IDC' => '674'), 'NP' => array('Name' => 'Nepal', 'Alpha2' => 'NP', 'Alpha3' => 'NPL', 'IDC' => '977'), 'NL' => array('Name' => 'Netherlands', 'Alpha2' => 'NL', 'Alpha3' => 'NLD', 'IDC' => '31'), 'AN' => array('Name' => 'Netherlands Antilles', 'Alpha2' => 'AN', 'Alpha3' => 'ANT', 'IDC' => '599'), 'NC' => array('Name' => 'New Caledonia', 'Alpha2' => 'NC', 'Alpha3' => 'NCL', 'IDC' => '687'), 'NZ' => array('Name' => 'New Zealand', 'Alpha2' => 'NZ', 'Alpha3' => 'NZL', 'IDC' => '64'), 'NI' => array('Name' => 'Nicaragua', 'Alpha2' => 'NI', 'Alpha3' => 'NIC', 'IDC' => '505'), 'NE' => array('Name' => 'Niger', 'Alpha2' => 'NE', 'Alpha3' => 'NER', 'IDC' => '227'), 'NG' => array('Name' => 'Nigeria', 'Alpha2' => 'NG', 'Alpha3' => 'NGA', 'IDC' => '234'), 'NU' => array('Name' => 'Niue', 'Alpha2' => 'NU', 'Alpha3' => 'NIU', 'IDC' => '683'), 'NF' => array('Name' => 'Norfolk Island', 'Alpha2' => 'NF', 'Alpha3' => 'NFK', 'IDC' => '6723'), 'MP' => array('Name' => 'Northern Mariana Islands', 'Alpha2' => 'MP', 'Alpha3' => 'MNP', 'IDC' => '1670'), 'NO' => array('Name' => 'Norway', 'Alpha2' => 'NO', 'Alpha3' => 'NOR', 'IDC' => '47'), 'OM' => array('Name' => 'Oman', 'Alpha2' => 'OM', 'Alpha3' => 'OMN', 'IDC' => '968'), 'PK' => array('Name' => 'Pakistan', 'Alpha2' => 'PK', 'Alpha3' => 'PAK', 'IDC' => '92'), 'PW' => array('Name' => 'Palau', 'Alpha2' => 'PW', 'Alpha3' => 'PLW', 'IDC' => '680'), 'PS' => array('Name' => 'Palestinian Territory, Occupied', 'Alpha2' => 'PS', 'Alpha3' => 'PSE', 'IDC' => '970'), 'PA' => array('Name' => 'Panama', 'Alpha2' => 'PA', 'Alpha3' => 'PAN', 'IDC' => '507'), 'PG' => array('Name' => 'Papua New Guinea', 'Alpha2' => 'PG', 'Alpha3' => 'PNG', 'IDC' => '675'), 'PY' => array('Name' => 'Paraguay', 'Alpha2' => 'PY', 'Alpha3' => 'PRY', 'IDC' => '595'), 'PE' => array('Name' => 'Peru', 'Alpha2' => 'PE', 'Alpha3' => 'PER', 'IDC' => '51'), 'PH' => array('Name' => 'Philippines', 'Alpha2' => 'PH', 'Alpha3' => 'PHL', 'IDC' => '63'), 'PN' => array('Name' => 'Pitcairn', 'Alpha2' => 'PN', 'Alpha3' => 'PCN', 'IDC' => '64'), 'PL' => array('Name' => 'Poland', 'Alpha2' => 'PL', 'Alpha3' => 'POL', 'IDC' => '48'), 'PT' => array('Name' => 'Portugal', 'Alpha2' => 'PT', 'Alpha3' => 'PRT', 'IDC' => '351'), 'PR' => array('Name' => 'Puerto Rico', 'Alpha2' => 'PR', 'Alpha3' => 'PRI', 'IDC' => '1787'), 'QA' => array('Name' => 'Qatar', 'Alpha2' => 'QA', 'Alpha3' => 'QAT', 'IDC' => '974'), 'RE' => array('Name' => 'Reunion', 'Alpha2' => 'RE', 'Alpha3' => 'REU', 'IDC' => '262'), 'RO' => array('Name' => 'Romania', 'Alpha2' => 'RO', 'Alpha3' => 'ROU', 'IDC' => '40'), 'RU' => array('Name' => 'Russian Federation', 'Alpha2' => 'RU', 'Alpha3' => 'RUS', 'IDC' => '7'), 'RW' => array('Name' => 'Rwanda', 'Alpha2' => 'RW', 'Alpha3' => 'RWA', 'IDC' => '250'), 'BL' => array('Name' => 'Saint Barthélemy', 'Alpha2' => 'BL', 'Alpha3' => 'BLM', 'IDC' => '590'), 'SH' => array('Name' => 'Saint Helena', 'Alpha2' => 'SH', 'Alpha3' => 'SHN', 'IDC' => '290'), 'KN' => array('Name' => 'Saint Kitts and Nevis', 'Alpha2' => 'KN', 'Alpha3' => 'KNA', 'IDC' => '1869'), 'LC' => array('Name' => 'Saint Lucia', 'Alpha2' => 'LC', 'Alpha3' => 'LCA', 'IDC' => '1758'), 'MF' => array('Name' => 'Saint Martin', 'Alpha2' => 'MF', 'Alpha3' => 'MAF', 'IDC' => '590'), 'PM' => array('Name' => 'Saint Pierre and Miquelon', 'Alpha2' => 'PM', 'Alpha3' => 'SPM', 'IDC' => '508'), 'VC' => array('Name' => 'Saint Vincent and The Grenadines', 'Alpha2' => 'VC', 'Alpha3' => 'VCT', 'IDC' => '1784'), 'WS' => array('Name' => 'Samoa', 'Alpha2' => 'WS', 'Alpha3' => 'WSM', 'IDC' => '685'), 'SM' => array('Name' => 'San Marino', 'Alpha2' => 'SM', 'Alpha3' => 'SMR', 'IDC' => '378'), 'ST' => array('Name' => 'Sao Tome and Principe', 'Alpha2' => 'ST', 'Alpha3' => 'STP', 'IDC' => '239'), 'SA' => array('Name' => 'Saudi Arabia', 'Alpha2' => 'SA', 'Alpha3' => 'SAU', 'IDC' => '966'), 'SN' => array('Name' => 'Senegal', 'Alpha2' => 'SN', 'Alpha3' => 'SEN', 'IDC' => '221'), 'RS' => array('Name' => 'Serbia', 'Alpha2' => 'RS', 'Alpha3' => 'SRB', 'IDC' => '381'), 'SC' => array('Name' => 'Seychelles', 'Alpha2' => 'SC', 'Alpha3' => 'SYC', 'IDC' => '248'), 'SL' => array('Name' => 'Sierra Leone', 'Alpha2' => 'SL', 'Alpha3' => 'SLE', 'IDC' => '232'), 'SG' => array('Name' => 'Singapore', 'Alpha2' => 'SG', 'Alpha3' => 'SGP', 'IDC' => '65'), 'SK' => array('Name' => 'Slovakia', 'Alpha2' => 'SK', 'Alpha3' => 'SVK', 'IDC' => '421'), 'SI' => array('Name' => 'Slovenia', 'Alpha2' => 'SI', 'Alpha3' => 'SVN', 'IDC' => '386'), 'SB' => array('Name' => 'Solomon Islands', 'Alpha2' => 'SB', 'Alpha3' => 'SLB', 'IDC' => '677'), 'SO' => array('Name' => 'Somalia', 'Alpha2' => 'SO', 'Alpha3' => 'SOM', 'IDC' => '252'), 'ZA' => array('Name' => 'South Africa', 'Alpha2' => 'ZA', 'Alpha3' => 'ZAF', 'IDC' => '27'), 'GS' => array('Name' => 'South Georgia and The South Sandwich Islands', 'Alpha2' => 'GS', 'Alpha3' => 'SGS', 'IDC' => '500'), 'ES' => array('Name' => 'Spain', 'Alpha2' => 'ES', 'Alpha3' => 'ESP', 'IDC' => '34'), 'LK' => array('Name' => 'Sri Lanka', 'Alpha2' => 'LK', 'Alpha3' => 'LKA', 'IDC' => '94'), 'SD' => array('Name' => 'Sudan', 'Alpha2' => 'SD', 'Alpha3' => 'SDN', 'IDC' => '249'), 'SR' => array('Name' => 'Suriname', 'Alpha2' => 'SR', 'Alpha3' => 'SUR', 'IDC' => '597'), 'SJ' => array('Name' => 'Svalbard and Jan Mayen', 'Alpha2' => 'SJ', 'Alpha3' => 'SJM', 'IDC' => '47'), 'SZ' => array('Name' => 'Swaziland', 'Alpha2' => 'SZ', 'Alpha3' => 'SWZ', 'IDC' => '268'), 'SE' => array('Name' => 'Sweden', 'Alpha2' => 'SE', 'Alpha3' => 'SWE', 'IDC' => '46'), 'CH' => array('Name' => 'Switzerland', 'Alpha2' => 'CH', 'Alpha3' => 'CHE', 'IDC' => '41'), 'SY' => array('Name' => 'Syrian Arab Republic', 'Alpha2' => 'SY', 'Alpha3' => 'SYR', 'IDC' => '963'), 'TW' => array('Name' => 'Taiwan', 'Alpha2' => 'TW', 'Alpha3' => 'TWN', 'IDC' => '886'), 'TJ' => array('Name' => 'Tajikistan', 'Alpha2' => 'TJ', 'Alpha3' => 'TJK', 'IDC' => '992'), 'TZ' => array('Name' => 'Tanzania, United Republic of', 'Alpha2' => 'TZ', 'Alpha3' => 'TZA', 'IDC' => '255'), 'TH' => array('Name' => 'Thailand', 'Alpha2' => 'TH', 'Alpha3' => 'THA', 'IDC' => '66'), 'TL' => array('Name' => 'Timor-Leste', 'Alpha2' => 'TL', 'Alpha3' => 'TLS', 'IDC' => '670'), 'TG' => array('Name' => 'Togo', 'Alpha2' => 'TG', 'Alpha3' => 'TGO', 'IDC' => '228'), 'TK' => array('Name' => 'Tokelau', 'Alpha2' => 'TK', 'Alpha3' => 'TKL', 'IDC' => '690'), 'TO' => array('Name' => 'Tonga', 'Alpha2' => 'TO', 'Alpha3' => 'TON', 'IDC' => '676'), 'TT' => array('Name' => 'Trinidad and Tobago', 'Alpha2' => 'TT', 'Alpha3' => 'TTO', 'IDC' => '1868'), 'TN' => array('Name' => 'Tunisia', 'Alpha2' => 'TN', 'Alpha3' => 'TUN', 'IDC' => '216'), 'TR' => array('Name' => 'Turkey', 'Alpha2' => 'TR', 'Alpha3' => 'TUR', 'IDC' => '90'), 'TM' => array('Name' => 'Turkmenistan', 'Alpha2' => 'TM', 'Alpha3' => 'TKM', 'IDC' => '993'), 'TC' => array('Name' => 'Turks and Caicos Islands', 'Alpha2' => 'TC', 'Alpha3' => 'TCA', 'IDC' => '1649'), 'TV' => array('Name' => 'Tuvalu', 'Alpha2' => 'TV', 'Alpha3' => 'TUV', 'IDC' => '688'), 'UG' => array('Name' => 'Uganda', 'Alpha2' => 'UG', 'Alpha3' => 'UGA', 'IDC' => '256'), 'UA' => array('Name' => 'Ukraine', 'Alpha2' => 'UA', 'Alpha3' => 'UKR', 'IDC' => '380'), 'AE' => array('Name' => 'United Arab Emirates', 'Alpha2' => 'AE', 'Alpha3' => 'ARE', 'IDC' => '971'), 'GB' => array('Name' => 'United Kingdom', 'Alpha2' => 'GB', 'Alpha3' => 'GBR', 'IDC' => '44'), 'UM' => array('Name' => 'United States Minor Outlying Islands', 'Alpha2' => 'UM', 'Alpha3' => 'UMI', 'IDC' => '1'), 'US' => array('Name' => 'United States of America', 'Alpha2' => 'US', 'Alpha3' => 'USA', 'IDC' => '1'), 'UY' => array('Name' => 'Uruguay', 'Alpha2' => 'UY', 'Alpha3' => 'URY', 'IDC' => '598'), 'UZ' => array('Name' => 'Uzbekistan', 'Alpha2' => 'UZ', 'Alpha3' => 'UZB', 'IDC' => '998'), 'VU' => array('Name' => 'Vanuatu', 'Alpha2' => 'VU', 'Alpha3' => 'VUT', 'IDC' => '678'), 'VA' => array('Name' => 'Holy See (Vatican City State)', 'Alpha2' => 'VA', 'Alpha3' => 'VAT', 'IDC' => '3906'), 'VE' => array('Name' => 'Venezuela', 'Alpha2' => 'VE', 'Alpha3' => 'VEN', 'IDC' => '58'), 'VN' => array('Name' => 'Viet Nam', 'Alpha2' => 'VN', 'Alpha3' => 'VNM', 'IDC' => '84'), 'VG' => array('Name' => 'Virgin Islands, British', 'Alpha2' => 'VG', 'Alpha3' => 'VGB', 'IDC' => '1284'), 'VI' => array('Name' => 'Virgin Islands, U.S.', 'Alpha2' => 'VI', 'Alpha3' => 'VIR', 'IDC' => '1340'), 'WF' => array('Name' => 'Wallis and Futuna', 'Alpha2' => 'WF', 'Alpha3' => 'WLF', 'IDC' => '681'), 'EH' => array('Name' => 'Western Sahara', 'Alpha2' => 'EH', 'Alpha3' => 'ESH', 'IDC' => '212'), 'YE' => array('Name' => 'Yemen', 'Alpha2' => 'YE', 'Alpha3' => 'YEM', 'IDC' => '967'), 'ZM' => array('Name' => 'Zambia', 'Alpha2' => 'ZM', 'Alpha3' => 'ZMB', 'IDC' => '260'), 'ZW' => array('Name' => 'Zimbabwe', 'Alpha2' => 'ZW', 'Alpha3' => 'ZWE', 'IDC' => '263')));
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezcountry_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezcountry.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Country();
    }
    protected function getEzpublish_Fieldtype_EzdateService()
    {
        $this->services['ezpublish.fieldtype.ezdate'] = $instance = new \eZ\Publish\Core\FieldType\Date\Type('ezdate');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezdate_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezdate.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Date();
    }
    protected function getEzpublish_Fieldtype_EzdatetimeService()
    {
        $this->services['ezpublish.fieldtype.ezdatetime'] = $instance = new \eZ\Publish\Core\FieldType\DateAndTime\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezdatetime_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezdatetime.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\DateAndTime();
    }
    protected function getEzpublish_Fieldtype_Ezdatetime_ParameterproviderService()
    {
        $this->services['ezpublish.fieldtype.ezdatetime.parameterprovider'] = $instance = new \eZ\Publish\Core\MVC\Symfony\FieldType\View\ParameterProvider\LocaleParameterProvider($this->get('ezpublish.locale.converter'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getEzpublish_Fieldtype_EzemailService()
    {
        $this->services['ezpublish.fieldtype.ezemail'] = $instance = new \eZ\Publish\Core\FieldType\EmailAddress\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezemail_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezemail.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\EmailAddress();
    }
    protected function getEzpublish_Fieldtype_EzenumService()
    {
        $this->services['ezpublish.fieldtype.ezenum'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezenum');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezenum_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezenum.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EzfloatService()
    {
        $this->services['ezpublish.fieldtype.ezfloat'] = $instance = new \eZ\Publish\Core\FieldType\Float\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezfloat_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezfloat.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Float();
    }
    protected function getEzpublish_Fieldtype_EzgmaplocationService()
    {
        $this->services['ezpublish.fieldtype.ezgmaplocation'] = $instance = new \eZ\Publish\Core\FieldType\MapLocation\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezgmaplocation_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezgmaplocation.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\MapLocation();
    }
    protected function getEzpublish_Fieldtype_Ezgmaplocation_ExternalstorageService()
    {
        $this->services['ezpublish.fieldtype.ezgmaplocation.externalstorage'] = $instance = new \eZ\Publish\Core\FieldType\MapLocation\MapLocationStorage();
        $instance->addGateway('LegacyStorage', $this->get('ezpublish.fieldtype.externalstoragehandler.ezgmaplocation.gateway'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_EzidentifierService()
    {
        $this->services['ezpublish.fieldtype.ezidentifier'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezidentifier');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezidentifier_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezidentifier.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EzimageService()
    {
        $this->services['ezpublish.fieldtype.ezimage'] = $instance = new \eZ\Publish\Core\FieldType\Image\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezimage_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezimage.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Image($this->get('ezpublish.fieldtype.ezimage.io_service'), $this->get('ezpublish.core.io.image_fieldtype.legacy_url_redecorator'));
    }
    protected function getEzpublish_Fieldtype_Ezimage_ExternalstorageService()
    {
        $this->services['ezpublish.fieldtype.ezimage.externalstorage'] = $instance = new \eZ\Publish\Core\FieldType\Image\ImageStorage(array(), $this->get('ezpublish.fieldtype.ezimage.io_service'), $this->get('ezpublish.fieldtype.ezimage.pathgenerator'), $this->get('ezpublish.fieldtype.metadatahandler.imagesize'), $this->get('ezpublish.utils.deprecation_warner'), $this->get('ezpublish.image_alias.imagine.alias_cleaner', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->addGateway('LegacyStorage', $this->get('ezpublish.fieldtype.ezimage.storage_gateway'));
        return $instance;
    }
    public function getEzpublish_Fieldtype_Ezimage_IoServiceService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.fieldtype.ezimage.io_service'] = new eZPublishCoreFieldTypeImageIOLegacy_000000002343b564000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Fieldtype_Ezimage_IoServiceService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Publish\Core\FieldType\Image\IO\Legacy($this->get('ezpublish.fieldtype.ezimage.io_service.published'), $this->get('ezpublish.fieldtype.ezimage.io_service.draft'), $this->get('ezpublish.fieldtype.ezimage.io_service.options_provider'));
    }
    public function getEzpublish_Fieldtype_Ezimage_IoService_DraftService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.fieldtype.ezimage.io_service.draft'] = new eZPublishCoreIOTolerantIOService_000000002343b56e000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Fieldtype_Ezimage_IoService_DraftService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        $instance = new \eZ\Publish\Core\IO\TolerantIOService($this->get('ezpublish.core.io.metadata_handler'), $this->get('ezpublish.core.io.binarydata_handler'), $this->get('ezpublish.core.io.mimetypedetector.fileinfo'));
        if ($this->has('logger')) {
            $instance->setLogger($this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setPrefix($this->get('ezpublish.config_resolver.fake.image.versioned_images_dir__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezimage_IoService_OptionsProviderService()
    {
        $this->services['ezpublish.fieldtype.ezimage.io_service.options_provider'] = $instance = new \eZ\Publish\Core\FieldType\Image\IO\OptionsProvider();
        $instance->setVarDir($this->get('ezpublish.config_resolver.fake.var_dir__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->setStorageDir($this->get('ezpublish.config_resolver.fake.storage_dir__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->setDraftImagesDir($this->get('ezpublish.config_resolver.fake.image.versioned_images_dir__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->setPublishedImagesDir($this->get('ezpublish.config_resolver.fake.image.published_images_dir__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        return $instance;
    }
    public function getEzpublish_Fieldtype_Ezimage_IoService_PublishedService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.fieldtype.ezimage.io_service.published'] = new eZPublishCoreIOTolerantIOService_000000002343b784000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Fieldtype_Ezimage_IoService_PublishedService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        $instance = new \eZ\Publish\Core\IO\TolerantIOService($this->get('ezpublish.core.io.metadata_handler'), $this->get('ezpublish.core.io.binarydata_handler'), $this->get('ezpublish.core.io.mimetypedetector.fileinfo'));
        if ($this->has('logger')) {
            $instance->setLogger($this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setPrefix($this->get('ezpublish.config_resolver.fake.image.published_images_dir__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezimage_PathgeneratorService()
    {
        return $this->services['ezpublish.fieldtype.ezimage.pathgenerator'] = new \eZ\Publish\Core\FieldType\Image\PathGenerator\LegacyPathGenerator();
    }
    protected function getEzpublish_Fieldtype_Ezimage_StorageGatewayService()
    {
        return $this->services['ezpublish.fieldtype.ezimage.storage_gateway'] = new \eZ\Publish\Core\FieldType\Image\ImageStorage\Gateway\LegacyStorage($this->get('ezpublish.core.io.image_fieldtype.legacy_url_redecorator'));
    }
    protected function getEzpublish_Fieldtype_EzinisettingService()
    {
        $this->services['ezpublish.fieldtype.ezinisetting'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezinisetting');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezinisetting_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezinisetting.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EzintegerService()
    {
        $this->services['ezpublish.fieldtype.ezinteger'] = $instance = new \eZ\Publish\Core\FieldType\Integer\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezinteger_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezinteger.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Integer();
    }
    protected function getEzpublish_Fieldtype_EzisbnService()
    {
        $this->services['ezpublish.fieldtype.ezisbn'] = $instance = new \eZ\Publish\Core\FieldType\ISBN\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezisbn_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezisbn.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\ISBN();
    }
    protected function getEzpublish_Fieldtype_EzkeywordService()
    {
        $this->services['ezpublish.fieldtype.ezkeyword'] = $instance = new \eZ\Publish\Core\FieldType\Keyword\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezkeyword_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezkeyword.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Keyword();
    }
    protected function getEzpublish_Fieldtype_Ezkeyword_ExternalstorageService()
    {
        $this->services['ezpublish.fieldtype.ezkeyword.externalstorage'] = $instance = new \eZ\Publish\Core\FieldType\Keyword\KeywordStorage();
        $instance->addGateway('LegacyStorage', $this->get('ezpublish.fieldtype.ezkeyword.storage_gateway'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezkeyword_StorageGatewayService()
    {
        return $this->services['ezpublish.fieldtype.ezkeyword.storage_gateway'] = new \eZ\Publish\Core\FieldType\Keyword\KeywordStorage\Gateway\LegacyStorage();
    }
    protected function getEzpublish_Fieldtype_EzmatrixService()
    {
        $this->services['ezpublish.fieldtype.ezmatrix'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezmatrix');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezmatrix_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezmatrix.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EzmediaService()
    {
        $this->services['ezpublish.fieldtype.ezmedia'] = $instance = new \eZ\Publish\Core\FieldType\Media\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezmedia_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezmedia.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Media();
    }
    protected function getEzpublish_Fieldtype_Ezmedia_ExternalstorageService()
    {
        $this->services['ezpublish.fieldtype.ezmedia.externalstorage'] = $instance = new \eZ\Publish\Core\FieldType\Media\MediaStorage(array(), $this->get('ezpublish.fieldtype.ezbinaryfile.io_service'), $this->get('ezpublish.fieldtype.ezbinaryfile.pathgenerator'), $this->get('ezpublish.core.io.mimetypedetector.fileinfo'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->addGateway('LegacyStorage', $this->get('ezpublish.fieldtype.ezmedia.storage_gateway'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezmedia_StorageGatewayService()
    {
        return $this->services['ezpublish.fieldtype.ezmedia.storage_gateway'] = new \eZ\Publish\Core\FieldType\Media\MediaStorage\Gateway\LegacyStorage();
    }
    protected function getEzpublish_Fieldtype_EzmultioptionService()
    {
        $this->services['ezpublish.fieldtype.ezmultioption'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezmultioption');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezmultioption_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezmultioption.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_Ezmultioption2Service()
    {
        $this->services['ezpublish.fieldtype.ezmultioption2'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezmultioption2');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezmultioption2_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezmultioption2.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EzmultipriceService()
    {
        $this->services['ezpublish.fieldtype.ezmultiprice'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezmultiprice');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezmultiprice_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezmultiprice.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EzobjectrelationService()
    {
        $this->services['ezpublish.fieldtype.ezobjectrelation'] = $instance = new \eZ\Publish\Core\FieldType\Relation\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezobjectrelation_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezobjectrelation.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Relation();
    }
    protected function getEzpublish_Fieldtype_EzobjectrelationlistService()
    {
        $this->services['ezpublish.fieldtype.ezobjectrelationlist'] = $instance = new \eZ\Publish\Core\FieldType\RelationList\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezobjectrelationlist_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezobjectrelationlist.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\RelationList($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Fieldtype_EzoptionService()
    {
        $this->services['ezpublish.fieldtype.ezoption'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezoption');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezoption_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezoption.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EzpackageService()
    {
        $this->services['ezpublish.fieldtype.ezpackage'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezpackage');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezpackage_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezpackage.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EzpaexService()
    {
        $this->services['ezpublish.fieldtype.ezpaex'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezpaex');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezpaex_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezpaex.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EzpageService()
    {
        $this->services['ezpublish.fieldtype.ezpage'] = $instance = new \eZ\Publish\Core\FieldType\Page\Type($this->get('ezpublish.fieldtype.ezpage.pageservice'), $this->get('ezpublish.fieldtype.ezpage.hashconverter'));
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezpage_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezpage.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Page();
    }
    protected function getEzpublish_Fieldtype_Ezpage_HashconverterService()
    {
        return $this->services['ezpublish.fieldtype.ezpage.hashconverter'] = new \eZ\Publish\Core\FieldType\Page\HashConverter();
    }
    public function getEzpublish_Fieldtype_Ezpage_PageserviceService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.fieldtype.ezpage.pageservice'] = new eZBundleEzPublishLegacyBundleFieldTypePagePageService_000000002343b732000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Fieldtype_Ezpage_PageserviceService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return $this->get('ezpublish.fieldType.ezpage.pageService.factory')->buildService('eZ\\Bundle\\EzPublishLegacyBundle\\FieldType\\Page\\PageService', $this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish.fieldtype.ezpage.storage_gateway'), $this->get('ezpublish.api.service.content'));
    }
    protected function getEzpublish_Fieldtype_Ezpage_Pageservice_FactoryService()
    {
        return $this->services['ezpublish.fieldtype.ezpage.pageservice.factory'] = new \eZ\Publish\Core\MVC\Symfony\FieldType\Page\PageServiceFactory();
    }
    protected function getEzpublish_Fieldtype_Ezpage_ParameterproviderService()
    {
        return $this->services['ezpublish.fieldtype.ezpage.parameterprovider'] = new \eZ\Publish\Core\MVC\Symfony\FieldType\Page\ParameterProvider($this->get('ezpublish.fieldtype.ezpage.pageservice'));
    }
    protected function getEzpublish_Fieldtype_Ezpage_StorageGatewayService()
    {
        $this->services['ezpublish.fieldtype.ezpage.storage_gateway'] = $instance = new \eZ\Publish\Core\FieldType\Page\PageStorage\Gateway\LegacyStorage();
        $instance->setConnection($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_EzpriceService()
    {
        $this->services['ezpublish.fieldtype.ezprice'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezprice');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezprice_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezprice.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EzproductcategoryService()
    {
        $this->services['ezpublish.fieldtype.ezproductcategory'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezproductcategory');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezproductcategory_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezproductcategory.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EzrangeoptionService()
    {
        $this->services['ezpublish.fieldtype.ezrangeoption'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezrangeoption');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezrangeoption_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezrangeoption.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EzrecommendationService()
    {
        $this->services['ezpublish.fieldtype.ezrecommendation'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezrecommendation');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezrecommendation_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezrecommendation.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EzrichtextService()
    {
        $this->services['ezpublish.fieldtype.ezrichtext'] = $instance = new \eZ\Publish\Core\FieldType\RichText\Type($this->get('ezpublish.fieldtype.ezrichtext.converter.input.dispatcher'), $this->get('ezpublish.fieldtype.ezrichtext.validator.dispatcher'));
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\RichText();
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_Converter_Edit_Xhtml5Service()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.converter.edit.xhtml5'] = new \eZ\Bundle\EzPublishCoreBundle\FieldType\RichText\Converter\Html5Edit('/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/docbook/xhtml5/output/xhtml5.xsl', $this->get('ezpublish.config.resolver.chain'));
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_Converter_EmbedService()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.converter.embed'] = new \eZ\Publish\Core\FieldType\RichText\Converter\Render\Embed($this->get('ezpublish.fieldtype.ezrichtext.renderer'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_Converter_Input_DispatcherService()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.converter.input.dispatcher'] = new \eZ\Publish\Core\FieldType\RichText\ConverterDispatcher(array('http://docbook.org/ns/docbook' => NULL, 'http://ez.no/namespaces/ezpublish3/xhtml/' => $this->get('ezpublish.fieldtype.ezrichtext.converter.input.ezxml'), 'http://ez.no/namespaces/ezpublish5/xhtml5/edit' => $this->get('ezpublish.fieldtype.ezrichtext.converter.input.xhtml5')));
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_Converter_Input_EzxmlService()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.converter.input.ezxml'] = new \eZ\Publish\Core\FieldType\RichText\Converter\Xslt('/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/ezxml/docbook/core.xsl');
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_Converter_Input_Xhtml5Service()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.converter.input.xhtml5'] = new \eZ\Bundle\EzPublishCoreBundle\FieldType\RichText\Converter\Html5Input('/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/xhtml5/edit/docbook.xsl', $this->get('ezpublish.config.resolver.chain'));
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_Converter_LinkService()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.converter.link'] = new \eZ\Publish\Core\FieldType\RichText\Converter\Link($this->get('ezpublish.api.service.location'), $this->get('ezpublish.api.service.content'), $this->get('ezpublish.urlalias_router'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_Converter_Output_Xhtml5Service()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.converter.output.xhtml5'] = new \eZ\Publish\Core\FieldType\RichText\Converter\Aggregate(array(0 => $this->get('ezpublish.fieldtype.ezrichtext.converter.link'), 1 => $this->get('ezpublish.fieldtype.ezrichtext.converter.template'), 2 => $this->get('ezpublish.fieldtype.ezrichtext.converter.embed'), 3 => $this->get('ezpublish.fieldtype.ezrichtext.converter.output.xhtml5.core'), 4 => $this->get('ezpublish.fieldtype.ezrichtext.converter.output.xhtml5.fragment')));
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_Converter_Output_Xhtml5_CoreService()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.converter.output.xhtml5.core'] = new \eZ\Bundle\EzPublishCoreBundle\FieldType\RichText\Converter\Html5('/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/docbook/xhtml5/output/xhtml5.xsl', $this->get('ezpublish.config.resolver.chain'));
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_Converter_Output_Xhtml5_FragmentService()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.converter.output.xhtml5.fragment'] = new \eZ\Publish\Core\FieldType\RichText\Converter\Xslt('/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/xhtml5/output/fragment.xsl');
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_Converter_TemplateService()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.converter.template'] = new \eZ\Publish\Core\FieldType\RichText\Converter\Render\Template($this->get('ezpublish.fieldtype.ezrichtext.renderer'));
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_ExternalstorageService()
    {
        $this->services['ezpublish.fieldtype.ezrichtext.externalstorage'] = $instance = new \eZ\Publish\Core\FieldType\RichText\RichTextStorage();
        $instance->addGateway('LegacyStorage', $this->get('ezpublish.fieldtype.ezrichtext.storage_gateway'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_RendererService()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.renderer'] = new \eZ\Publish\Core\MVC\Symfony\FieldType\RichText\Renderer($this->get('ezpublish.signalslot.repository'), $this->get('security.context'), $this->get('ezpublish.config.resolver.chain'), $this->get('templating'), 'fieldtypes.ezrichtext.tags', 'fieldtypes.ezrichtext.embed', $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_StorageGatewayService()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.storage_gateway'] = new \eZ\Publish\Core\FieldType\RichText\RichTextStorage\Gateway\LegacyStorage($this->get('ezpublish.fieldtype.ezurl.storage_gateway'));
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_Validator_DispatcherService()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.validator.dispatcher'] = new \eZ\Publish\Core\FieldType\RichText\ValidatorDispatcher(array('http://docbook.org/ns/docbook' => $this->get('ezpublish.fieldtype.ezrichtext.validator.docbook'), 'http://ez.no/namespaces/ezpublish5/xhtml5/edit' => $this->get('ezpublish.fieldtype.ezrichtext.validator.input.ezxhtml5'), 'http://ez.no/namespaces/ezpublish5/xhtml5' => $this->get('ezpublish.fieldtype.ezrichtext.validator.output.ezxhtml5')));
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_Validator_DocbookService()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.validator.docbook'] = new \eZ\Publish\Core\FieldType\RichText\Validator(array(0 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/schemas/docbook/ezpublish.rng', 1 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/schemas/docbook/docbook.iso.sch.xsl'));
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_Validator_Input_Ezxhtml5Service()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.validator.input.ezxhtml5'] = new \eZ\Publish\Core\FieldType\RichText\Validator(array(0 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/schemas/ezxhtml5/edit/ezxhtml5.xsd'));
    }
    protected function getEzpublish_Fieldtype_Ezrichtext_Validator_Output_Ezxhtml5Service()
    {
        return $this->services['ezpublish.fieldtype.ezrichtext.validator.output.ezxhtml5'] = new \eZ\Publish\Core\FieldType\RichText\Validator(array(0 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/schemas/ezxhtml5/output/ezxhtml5.xsd'));
    }
    protected function getEzpublish_Fieldtype_EzselectionService()
    {
        $this->services['ezpublish.fieldtype.ezselection'] = $instance = new \eZ\Publish\Core\FieldType\Selection\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezselection_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezselection.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Selection();
    }
    protected function getEzpublish_Fieldtype_EzsrratingService()
    {
        $this->services['ezpublish.fieldtype.ezsrrating'] = $instance = new \eZ\Publish\Core\FieldType\Rating\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezsrrating_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezsrrating.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Rating();
    }
    protected function getEzpublish_Fieldtype_EzstringService()
    {
        $this->services['ezpublish.fieldtype.ezstring'] = $instance = new \eZ\Publish\Core\FieldType\TextLine\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezstring_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezstring.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\TextLine();
    }
    protected function getEzpublish_Fieldtype_EzsubtreesubscriptionService()
    {
        $this->services['ezpublish.fieldtype.ezsubtreesubscription'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezsubtreesubscription');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezsubtreesubscription_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezsubtreesubscription.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EzsurveyService()
    {
        $this->services['ezpublish.fieldtype.ezsurvey'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('ezsurvey');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezsurvey_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezsurvey.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EztagsService()
    {
        $this->services['ezpublish.fieldtype.eztags'] = $instance = new \eZ\Publish\Core\FieldType\Null\Type('eztags');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Eztags_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.eztags.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_EztextService()
    {
        $this->services['ezpublish.fieldtype.eztext'] = $instance = new \eZ\Publish\Core\FieldType\TextBlock\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Eztext_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.eztext.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\TextBlock();
    }
    protected function getEzpublish_Fieldtype_EztimeService()
    {
        $this->services['ezpublish.fieldtype.eztime'] = $instance = new \eZ\Publish\Core\FieldType\Time\Type('eztime');
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Eztime_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.eztime.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Time();
    }
    protected function getEzpublish_Fieldtype_EzurlService()
    {
        $this->services['ezpublish.fieldtype.ezurl'] = $instance = new \eZ\Publish\Core\FieldType\Url\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezurl_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezurl.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Url();
    }
    protected function getEzpublish_Fieldtype_Ezurl_ExternalstorageService()
    {
        $this->services['ezpublish.fieldtype.ezurl.externalstorage'] = $instance = new \eZ\Publish\Core\FieldType\Url\UrlStorage(array(), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->addGateway('LegacyStorage', $this->get('ezpublish.fieldtype.ezurl.storage_gateway'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezurl_StorageGatewayService()
    {
        return $this->services['ezpublish.fieldtype.ezurl.storage_gateway'] = new \eZ\Publish\Core\FieldType\Url\UrlStorage\Gateway\LegacyStorage();
    }
    protected function getEzpublish_Fieldtype_EzuserService()
    {
        $this->services['ezpublish.fieldtype.ezuser'] = $instance = new \eZ\Publish\Core\FieldType\User\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezuser_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezuser.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\Null();
    }
    protected function getEzpublish_Fieldtype_Ezuser_ExternalstorageService()
    {
        $this->services['ezpublish.fieldtype.ezuser.externalstorage'] = $instance = new \eZ\Publish\Core\FieldType\User\UserStorage();
        $instance->addGateway('LegacyStorage', $this->get('ezpublish.fieldtype.ezuser.storage_gateway'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezuser_StorageGatewayService()
    {
        return $this->services['ezpublish.fieldtype.ezuser.storage_gateway'] = new \eZ\Publish\Core\FieldType\User\UserStorage\Gateway\LegacyStorage();
    }
    protected function getEzpublish_Fieldtype_EzxmltextService()
    {
        $this->services['ezpublish.fieldtype.ezxmltext'] = $instance = new \eZ\Publish\Core\FieldType\XmlText\Type();
        $instance->setTransformationProcessor($this->get('ezpublish.api.storage_engine.transformation_processor'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezxmltext_ConverterService()
    {
        return $this->services['ezpublish.fieldtype.ezxmltext.converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\Converter\XmlText();
    }
    protected function getEzpublish_Fieldtype_Ezxmltext_Converter_CustomtagsService()
    {
        return $this->services['ezpublish.fieldtype.ezxmltext.converter.customtags'] = new \eZ\Publish\Core\FieldType\XmlText\Converter\CustomTags();
    }
    protected function getEzpublish_Fieldtype_Ezxmltext_Converter_Embedtohtml5Service()
    {
        return $this->services['ezpublish.fieldtype.ezxmltext.converter.embedtohtml5'] = new \eZ\Publish\Core\FieldType\XmlText\Converter\EmbedToHtml5($this->get('fragment.handler'), $this->get('ezpublish.signalslot.repository'), array(0 => 'view', 1 => 'node_id', 2 => 'object_id'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublish_Fieldtype_Ezxmltext_Converter_Ezlinktohtml5Service()
    {
        return $this->services['ezpublish.fieldtype.ezxmltext.converter.ezlinktohtml5'] = new \eZ\Publish\Core\FieldType\XmlText\Converter\EzLinkToHtml5($this->get('ezpublish.api.service.location'), $this->get('ezpublish.api.service.content'), $this->get('ezpublish.urlalias_router'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublish_Fieldtype_Ezxmltext_Converter_Html5Service()
    {
        $this->services['ezpublish.fieldtype.ezxmltext.converter.html5'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\FieldType\XmlText\Converter\Html5('/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/XmlText/Input/Resources/stylesheets/eZXml2Html5.xsl', $this->get('ezpublish.config.resolver.chain'));
        $instance->addPreConverter($this->get('ezpublish.fieldtype.ezxmltext.converter.embedtohtml5'));
        $instance->addPreConverter($this->get('ezpublish.fieldtype.ezxmltext.converter.ezlinktohtml5'));
        $instance->addPreConverter($this->get('ezpublish.fieldtype.ezxmltext.converter.customtags'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezxmltext_ExternalstorageService()
    {
        $this->services['ezpublish.fieldtype.ezxmltext.externalstorage'] = $instance = new \eZ\Publish\Core\FieldType\XmlText\XmlTextStorage();
        $instance->addGateway('LegacyStorage', $this->get('ezpublish.fieldtype.ezxmltext.storage_gateway'));
        return $instance;
    }
    protected function getEzpublish_Fieldtype_Ezxmltext_StorageGatewayService()
    {
        return $this->services['ezpublish.fieldtype.ezxmltext.storage_gateway'] = new \eZ\Publish\Core\FieldType\XmlText\XmlTextStorage\Gateway\LegacyStorage($this->get('ezpublish.fieldtype.ezurl.storage_gateway'));
    }
    protected function getEzpublish_Fieldtype_Metadatahandler_ImagesizeService()
    {
        return $this->services['ezpublish.fieldtype.metadatahandler.imagesize'] = new \eZ\Publish\Core\IO\MetadataHandler\ImageSize();
    }
    protected function getEzpublish_Fieldtype_ParameterproviderregistryService()
    {
        $a = $this->get('ezpublish.fieldtype.ezdatetime.parameterprovider');
        $this->services['ezpublish.fieldtype.parameterproviderregistry'] = $instance = new \eZ\Publish\Core\MVC\Symfony\FieldType\View\ParameterProviderRegistry();
        $instance->setParameterProvider($a, 'ezdatetime');
        $instance->setParameterProvider($a, 'ezdate');
        $instance->setParameterProvider($a, 'eztime');
        $instance->setParameterProvider($this->get('ezpublish.fieldtype.ezpage.parameterprovider'), 'ezpage');
        return $instance;
    }
    protected function getEzpublish_FragmentListener_FactoryService()
    {
        $this->services['ezpublish.fragment_listener.factory'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\Fragment\FragmentListenerFactory('/_fragment');
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getEzpublish_HttpCache_CacheManagerService()
    {
        $this->services['ezpublish.http_cache.cache_manager'] = $instance = new \FOS\HttpCacheBundle\CacheManager($this->get('fos_http_cache.proxy_client.varnish'), $this->get('ezpublish.chain_router'));
        if ($this->has('event_dispatcher')) {
            $instance->setEventDispatcher($this->get('event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setTagsHeader('X-Cache-Tags');
        $instance->addSubscriber(new \FOS\HttpCache\EventListener\LogSubscriber($this->get('logger')));
        return $instance;
    }
    protected function getEzpublish_HttpCache_ProxyClient_Varnish_FactoryService()
    {
        return $this->services['ezpublish.http_cache.proxy_client.varnish.factory'] = new \eZ\Bundle\EzPublishCoreBundle\Cache\Http\VarnishProxyClientFactory($this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish.config.dynamic_setting.parser'), 'FOS\\HttpCache\\ProxyClient\\Varnish');
    }
    protected function getEzpublish_HttpCache_PurgeClient_FosService()
    {
        return $this->services['ezpublish.http_cache.purge_client.fos'] = new \eZ\Publish\Core\MVC\Symfony\Cache\Http\FOSPurgeClient($this->get('ezpublish.http_cache.cache_manager'));
    }
    protected function getEzpublish_HttpCache_PurgeClient_LocalService()
    {
        return $this->services['ezpublish.http_cache.purge_client.local'] = new \eZ\Publish\Core\MVC\Symfony\Cache\Http\LocalPurgeClient($this->get('ezpublish.http_cache.store'));
    }
    protected function getEzpublish_HttpCache_Purger_InstantService()
    {
        return $this->services['ezpublish.http_cache.purger.instant'] = new \eZ\Bundle\EzPublishCoreBundle\Cache\Http\InstantCachePurger($this->get('ezpublish.http_cache.purge_client.local'));
    }
    protected function getEzpublish_HttpCache_StoreService()
    {
        return $this->services['ezpublish.http_cache.store'] = new \eZ\Publish\Core\MVC\Symfony\Cache\Http\LocationAwareStore('/var/www/ayaville/ezpublish/cache/prod/http_cache');
    }
    public function getEzpublish_ImageAlias_Imagine_AliasCleanerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.image_alias.imagine.alias_cleaner'] = new eZBundleEzPublishCoreBundleImagineAliasCleaner_000000002343b528000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_ImageAlias_Imagine_AliasCleanerService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Bundle\EzPublishCoreBundle\Imagine\AliasCleaner($this->get('ezpublish.image_alias.imagine.cache_resolver'));
    }
    protected function getEzpublish_ImageAlias_Imagine_AliasGeneratorService()
    {
        return $this->services['ezpublish.image_alias.imagine.alias_generator'] = new \eZ\Bundle\EzPublishCoreBundle\Imagine\AliasGenerator($this->get('ezpublish.image_alias.imagine.binary_loader'), $this->get('liip_imagine.filter.manager'), $this->get('ezpublish.image_alias.imagine.cache_resolver'), $this->get('liip_imagine.filter.configuration'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublish_ImageAlias_Imagine_BinaryLoaderService()
    {
        return $this->services['ezpublish.image_alias.imagine.binary_loader'] = new \eZ\Bundle\EzPublishCoreBundle\Imagine\BinaryLoader($this->get('ezpublish.fieldtype.ezimage.io_service'), $this->get('liip_imagine.extension_guesser'));
    }
    protected function getEzpublish_ImageAlias_Imagine_CacheResolverService()
    {
        return $this->services['ezpublish.image_alias.imagine.cache_resolver'] = new \eZ\Bundle\EzPublishCoreBundle\Imagine\IORepositoryResolver($this->get('ezpublish.fieldtype.ezimage.io_service'), $this->get('router.request_context'), $this->get('liip_imagine.filter.configuration'));
    }
    protected function getEzpublish_ImageAlias_Imagine_Filter_ReduceNoiseService()
    {
        return $this->services['ezpublish.image_alias.imagine.filter.reduce_noise'] = new \eZ\Bundle\EzPublishCoreBundle\Imagine\Filter\UnsupportedFilter();
    }
    protected function getEzpublish_Locale_ConverterService()
    {
        return $this->services['ezpublish.locale.converter'] = new \eZ\Publish\Core\MVC\Symfony\Locale\LocaleConverter(array('ara-SA' => 'ar_SA', 'cat-ES' => 'ca_ES', 'chi-CN' => 'zh_CN', 'chi-HK' => 'zh_HK', 'chi-TW' => 'zh_TW', 'cro-HR' => 'hr_HR', 'cze-CZ' => 'cs_CZ', 'dan-DK' => 'da_DK', 'dut-NL' => 'nl_NL', 'ell-GR' => 'el_GR', 'eng-AU' => 'en_AU', 'eng-CA' => 'en_CA', 'eng-GB' => 'en_GB', 'eng-NZ' => 'en_NZ', 'eng-US' => 'en_US', 'epo-EO' => 'eo', 'esl-ES' => 'es_ES', 'esl-MX' => 'es_MX', 'fin-FI' => 'fi_FI', 'fre-BE' => 'fr_BE', 'fre-CA' => 'fr_CA', 'fre-FR' => 'fr_FR', 'ger-DE' => 'de_DE', 'heb-IL' => 'he_IL', 'hin-IN' => 'hi_IN', 'hun-HU' => 'hu_HU', 'ind-ID' => 'id_ID', 'ita-IT' => 'it_IT', 'jpn-JP' => 'ja_JP', 'kor-KR' => 'ko_KR', 'nno-NO' => 'nn_NO', 'nor-NO' => 'no_NO', 'pol-PL' => 'pl_PL', 'por-BR' => 'pt_BR', 'por-MZ' => 'pt_MZ', 'por-PT' => 'pt_PT', 'rus-RU' => 'ru_RI', 'ser-SR' => 'sr_RS', 'slk-SK' => 'sk_SK', 'srp-RS' => 'sr_RS', 'swe-SE' => 'sv_SE', 'tur-TR' => 'tr_TR', 'ukr-UA' => 'uk_UA'), $this->get('logger'));
    }
    protected function getEzpublish_LocationView_MatcherFactoryService()
    {
        $this->services['ezpublish.location_view.matcher_factory'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\Matcher\LocationMatcherFactory($this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish.signalslot.repository'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEzpublish_LocationViewProvider_ConfiguredService()
    {
        return $this->services['ezpublish.location_view_provider.configured'] = new \eZ\Bundle\EzPublishCoreBundle\View\Provider\LocationConfigured($this->get('ezpublish.location_view.matcher_factory'));
    }
    protected function getEzpublish_OriginalRequestListenerService()
    {
        return $this->services['ezpublish.original_request_listener'] = new \eZ\Bundle\EzPublishCoreBundle\EventListener\OriginalRequestListener();
    }
    protected function getEzpublish_PageControllerListenerService()
    {
        return $this->services['ezpublish.page_controller_listener'] = new \eZ\Bundle\EzPublishCoreBundle\EventListener\PageControllerListener($this->get('controller_resolver'), $this->get('ezpublish.controller_manager'), $this->get('ezpublish.fieldtype.ezpage.pageservice'), $this->get('logger'));
    }
    protected function getEzpublish_Persistence_ConnectionService($lazyLoad = true)
    {
        return $this->services['ezpublish.persistence.connection'] = $this->get('ezpublish.persistence.connection.factory')->getConnection();
    }
    protected function getEzpublish_Persistence_Connection_FactoryService()
    {
        $this->services['ezpublish.persistence.connection.factory'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\ApiLoader\StorageConnectionFactory($this->get('ezpublish.api.storage_repository_provider'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEzpublish_Persistence_ExternalStorageRegistryService()
    {
        return $this->services['ezpublish.persistence.external_storage_registry'] = $this->get('ezpublish.persistence.external_storage_registry.factory')->buildExternalStorageRegistry('eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\StorageRegistry');
    }
    protected function getEzpublish_Persistence_ExternalStorageRegistry_FactoryService()
    {
        $this->services['ezpublish.persistence.external_storage_registry.factory'] = $instance = new \eZ\Publish\Core\Base\Container\ApiLoader\Storage\ExternalStorageRegistryFactory();
        $instance->setContainer($this);
        $instance->registerExternalStorageHandler('ezpublish.fieldtype.ezbinaryfile.externalstorage', 'ezbinaryfile');
        $instance->registerExternalStorageHandler('ezpublish.fieldtype.ezimage.externalstorage', 'ezimage');
        $instance->registerExternalStorageHandler('ezpublish.fieldtype.ezkeyword.externalstorage', 'ezkeyword');
        $instance->registerExternalStorageHandler('ezpublish.fieldtype.ezmedia.externalstorage', 'ezmedia');
        $instance->registerExternalStorageHandler('ezpublish.fieldtype.ezurl.externalstorage', 'ezurl');
        $instance->registerExternalStorageHandler('ezpublish.fieldtype.ezrichtext.externalstorage', 'ezrichtext');
        $instance->registerExternalStorageHandler('ezpublish.fieldtype.ezxmltext.externalstorage', 'ezxmltext');
        $instance->registerExternalStorageHandler('ezpublish.fieldtype.ezgmaplocation.externalstorage', 'ezgmaplocation');
        $instance->registerExternalStorageHandler('ezpublish.fieldtype.ezuser.externalstorage', 'ezuser');
        return $instance;
    }
    protected function getEzpublish_Persistence_FieldTypeRegistryService()
    {
        return $this->services['ezpublish.persistence.field_type_registry'] = $this->get('ezpublish.persistence.field_type_registry.factory')->buildFieldTypeRegistry('eZ\\Publish\\Core\\Persistence\\FieldTypeRegistry', $this->get('ezpublish.field_type_collection.factory'));
    }
    protected function getEzpublish_Persistence_FieldTypeRegistry_FactoryService()
    {
        return $this->services['ezpublish.persistence.field_type_registry.factory'] = new \eZ\Publish\Core\Base\Container\ApiLoader\Storage\FieldTypeRegistryFactory();
    }
    protected function getEzpublish_Persistence_Legacy_Content_Gateway_ExceptionConversionService()
    {
        return $this->services['ezpublish.persistence.legacy.content.gateway.exception_conversion'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Gateway\ExceptionConversion($this->get('ezpublish.persistence.legacy.content.gateway.inner'));
    }
    protected function getEzpublish_Persistence_Legacy_Content_Gateway_InnerService()
    {
        return $this->services['ezpublish.persistence.legacy.content.gateway.inner'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Gateway\DoctrineDatabase($this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish.persistence.legacy.content.query_builder'), $this->get('ezpublish.spi.persistence.legacy.language.handler.caching'), $this->get('ezpublish.persistence.legacy.language.mask_generator'));
    }
    protected function getEzpublish_Persistence_Legacy_Content_MapperService()
    {
        return $this->services['ezpublish.persistence.legacy.content.mapper'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Mapper($this->get('ezpublish.persistence.legacy.field_value_converter.registry'), $this->get('ezpublish.spi.persistence.legacy.language.handler.caching'));
    }
    protected function getEzpublish_Persistence_Legacy_Content_QueryBuilderService()
    {
        return $this->services['ezpublish.persistence.legacy.content.query_builder'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Gateway\DoctrineDatabase\QueryBuilder($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_ContentType_ContentUpdaterService()
    {
        return $this->services['ezpublish.persistence.legacy.content_type.content_updater'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Type\ContentUpdater($this->get('ezpublish.spi.persistence.legacy.search.handler.content'), $this->get('ezpublish.persistence.legacy.content.gateway.exception_conversion'), $this->get('ezpublish.persistence.legacy.field_value_converter.registry'), $this->get('ezpublish.persistence.legacy.external_storage_handler'), $this->get('ezpublish.persistence.legacy.content.mapper'));
    }
    protected function getEzpublish_Persistence_Legacy_ContentType_Gateway_ExceptionConversionService()
    {
        return $this->services['ezpublish.persistence.legacy.content_type.gateway.exception_conversion'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Type\Gateway\ExceptionConversion($this->get('ezpublish.persistence.legacy.content_type.gateway.inner'));
    }
    protected function getEzpublish_Persistence_Legacy_ContentType_Gateway_InnerService()
    {
        return $this->services['ezpublish.persistence.legacy.content_type.gateway.inner'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Type\Gateway\DoctrineDatabase($this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish.persistence.legacy.language.mask_generator'));
    }
    protected function getEzpublish_Persistence_Legacy_ContentType_MapperService()
    {
        return $this->services['ezpublish.persistence.legacy.content_type.mapper'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Type\Mapper($this->get('ezpublish.persistence.legacy.field_value_converter.registry'));
    }
    protected function getEzpublish_Persistence_Legacy_ContentType_UpdateHandler_BasicService()
    {
        return $this->services['ezpublish.persistence.legacy.content_type.update_handler.basic'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Type\Update\Handler\DoctrineDatabase($this->get('ezpublish.persistence.legacy.content_type.gateway.exception_conversion'), $this->get('ezpublish.persistence.legacy.content_type.content_updater'));
    }
    protected function getEzpublish_Persistence_Legacy_ExternalStorageHandlerService()
    {
        return $this->services['ezpublish.persistence.legacy.external_storage_handler'] = new \eZ\Publish\Core\Persistence\Legacy\Content\StorageHandler($this->get('ezpublish.persistence.external_storage_registry'), array('identifier' => 'LegacyStorage', 'connection' => $this->get('ezpublish.api.storage_engine.legacy.dbhandler')));
    }
    public function getEzpublish_Persistence_Legacy_FieldHandlerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.persistence.legacy.field_handler'] = new eZPublishCorePersistenceLegacyContentFieldHandler_000000002343b774000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Persistence_Legacy_FieldHandlerService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Publish\Core\Persistence\Legacy\Content\FieldHandler($this->get('ezpublish.persistence.legacy.content.gateway.exception_conversion'), $this->get('ezpublish.persistence.legacy.content.mapper'), $this->get('ezpublish.persistence.legacy.external_storage_handler'), $this->get('ezpublish.spi.persistence.legacy.language.handler.caching'), $this->get('ezpublish.persistence.field_type_registry'));
    }
    protected function getEzpublish_Persistence_Legacy_FieldValueConverter_RegistryService()
    {
        $this->services['ezpublish.persistence.legacy.field_value_converter.registry'] = $instance = new \eZ\Publish\Core\Persistence\Legacy\Content\FieldValue\ConverterRegistry();
        $instance->register('ezauthor', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Author::create');
        $instance->register('ezbinaryfile', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\BinaryFile::create');
        $instance->register('ezboolean', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Checkbox::create');
        $instance->register('ezcountry', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Country::create');
        $instance->register('ezdatetime', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\DateAndTime::create');
        $instance->register('ezfloat', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Float::create');
        $instance->register('ezinteger', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Integer::create');
        $instance->register('ezkeyword', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Keyword::create');
        $instance->register('ezmedia', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Media::create');
        $instance->register('ezselection', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Selection::create');
        $instance->register('ezstring', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\TextLine::create');
        $instance->register('eztext', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\TextBlock::create');
        $instance->register('ezrichtext', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\RichText::create');
        $instance->register('ezxmltext', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\XmlText::create');
        $instance->register('ezsrrating', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Rating::create');
        $instance->register('ezurl', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Url::create');
        $instance->register('ezpage', $this->get('ezpublish.fieldtype.ezpage.converter'));
        $instance->register('ezimage', $this->get('ezpublish.fieldtype.ezimage.converter'));
        $instance->register('ezisbn', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\ISBN::create');
        $instance->register('ezgmaplocation', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\MapLocation::create');
        $instance->register('ezemail', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\EmailAddress::create');
        $instance->register('ezobjectrelation', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Relation::create');
        $instance->register('ezobjectrelationlist', $this->get('ezpublish.fieldtype.ezobjectrelationlist.converter'));
        $instance->register('ezuser', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('ezdate', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Date::create');
        $instance->register('ezenum', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('ezidentifier', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('ezinisetting', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('ezmatrix', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('ezmultioption', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('ezmultioption2', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('ezmultiprice', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('ezoption', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('ezpackage', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('ezprice', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('ezproductcategory', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('ezrangeoption', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('ezsubtreesubscription', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('eztime', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Time::create');
        $instance->register('ezcomcomments', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('ezpaex', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('ezsurvey', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('eztags', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        $instance->register('ezrecommendation', 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null::create');
        return $instance;
    }
    protected function getEzpublish_Persistence_Legacy_Language_CacheService()
    {
        return $this->services['ezpublish.persistence.legacy.language.cache'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Language\Cache();
    }
    protected function getEzpublish_Persistence_Legacy_Language_Gateway_ExceptionConversionService()
    {
        return $this->services['ezpublish.persistence.legacy.language.gateway.exception_conversion'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Language\Gateway\ExceptionConversion($this->get('ezpublish.persistence.legacy.language.gateway.inner'));
    }
    protected function getEzpublish_Persistence_Legacy_Language_Gateway_InnerService()
    {
        return $this->services['ezpublish.persistence.legacy.language.gateway.inner'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Language\Gateway\DoctrineDatabase($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Language_MapperService()
    {
        return $this->services['ezpublish.persistence.legacy.language.mapper'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Language\Mapper();
    }
    protected function getEzpublish_Persistence_Legacy_Language_MaskGeneratorService()
    {
        return $this->services['ezpublish.persistence.legacy.language.mask_generator'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Language\MaskGenerator($this->get('ezpublish.spi.persistence.legacy.language.handler.caching'));
    }
    protected function getEzpublish_Persistence_Legacy_Location_Gateway_ExceptionConversionService()
    {
        return $this->services['ezpublish.persistence.legacy.location.gateway.exception_conversion'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Location\Gateway\ExceptionConversion($this->get('ezpublish.persistence.legacy.location.gateway.inner'));
    }
    protected function getEzpublish_Persistence_Legacy_Location_Gateway_InnerService()
    {
        return $this->services['ezpublish.persistence.legacy.location.gateway.inner'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Location\Gateway\DoctrineDatabase($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Location_MapperService()
    {
        return $this->services['ezpublish.persistence.legacy.location.mapper'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Location\Mapper();
    }
    protected function getEzpublish_Persistence_Legacy_ObjectState_Gateway_ExceptionConversionService()
    {
        return $this->services['ezpublish.persistence.legacy.object_state.gateway.exception_conversion'] = new \eZ\Publish\Core\Persistence\Legacy\Content\ObjectState\Gateway\ExceptionConversion($this->get('ezpublish.persistence.legacy.object_state.gateway.inner'));
    }
    protected function getEzpublish_Persistence_Legacy_ObjectState_Gateway_InnerService()
    {
        return $this->services['ezpublish.persistence.legacy.object_state.gateway.inner'] = new \eZ\Publish\Core\Persistence\Legacy\Content\ObjectState\Gateway\DoctrineDatabase($this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish.persistence.legacy.language.mask_generator'));
    }
    protected function getEzpublish_Persistence_Legacy_ObjectState_MapperService()
    {
        return $this->services['ezpublish.persistence.legacy.object_state.mapper'] = new \eZ\Publish\Core\Persistence\Legacy\Content\ObjectState\Mapper($this->get('ezpublish.spi.persistence.legacy.language.handler.caching'));
    }
    protected function getEzpublish_Persistence_Legacy_Role_Gateway_ExceptionConversionService()
    {
        return $this->services['ezpublish.persistence.legacy.role.gateway.exception_conversion'] = new \eZ\Publish\Core\Persistence\Legacy\User\Role\Gateway\ExceptionConversion($this->get('ezpublish.persistence.legacy.role.gateway.inner'));
    }
    protected function getEzpublish_Persistence_Legacy_Role_Gateway_InnerService()
    {
        return $this->services['ezpublish.persistence.legacy.role.gateway.inner'] = new \eZ\Publish\Core\Persistence\Legacy\User\Role\Gateway\DoctrineDatabase($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Role_Limitation_ConverterService()
    {
        $this->services['ezpublish.persistence.legacy.role.limitation.converter'] = $instance = new \eZ\Publish\Core\Persistence\Legacy\User\Role\LimitationConverter();
        $instance->addHandler($this->get('ezpublish.persistence.legacy.role.limitation.handler.object_state'));
        return $instance;
    }
    protected function getEzpublish_Persistence_Legacy_Role_Limitation_Handler_ObjectStateService()
    {
        return $this->services['ezpublish.persistence.legacy.role.limitation.handler.object_state'] = new \eZ\Publish\Core\Persistence\Legacy\User\Role\LimitationHandler\ObjectStateHandler($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_Content_ExceptionConversionService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.content.exception_conversion'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Gateway\ExceptionConversion($this->get('ezpublish.persistence.legacy.search.gateway.content.inner'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_Content_InnerService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.content.inner'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Gateway\DoctrineDatabase($this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish.persistence.legacy.search.gateway.criteria_converter.content'), $this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_converter.content'), $this->get('ezpublish.persistence.legacy.content.query_builder'), $this->get('ezpublish.spi.persistence.legacy.language.handler.caching'), $this->get('ezpublish.persistence.legacy.language.mask_generator'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriteriaConverter_ContentService()
    {
        $this->services['ezpublish.persistence.legacy.search.gateway.criteria_converter.content'] = $instance = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriteriaConverter();
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_type_group_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_type_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_type_identifier'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.date_metadata'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.field'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.full_text'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.language_code'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.logical_and'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.logical_not'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.logical_or'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.map_location_distance'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.match_all'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.match_none'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.object_state_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.field_relation'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.remote_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.section_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.user_metadata'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.content.depth'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.content.location_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.content.location_priority'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.content.location_remote_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.content.parent_location_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.content.subtree'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.content.permission_subtree'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.content.visibility'));
        return $instance;
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriteriaConverter_LocationService()
    {
        $this->services['ezpublish.persistence.legacy.search.gateway.criteria_converter.location'] = $instance = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriteriaConverter();
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_type_group_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_type_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_type_identifier'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.date_metadata'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.field'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.full_text'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.language_code'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.logical_and'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.logical_not'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.logical_or'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.map_location_distance'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.match_all'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.match_none'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.object_state_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.field_relation'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.remote_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.section_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.common.user_metadata'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.location.depth'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.location.location_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.location.is_main_location'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.location.parent_location_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.location.priority'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.location.location_remote_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.location.subtree'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.criterion_handler.location.visibility'));
        return $instance;
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionFieldValueConverterService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_field_value_converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\FieldValue\Converter($this->get('ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.registry'), $this->get('ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.composite'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionFieldValueHandler_Collection_CommaSeparatedService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.collection.comma_separated'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\FieldValue\Handler\Collection($this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish.api.storage_engine.transformation_processor'), ',');
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionFieldValueHandler_Collection_HypenSeparatedService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.collection.hypen_separated'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\FieldValue\Handler\Collection($this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish.api.storage_engine.transformation_processor'), '-');
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionFieldValueHandler_CompositeService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.composite'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\FieldValue\Handler\Composite($this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish.api.storage_engine.transformation_processor'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionFieldValueHandler_RegistryService()
    {
        $a = $this->get('ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.collection.comma_separated');
        $b = $this->get('ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.simple');
        $this->services['ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.registry'] = $instance = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\FieldValue\HandlerRegistry();
        $instance->register('ezcountry', $a);
        $instance->register('ezobjectrelationlist', $a);
        $instance->register('ezselection', $this->get('ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.collection.hypen_separated'));
        $instance->register('ezboolean', $b);
        $instance->register('ezdate', $b);
        $instance->register('ezdatetime', $b);
        $instance->register('ezemail', $b);
        $instance->register('ezinteger', $b);
        $instance->register('ezobjectrelation', $b);
        $instance->register('eztime', $b);
        return $instance;
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionFieldValueHandler_SimpleService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.simple'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\FieldValue\Handler\Simple($this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish.api.storage_engine.transformation_processor'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_ContentIdService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_id'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\ContentId($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_ContentTypeGroupIdService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_type_group_id'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\ContentTypeGroupId($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_ContentTypeIdService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_type_id'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\ContentTypeId($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_ContentTypeIdentifierService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_type_identifier'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\ContentTypeIdentifier($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_DateMetadataService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.date_metadata'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\DateMetadata($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_FieldService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.field'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\Field($this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish.persistence.legacy.field_value_converter.registry'), $this->get('ezpublish.persistence.legacy.search.gateway.criterion_field_value_converter'), $this->get('ezpublish.api.storage_engine.transformation_processor'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_FieldRelationService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.field_relation'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\FieldRelation($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_FullTextService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.full_text'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\FullText($this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish.api.storage_engine.transformation_processor'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_LanguageCodeService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.language_code'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\LanguageCode($this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish.persistence.legacy.language.mask_generator'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_LogicalAndService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.logical_and'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\LogicalAnd($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_LogicalNotService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.logical_not'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\LogicalNot($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_LogicalOrService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.logical_or'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\LogicalOr($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_MapLocationDistanceService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.map_location_distance'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\MapLocationDistance($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_MatchAllService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.match_all'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\MatchAll($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_MatchNoneService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.match_none'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\MatchNone($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_ObjectStateIdService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.object_state_id'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\ObjectStateId($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_RemoteIdService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.remote_id'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\RemoteId($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_SectionIdService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.section_id'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\SectionId($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Common_UserMetadataService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.common.user_metadata'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\CriterionHandler\UserMetadata($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Content_DepthService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.content.depth'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Gateway\CriterionHandler\Depth($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Content_LocationIdService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.content.location_id'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Gateway\CriterionHandler\LocationId($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Content_LocationPriorityService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.content.location_priority'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Gateway\CriterionHandler\LocationPriority($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Content_LocationRemoteIdService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.content.location_remote_id'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Gateway\CriterionHandler\LocationRemoteId($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Content_ParentLocationIdService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.content.parent_location_id'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Gateway\CriterionHandler\ParentLocationId($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Content_PermissionSubtreeService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.content.permission_subtree'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Gateway\CriterionHandler\PermissionSubtree($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Content_SubtreeService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.content.subtree'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Gateway\CriterionHandler\Subtree($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Content_VisibilityService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.content.visibility'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Gateway\CriterionHandler\Visibility($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Location_DepthService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.location.depth'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gateway\CriterionHandler\Location\Depth($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Location_IsMainLocationService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.location.is_main_location'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gateway\CriterionHandler\Location\IsMainLocation($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Location_LocationIdService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.location.location_id'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gateway\CriterionHandler\LocationId($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Location_LocationRemoteIdService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.location.location_remote_id'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gateway\CriterionHandler\LocationRemoteId($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Location_ParentLocationIdService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.location.parent_location_id'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gateway\CriterionHandler\ParentLocationId($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Location_PriorityService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.location.priority'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gateway\CriterionHandler\Location\Priority($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Location_SubtreeService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.location.subtree'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gateway\CriterionHandler\Subtree($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_CriterionHandler_Location_VisibilityService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.criterion_handler.location.visibility'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gateway\CriterionHandler\Visibility($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_Location_ExceptionConversionService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.location.exception_conversion'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gateway\ExceptionConversion($this->get('ezpublish.persistence.legacy.search.gateway.location.inner'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_Location_InnerService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.location.inner'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gateway\DoctrineDatabase($this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish.persistence.legacy.search.gateway.criteria_converter.location'), $this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_converter.location'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseConverter_ContentService()
    {
        $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_converter.content'] = $instance = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\SortClauseConverter();
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.content_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.content_name'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.date_modified'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.date_published'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.field'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.map_location_distance'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.section_identifier'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.section_name'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.content.location_depth'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.content.location_path_string'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.content.location_priority'));
        return $instance;
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseConverter_LocationService()
    {
        $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_converter.location'] = $instance = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\SortClauseConverter();
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.content_id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.content_name'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.date_modified'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.date_published'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.field'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.map_location_distance'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.section_identifier'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.section_name'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.id'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.depth'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.path'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.is_main_location'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.priority'));
        $instance->addHandler($this->get('ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.visibility'));
        return $instance;
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Common_ContentIdService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.content_id'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\SortClauseHandler\ContentId($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Common_ContentNameService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.content_name'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\SortClauseHandler\ContentName($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Common_DateModifiedService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.date_modified'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\SortClauseHandler\DateModified($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Common_DatePublishedService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.date_published'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\SortClauseHandler\DatePublished($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Common_FieldService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.field'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\SortClauseHandler\Field($this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish.spi.persistence.legacy.language.handler.caching'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Common_MapLocationDistanceService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.map_location_distance'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\SortClauseHandler\MapLocationDistance($this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish.spi.persistence.legacy.language.handler.caching'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Common_SectionIdentifierService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.section_identifier'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\SortClauseHandler\SectionIdentifier($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Common_SectionNameService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.section_name'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Common\Gateway\SortClauseHandler\SectionName($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Content_LocationDepthService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.content.location_depth'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Gateway\SortClauseHandler\LocationDepth($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Content_LocationPathStringService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.content.location_path_string'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Gateway\SortClauseHandler\LocationPathString($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Content_LocationPriorityService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.content.location_priority'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Gateway\SortClauseHandler\LocationPriority($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Location_DepthService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.depth'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gateway\SortClauseHandler\Location\Depth($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Location_IdService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.id'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gateway\SortClauseHandler\Location\Id($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Location_IsMainLocationService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.is_main_location'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gateway\SortClauseHandler\Location\IsMainLocation($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Location_PathService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.path'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gateway\SortClauseHandler\Location\Path($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Location_PriorityService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.priority'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gateway\SortClauseHandler\Location\Priority($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Search_Gateway_SortClauseHandler_Location_VisibilityService()
    {
        return $this->services['ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.visibility'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Gateway\SortClauseHandler\Location\Visibility($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_Section_Gateway_ExceptionConversionService()
    {
        return $this->services['ezpublish.persistence.legacy.section.gateway.exception_conversion'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Section\Gateway\ExceptionConversion($this->get('ezpublish.persistence.legacy.section.gateway.inner'));
    }
    protected function getEzpublish_Persistence_Legacy_Section_Gateway_InnerService()
    {
        return $this->services['ezpublish.persistence.legacy.section.gateway.inner'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Section\Gateway\DoctrineDatabase($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_TreeHandlerService()
    {
        return $this->services['ezpublish.persistence.legacy.tree_handler'] = new \eZ\Publish\Core\Persistence\Legacy\Content\TreeHandler($this->get('ezpublish.persistence.legacy.location.gateway.exception_conversion'), $this->get('ezpublish.persistence.legacy.location.mapper'), $this->get('ezpublish.persistence.legacy.content.gateway.exception_conversion'), $this->get('ezpublish.persistence.legacy.content.mapper'), $this->get('ezpublish.persistence.legacy.field_handler'));
    }
    protected function getEzpublish_Persistence_Legacy_UrlAlias_Gateway_ExceptionConversionService()
    {
        return $this->services['ezpublish.persistence.legacy.url_alias.gateway.exception_conversion'] = new \eZ\Publish\Core\Persistence\Legacy\Content\UrlAlias\Gateway\ExceptionConversion($this->get('ezpublish.persistence.legacy.url_alias.gateway.inner'));
    }
    protected function getEzpublish_Persistence_Legacy_UrlAlias_Gateway_InnerService()
    {
        return $this->services['ezpublish.persistence.legacy.url_alias.gateway.inner'] = new \eZ\Publish\Core\Persistence\Legacy\Content\UrlAlias\Gateway\DoctrineDatabase($this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish.persistence.legacy.language.mask_generator'));
    }
    protected function getEzpublish_Persistence_Legacy_UrlAlias_MapperService()
    {
        return $this->services['ezpublish.persistence.legacy.url_alias.mapper'] = new \eZ\Publish\Core\Persistence\Legacy\Content\UrlAlias\Mapper($this->get('ezpublish.persistence.legacy.language.mask_generator'));
    }
    protected function getEzpublish_Persistence_Legacy_UrlWildcard_Gateway_ExceptionConversionService()
    {
        return $this->services['ezpublish.persistence.legacy.url_wildcard.gateway.exception_conversion'] = new \eZ\Publish\Core\Persistence\Legacy\Content\UrlWildcard\Gateway\ExceptionConversion($this->get('ezpublish.persistence.legacy.url_wildcard.gateway.inner'));
    }
    protected function getEzpublish_Persistence_Legacy_UrlWildcard_Gateway_InnerService()
    {
        return $this->services['ezpublish.persistence.legacy.url_wildcard.gateway.inner'] = new \eZ\Publish\Core\Persistence\Legacy\Content\UrlWildcard\Gateway\DoctrineDatabase($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_UrlWildcard_MapperService()
    {
        return $this->services['ezpublish.persistence.legacy.url_wildcard.mapper'] = new \eZ\Publish\Core\Persistence\Legacy\Content\UrlWildcard\Mapper();
    }
    protected function getEzpublish_Persistence_Legacy_User_Gateway_ExceptionConversionService()
    {
        return $this->services['ezpublish.persistence.legacy.user.gateway.exception_conversion'] = new \eZ\Publish\Core\Persistence\Legacy\User\Gateway\ExceptionConversion($this->get('ezpublish.persistence.legacy.user.gateway.inner'));
    }
    protected function getEzpublish_Persistence_Legacy_User_Gateway_InnerService()
    {
        return $this->services['ezpublish.persistence.legacy.user.gateway.inner'] = new \eZ\Publish\Core\Persistence\Legacy\User\Gateway\DoctrineDatabase($this->get('ezpublish.api.storage_engine.legacy.dbhandler'));
    }
    protected function getEzpublish_Persistence_Legacy_User_MapperService()
    {
        return $this->services['ezpublish.persistence.legacy.user.mapper'] = new \eZ\Publish\Core\Persistence\Legacy\User\Mapper();
    }
    protected function getEzpublish_Persistence_SlugConverterService()
    {
        return $this->services['ezpublish.persistence.slug_converter'] = new \eZ\Publish\Core\Persistence\Legacy\Content\UrlAlias\SlugConverter($this->get('ezpublish.api.storage_engine.transformation_processor'));
    }
    protected function getEzpublish_RequestRedirectListenerService()
    {
        return $this->services['ezpublish.request_redirect_listener'] = new \eZ\Bundle\EzPublishCoreBundle\EventListener\RequestEventListener($this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish.chain_router'), 'eng', $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublish_RouteReference_GeneratorService()
    {
        $this->services['ezpublish.route_reference.generator'] = $instance = new \eZ\Publish\Core\MVC\Symfony\Routing\Generator\RouteReferenceGenerator($this->get('event_dispatcher'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getEzpublish_RouteReference_Listener_LanguageSwitchService()
    {
        return $this->services['ezpublish.route_reference.listener.language_switch'] = new \eZ\Publish\Core\MVC\Symfony\EventListener\LanguageSwitchListener($this->get('ezpublish.translation_helper'));
    }
    protected function getEzpublish_Security_ControllerService()
    {
        $this->services['ezpublish.security.controller'] = $instance = new \eZ\Publish\Core\MVC\Symfony\Controller\SecurityController($this->get('templating'), $this->get('ezpublish.config.resolver.chain'), $this->get('form.csrf_provider', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getEzpublish_Security_LoginListenerService()
    {
        return $this->services['ezpublish.security.login_listener'] = new \eZ\Publish\Core\MVC\Symfony\Security\EventListener\SecurityListener($this->get('ezpublish.signalslot.repository'), $this->get('ezpublish.config.resolver.chain'), $this->get('event_dispatcher'), $this->get('security.context'), '/_fragment');
    }
    protected function getEzpublish_Security_UserProviderService()
    {
        return $this->services['ezpublish.security.user_provider'] = new \eZ\Publish\Core\MVC\Symfony\Security\User\Provider($this->get('ezpublish.signalslot.repository'));
    }
    protected function getEzpublish_SessionInitByPostListenerService()
    {
        return $this->services['ezpublish.session_init_by_post_listener'] = new \eZ\Bundle\EzPublishCoreBundle\EventListener\SessionInitByPostListener($this->get('session', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublish_SessionSetDynamicNameListenerService()
    {
        return $this->services['ezpublish.session_set_dynamic_name_listener'] = new \eZ\Bundle\EzPublishCoreBundle\EventListener\SessionSetDynamicNameListener($this->get('ezpublish.config.resolver.chain'), $this->get('session', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('session.storage.native', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublish_Signalslot_EventConverterSlotService()
    {
        return $this->services['ezpublish.signalslot.event_converter_slot'] = new \eZ\Bundle\EzPublishCoreBundle\SignalSlot\Slot\SymfonyEventConverterSlot($this->get('event_dispatcher'));
    }
    public function getEzpublish_Signalslot_RepositoryService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.signalslot.repository'] = new eZPublishCoreSignalSlotRepository_000000002343a994000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Signalslot_RepositoryService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Publish\Core\SignalSlot\Repository($this->get('ezpublish.api.inner_repository'), $this->get('ezpublish.signalslot.signal_dispatcher_transaction_wrapper'));
    }
    protected function getEzpublish_Signalslot_SignalDispatcherService()
    {
        $this->services['ezpublish.signalslot.signal_dispatcher'] = $instance = new \eZ\Publish\Core\SignalSlot\SignalDispatcher\DefaultSignalDispatcher();
        $instance->attach('*', $this->get('ezpublish.signalslot.event_converter_slot'));
        $instance->attach('SectionService\\AssignSectionSignal', $this->get('ezpublish_legacy.signalslot.assign_section'));
        $instance->attach('ContentService\\CopyContentSignal', $this->get('ezpublish_legacy.signalslot.copy_content'));
        $instance->attach('LocationService\\CreateLocationSignal', $this->get('ezpublish_legacy.signalslot.create_location'));
        $instance->attach('ContentService\\DeleteContentSignal', $this->get('ezpublish_legacy.signalslot.delete_content'));
        $instance->attach('LocationService\\DeleteLocationSignal', $this->get('ezpublish_legacy.signalslot.delete_location'));
        $instance->attach('ContentService\\DeleteVersionSignal', $this->get('ezpublish_legacy.signalslot.delete_version'));
        $instance->attach('LocationService\\HideLocationSignal', $this->get('ezpublish_legacy.signalslot.hide_location'));
        $instance->attach('LocationService\\MoveSubtreeSignal', $this->get('ezpublish_legacy.signalslot.move_subtree'));
        $instance->attach('ContentService\\PublishVersionSignal', $this->get('ezpublish_legacy.signalslot.publish_version'));
        $instance->attach('ObjectStateService\\SetContentStateSignal', $this->get('ezpublish_legacy.signalslot.set_content_state'));
        $instance->attach('ObjectStateService\\CreateObjectStateSignal', $this->get('ezpublish_legacy.signalslot.create_object_state'));
        $instance->attach('ObjectStateService\\CreateObjectStateGroupSignal', $this->get('ezpublish_legacy.signalslot.create_object_state_group'));
        $instance->attach('ObjectStateService\\DeleteObjectStateSignal', $this->get('ezpublish_legacy.signalslot.delete_object_state'));
        $instance->attach('ObjectStateService\\DeleteObjectStateGroupSignal', $this->get('ezpublish_legacy.signalslot.delete_object_state_group'));
        $instance->attach('ObjectStateService\\SetPriorityOfObjectStateSignal', $this->get('ezpublish_legacy.signalslot.set_priority_of_object_state'));
        $instance->attach('ObjectStateService\\UpdateObjectStateSignal', $this->get('ezpublish_legacy.signalslot.update_object_state'));
        $instance->attach('ObjectStateService\\UpdateObjectStateGroupSignal', $this->get('ezpublish_legacy.signalslot.update_object_state_group'));
        $instance->attach('LocationService\\SwapLocationSignal', $this->get('ezpublish_legacy.signalslot.swap_location'));
        $instance->attach('LocationService\\UnhideLocationSignal', $this->get('ezpublish_legacy.signalslot.unhide_location'));
        $instance->attach('LocationService\\UpdateLocationSignal', $this->get('ezpublish_legacy.signalslot.update_location'));
        $instance->attach('ContentTypeService\\PublishContentTypeDraftSignal', $this->get('ezpublish_legacy.signalslot.publish_content_type_draft'));
        $instance->attach('LanguageService\\CreateLanguageSignal', $this->get('ezpublish_legacy.signalslot.create_language'));
        $instance->attach('LanguageService\\DeleteLanguageSignal', $this->get('ezpublish_legacy.signalslot.delete_language'));
        $instance->attach('LanguageService\\DisableLanguageSignal', $this->get('ezpublish_legacy.signalslot.disable_language'));
        $instance->attach('LanguageService\\EnableLanguageSignal', $this->get('ezpublish_legacy.signalslot.enable_language'));
        $instance->attach('LanguageService\\UpdateLanguageNameSignal', $this->get('ezpublish_legacy.signalslot.update_language_name'));
        $instance->attach('UserService\\UpdateUserSignal', $this->get('ezpublish_legacy.signalslot.update_user'));
        $instance->attach('UserService\\AssignUserToUserGroupSignal', $this->get('ezpublish_legacy.signalslot.assign_user_to_user_group'));
        $instance->attach('UserService\\UnAssignUserFromUserGroupSignal', $this->get('ezpublish_legacy.signalslot.unassign_user_from_user_group'));
        return $instance;
    }
    protected function getEzpublish_Signalslot_SignalDispatcherTransactionWrapperService()
    {
        return $this->services['ezpublish.signalslot.signal_dispatcher_transaction_wrapper'] = new \eZ\Publish\Core\SignalSlot\SignalDispatcher\SignalDispatcherTransactionWrapper($this->get('ezpublish.signalslot.signal_dispatcher'));
    }
    protected function getEzpublish_SiteaccessService()
    {
        return $this->services['ezpublish.siteaccess'] = new \eZ\Publish\Core\MVC\Symfony\SiteAccess('default');
    }
    protected function getEzpublish_Siteaccess_MatcherBuilderService()
    {
        return $this->services['ezpublish.siteaccess.matcher_builder'] = new \eZ\Bundle\EzPublishCoreBundle\SiteAccess\MatcherBuilder($this);
    }
    protected function getEzpublish_SiteaccessListenerService()
    {
        $this->services['ezpublish.siteaccess_listener'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\EventListener\SiteAccessListener($this->get('router.default'), $this->get('ezpublish.urlalias_generator'), $this->get('security.http_utils'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEzpublish_SiteaccessListener_RoutingService()
    {
        return $this->services['ezpublish.siteaccess_listener.routing'] = new \eZ\Bundle\EzPublishCoreBundle\EventListener\RoutingListener($this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish.urlalias_router'), $this->get('ezpublish.urlalias_generator'));
    }
    protected function getEzpublish_SiteaccessMatchListenerService()
    {
        return $this->services['ezpublish.siteaccess_match_listener'] = new \eZ\Publish\Core\MVC\Symfony\EventListener\SiteAccessMatchListener($this->get('ezpublish.siteaccess_router'), $this->get('event_dispatcher'), $this->get('fos_http_cache.user_context.request_matcher'));
    }
    protected function getEzpublish_SiteaccessRouterService()
    {
        return $this->services['ezpublish.siteaccess_router'] = new \eZ\Publish\Core\MVC\Symfony\SiteAccess\Router($this->get('ezpublish.siteaccess.matcher_builder'), $this->get('logger'), 'eng', array('URIElement' => array('value' => '1')), array(0 => 'ezdemo', 1 => 'eng', 2 => 'fre', 3 => 'ezdemo_admin'), 'eZ\\Publish\\Core\\MVC\\Symfony\\SiteAccess');
    }
    protected function getEzpublish_Spi_Persistence_CacheService()
    {
        return $this->services['ezpublish.spi.persistence.cache'] = new \eZ\Publish\Core\Persistence\Cache\Handler($this->get('ezpublish.api.storage_engine'), $this->get('ezpublish.spi.persistence.cache.sectionhandler'), $this->get('ezpublish.spi.persistence.cache.locationhandler'), $this->get('ezpublish.spi.persistence.cache.contenthandler'), $this->get('ezpublish.spi.persistence.cache.contentlanguagehandler'), $this->get('ezpublish.spi.persistence.cache.contenttypehandler'), $this->get('ezpublish.spi.persistence.cache.userhandler'), $this->get('ezpublish.spi.persistence.cache.searchhandler'), $this->get('ezpublish.spi.persistence.cache.transactionhandler'), $this->get('ezpublish.spi.persistence.cache.trashhandler'), $this->get('ezpublish.spi.persistence.cache.locationsearchhandler'), $this->get('ezpublish.spi.persistence.cache.urlaliashandler'), $this->get('ezpublish.spi.persistence.cache.objectstatehandler'), $this->get('ezpublish.spi.persistence.cache.persistencelogger'));
    }
    protected function getEzpublish_Spi_Persistence_Cache_ContenthandlerService()
    {
        return $this->services['ezpublish.spi.persistence.cache.contenthandler'] = new \eZ\Publish\Core\Persistence\Cache\ContentHandler($this->get('ezpublish.cache_pool.spi.cache.decorator'), $this->get('ezpublish.api.storage_engine'), $this->get('ezpublish.spi.persistence.cache.persistencelogger'));
    }
    protected function getEzpublish_Spi_Persistence_Cache_ContentlanguagehandlerService()
    {
        return $this->services['ezpublish.spi.persistence.cache.contentlanguagehandler'] = new \eZ\Publish\Core\Persistence\Cache\ContentLanguageHandler($this->get('ezpublish.cache_pool.spi.cache.decorator'), $this->get('ezpublish.api.storage_engine'), $this->get('ezpublish.spi.persistence.cache.persistencelogger'));
    }
    protected function getEzpublish_Spi_Persistence_Cache_ContenttypehandlerService()
    {
        return $this->services['ezpublish.spi.persistence.cache.contenttypehandler'] = new \eZ\Publish\Core\Persistence\Cache\ContentTypeHandler($this->get('ezpublish.cache_pool.spi.cache.decorator'), $this->get('ezpublish.api.storage_engine'), $this->get('ezpublish.spi.persistence.cache.persistencelogger'));
    }
    protected function getEzpublish_Spi_Persistence_Cache_LocationhandlerService()
    {
        return $this->services['ezpublish.spi.persistence.cache.locationhandler'] = new \eZ\Publish\Core\Persistence\Cache\LocationHandler($this->get('ezpublish.cache_pool.spi.cache.decorator'), $this->get('ezpublish.api.storage_engine'), $this->get('ezpublish.spi.persistence.cache.persistencelogger'));
    }
    protected function getEzpublish_Spi_Persistence_Cache_LocationsearchhandlerService()
    {
        return $this->services['ezpublish.spi.persistence.cache.locationsearchhandler'] = new \eZ\Publish\Core\Persistence\Cache\LocationSearchHandler($this->get('ezpublish.cache_pool.spi.cache.decorator'), $this->get('ezpublish.api.storage_engine'), $this->get('ezpublish.spi.persistence.cache.persistencelogger'));
    }
    protected function getEzpublish_Spi_Persistence_Cache_ObjectstatehandlerService()
    {
        return $this->services['ezpublish.spi.persistence.cache.objectstatehandler'] = new \eZ\Publish\Core\Persistence\Cache\ObjectStateHandler($this->get('ezpublish.cache_pool.spi.cache.decorator'), $this->get('ezpublish.api.storage_engine'), $this->get('ezpublish.spi.persistence.cache.persistencelogger'));
    }
    protected function getEzpublish_Spi_Persistence_Cache_PersistenceloggerService()
    {
        return $this->services['ezpublish.spi.persistence.cache.persistencelogger'] = new \eZ\Publish\Core\Persistence\Cache\PersistenceLogger(false);
    }
    protected function getEzpublish_Spi_Persistence_Cache_SearchhandlerService()
    {
        return $this->services['ezpublish.spi.persistence.cache.searchhandler'] = new \eZ\Publish\Core\Persistence\Cache\SearchHandler($this->get('ezpublish.cache_pool.spi.cache.decorator'), $this->get('ezpublish.api.storage_engine'), $this->get('ezpublish.spi.persistence.cache.persistencelogger'));
    }
    protected function getEzpublish_Spi_Persistence_Cache_SectionhandlerService()
    {
        return $this->services['ezpublish.spi.persistence.cache.sectionhandler'] = new \eZ\Publish\Core\Persistence\Cache\SectionHandler($this->get('ezpublish.cache_pool.spi.cache.decorator'), $this->get('ezpublish.api.storage_engine'), $this->get('ezpublish.spi.persistence.cache.persistencelogger'));
    }
    protected function getEzpublish_Spi_Persistence_Cache_TransactionhandlerService()
    {
        return $this->services['ezpublish.spi.persistence.cache.transactionhandler'] = new \eZ\Publish\Core\Persistence\Cache\TransactionHandler($this->get('ezpublish.cache_pool.spi.cache.decorator'), $this->get('ezpublish.api.storage_engine'), $this->get('ezpublish.spi.persistence.cache.persistencelogger'));
    }
    protected function getEzpublish_Spi_Persistence_Cache_TrashhandlerService()
    {
        return $this->services['ezpublish.spi.persistence.cache.trashhandler'] = new \eZ\Publish\Core\Persistence\Cache\TrashHandler($this->get('ezpublish.cache_pool.spi.cache.decorator'), $this->get('ezpublish.api.storage_engine'), $this->get('ezpublish.spi.persistence.cache.persistencelogger'));
    }
    protected function getEzpublish_Spi_Persistence_Cache_UrlaliashandlerService()
    {
        return $this->services['ezpublish.spi.persistence.cache.urlaliashandler'] = new \eZ\Publish\Core\Persistence\Cache\UrlAliasHandler($this->get('ezpublish.cache_pool.spi.cache.decorator'), $this->get('ezpublish.api.storage_engine'), $this->get('ezpublish.spi.persistence.cache.persistencelogger'));
    }
    protected function getEzpublish_Spi_Persistence_Cache_UserhandlerService()
    {
        return $this->services['ezpublish.spi.persistence.cache.userhandler'] = new \eZ\Publish\Core\Persistence\Cache\UserHandler($this->get('ezpublish.cache_pool.spi.cache.decorator'), $this->get('ezpublish.api.storage_engine'), $this->get('ezpublish.spi.persistence.cache.persistencelogger'));
    }
    public function getEzpublish_Spi_Persistence_LegacyService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.spi.persistence.legacy'] = new eZPublishCorePersistenceLegacyHandler_000000002343b609000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Spi_Persistence_LegacyService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Publish\Core\Persistence\Legacy\Handler($this->get('ezpublish.spi.persistence.legacy.content.handler'), $this->get('ezpublish.spi.persistence.legacy.search.handler.content'), $this->get('ezpublish.spi.persistence.legacy.content_type.handler.caching'), $this->get('ezpublish.spi.persistence.legacy.language.handler.caching'), $this->get('ezpublish.spi.persistence.legacy.location.handler'), $this->get('ezpublish.spi.persistence.legacy.search.handler.location'), $this->get('ezpublish.spi.persistence.legacy.object_state.handler'), $this->get('ezpublish.spi.persistence.legacy.section.handler'), $this->get('ezpublish.spi.persistence.legacy.transactionhandler'), $this->get('ezpublish.spi.persistence.legacy.trash.handler'), $this->get('ezpublish.spi.persistence.legacy.url_alias.handler'), $this->get('ezpublish.spi.persistence.legacy.url_wildcard.handler'), $this->get('ezpublish.spi.persistence.legacy.user.handler'));
    }
    public function getEzpublish_Spi_Persistence_Legacy_Content_HandlerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.spi.persistence.legacy.content.handler'] = new eZPublishCorePersistenceLegacyContentHandler_000000002343b60a000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Spi_Persistence_Legacy_Content_HandlerService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Publish\Core\Persistence\Legacy\Content\Handler($this->get('ezpublish.persistence.legacy.content.gateway.exception_conversion'), $this->get('ezpublish.persistence.legacy.location.gateway.exception_conversion'), $this->get('ezpublish.persistence.legacy.content.mapper'), $this->get('ezpublish.persistence.legacy.field_handler'), $this->get('ezpublish.persistence.slug_converter'), $this->get('ezpublish.persistence.legacy.url_alias.gateway.exception_conversion'), $this->get('ezpublish.spi.persistence.legacy.content_type.handler.caching'), $this->get('ezpublish.persistence.legacy.tree_handler'));
    }
    protected function getEzpublish_Spi_Persistence_Legacy_ContentType_Handler_CachingService()
    {
        return $this->services['ezpublish.spi.persistence.legacy.content_type.handler.caching'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Type\MemoryCachingHandler($this->get('ezpublish.spi.persistence.legacy.content_type.handler.inner'));
    }
    protected function getEzpublish_Spi_Persistence_Legacy_ContentType_Handler_InnerService()
    {
        return $this->services['ezpublish.spi.persistence.legacy.content_type.handler.inner'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Type\Handler($this->get('ezpublish.persistence.legacy.content_type.gateway.exception_conversion'), $this->get('ezpublish.persistence.legacy.content_type.mapper'), $this->get('ezpublish.persistence.legacy.content_type.update_handler.basic'));
    }
    protected function getEzpublish_Spi_Persistence_Legacy_Language_Handler_CachingService()
    {
        return $this->services['ezpublish.spi.persistence.legacy.language.handler.caching'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Language\CachingHandler($this->get('ezpublish.spi.persistence.legacy.language.handler.inner'), $this->get('ezpublish.persistence.legacy.language.cache'));
    }
    protected function getEzpublish_Spi_Persistence_Legacy_Language_Handler_InnerService()
    {
        return $this->services['ezpublish.spi.persistence.legacy.language.handler.inner'] = new \eZ\Publish\Core\Persistence\Legacy\Content\Language\Handler($this->get('ezpublish.persistence.legacy.language.gateway.exception_conversion'), $this->get('ezpublish.persistence.legacy.language.mapper'));
    }
    public function getEzpublish_Spi_Persistence_Legacy_Location_HandlerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.spi.persistence.legacy.location.handler'] = new eZPublishCorePersistenceLegacyContentLocationHandler_000000002343b748000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Spi_Persistence_Legacy_Location_HandlerService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Publish\Core\Persistence\Legacy\Content\Location\Handler($this->get('ezpublish.persistence.legacy.location.gateway.exception_conversion'), $this->get('ezpublish.persistence.legacy.location.mapper'), $this->get('ezpublish.spi.persistence.legacy.content.handler'), $this->get('ezpublish.spi.persistence.legacy.object_state.handler'), $this->get('ezpublish.persistence.legacy.tree_handler'));
    }
    public function getEzpublish_Spi_Persistence_Legacy_ObjectState_HandlerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.spi.persistence.legacy.object_state.handler'] = new eZPublishCorePersistenceLegacyContentObjectStateHandler_000000002343b798000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Spi_Persistence_Legacy_ObjectState_HandlerService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Publish\Core\Persistence\Legacy\Content\ObjectState\Handler($this->get('ezpublish.persistence.legacy.object_state.gateway.exception_conversion'), $this->get('ezpublish.persistence.legacy.object_state.mapper'));
    }
    public function getEzpublish_Spi_Persistence_Legacy_Search_Handler_ContentService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.spi.persistence.legacy.search.handler.content'] = new eZPublishCorePersistenceLegacyContentSearchHandler_000000002343b789000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Spi_Persistence_Legacy_Search_Handler_ContentService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Handler($this->get('ezpublish.persistence.legacy.search.gateway.content.exception_conversion'), $this->get('ezpublish.persistence.legacy.content.mapper'));
    }
    public function getEzpublish_Spi_Persistence_Legacy_Search_Handler_LocationService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.spi.persistence.legacy.search.handler.location'] = new eZPublishCorePersistenceLegacyContentSearchLocationHandler_000000002343b7f1000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Spi_Persistence_Legacy_Search_Handler_LocationService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Handler($this->get('ezpublish.persistence.legacy.search.gateway.location.exception_conversion'), $this->get('ezpublish.persistence.legacy.location.mapper'));
    }
    public function getEzpublish_Spi_Persistence_Legacy_Section_HandlerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.spi.persistence.legacy.section.handler'] = new eZPublishCorePersistenceLegacyContentSectionHandler_000000002343a887000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Spi_Persistence_Legacy_Section_HandlerService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Publish\Core\Persistence\Legacy\Content\Section\Handler($this->get('ezpublish.persistence.legacy.section.gateway.exception_conversion'));
    }
    protected function getEzpublish_Spi_Persistence_Legacy_TransactionhandlerService()
    {
        return $this->services['ezpublish.spi.persistence.legacy.transactionhandler'] = new \eZ\Publish\Core\Persistence\Legacy\TransactionHandler($this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish.spi.persistence.legacy.content_type.handler.caching'), $this->get('ezpublish.spi.persistence.legacy.language.handler.caching'));
    }
    public function getEzpublish_Spi_Persistence_Legacy_Trash_HandlerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.spi.persistence.legacy.trash.handler'] = new eZPublishCorePersistenceLegacyContentLocationTrashHandler_000000002343a885000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Spi_Persistence_Legacy_Trash_HandlerService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Publish\Core\Persistence\Legacy\Content\Location\Trash\Handler($this->get('ezpublish.spi.persistence.legacy.location.handler'), $this->get('ezpublish.persistence.legacy.location.gateway.exception_conversion'), $this->get('ezpublish.persistence.legacy.location.mapper'), $this->get('ezpublish.spi.persistence.legacy.content.handler'));
    }
    public function getEzpublish_Spi_Persistence_Legacy_UrlAlias_HandlerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.spi.persistence.legacy.url_alias.handler'] = new eZPublishCorePersistenceLegacyContentUrlAliasHandler_000000002343a8f7000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Spi_Persistence_Legacy_UrlAlias_HandlerService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Publish\Core\Persistence\Legacy\Content\UrlAlias\Handler($this->get('ezpublish.persistence.legacy.url_alias.gateway.exception_conversion'), $this->get('ezpublish.persistence.legacy.url_alias.mapper'), $this->get('ezpublish.persistence.legacy.location.gateway.exception_conversion'), $this->get('ezpublish.spi.persistence.legacy.language.handler.caching'), $this->get('ezpublish.persistence.slug_converter'));
    }
    public function getEzpublish_Spi_Persistence_Legacy_UrlWildcard_HandlerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.spi.persistence.legacy.url_wildcard.handler'] = new eZPublishCorePersistenceLegacyContentUrlWildcardHandler_000000002343b728000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Spi_Persistence_Legacy_UrlWildcard_HandlerService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Publish\Core\Persistence\Legacy\Content\UrlWildcard\Handler($this->get('ezpublish.persistence.legacy.url_wildcard.gateway.exception_conversion'), $this->get('ezpublish.persistence.legacy.url_wildcard.mapper'));
    }
    public function getEzpublish_Spi_Persistence_Legacy_User_HandlerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish.spi.persistence.legacy.user.handler'] = new eZPublishCorePersistenceLegacyUserHandler_000000002343b68b000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublish_Spi_Persistence_Legacy_User_HandlerService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Publish\Core\Persistence\Legacy\User\Handler($this->get('ezpublish.persistence.legacy.user.gateway.exception_conversion'), $this->get('ezpublish.persistence.legacy.role.gateway.exception_conversion'), $this->get('ezpublish.persistence.legacy.user.mapper'), $this->get('ezpublish.persistence.legacy.role.limitation.converter'));
    }
    protected function getEzpublish_Templating_Extension_RoutingService()
    {
        return $this->services['ezpublish.templating.extension.routing'] = new \eZ\Publish\Core\MVC\Symfony\Templating\Twig\Extension\RoutingExtension($this->get('ezpublish.route_reference.generator'));
    }
    protected function getEzpublish_Templating_GlobalHelper_CoreService()
    {
        $this->services['ezpublish.templating.global_helper.core'] = $instance = new \eZ\Publish\Core\MVC\Symfony\Templating\GlobalHelper($this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish.api.service.location'), $this->get('ezpublish.chain_router'), $this->get('ezpublish.translation_helper'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getEzpublish_Templating_GlobalHelper_LegacyService()
    {
        $this->services['ezpublish.templating.global_helper.legacy'] = $instance = new \eZ\Publish\Core\MVC\Legacy\Templating\GlobalHelper($this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish.api.service.location'), $this->get('ezpublish.chain_router'), $this->get('ezpublish.translation_helper'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setLegacyHelper($this->get('ezpublish_legacy.templating.legacy_helper'));
        return $instance;
    }
    protected function getEzpublish_TranslationHelperService()
    {
        return $this->services['ezpublish.translation_helper'] = new \eZ\Publish\Core\Helper\TranslationHelper($this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish.api.service.content'), array('eng-GB' => array(0 => 'eng', 1 => 'ezdemo_admin', 2 => 'ezdemo'), 'fre-FR' => array(0 => 'fre')), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublish_Twig_Extension_ContentService()
    {
        return $this->services['ezpublish.twig.extension.content'] = new \eZ\Publish\Core\MVC\Symfony\Templating\Twig\Extension\ContentExtension($this->get('ezpublish.signalslot.repository'), $this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish.fieldtype.parameterproviderregistry'), $this->get('ezpublish.fieldtype.ezxmltext.converter.html5'), $this->get('ezpublish.fieldtype.ezrichtext.converter.output.xhtml5'), $this->get('ezpublish.fieldtype.ezrichtext.converter.edit.xhtml5'), $this->get('ezpublish.image_alias.imagine.alias_generator'), $this->get('ezpublish.translation_helper'), $this->get('ezpublish.field_helper'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublish_Twig_Extension_CoreService()
    {
        return $this->services['ezpublish.twig.extension.core'] = new \eZ\Publish\Core\MVC\Symfony\Templating\Twig\Extension\CoreExtension($this->get('ezpublish.templating.global_helper.legacy'));
    }
    protected function getEzpublish_Twig_Extension_FilesizeService()
    {
        return $this->services['ezpublish.twig.extension.filesize'] = new \eZ\Publish\Core\MVC\Symfony\Templating\Twig\Extension\FileSizeExtension($this->get('translator'), array(0 => 'B', 1 => 'kB', 2 => 'MB', 3 => 'GB', 4 => 'TB', 5 => 'PB', 6 => 'EB'), $this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish.locale.converter'));
    }
    protected function getEzpublish_UrlaliasGeneratorService()
    {
        $this->services['ezpublish.urlalias_generator'] = $instance = new \eZ\Publish\Core\MVC\Symfony\Routing\Generator\UrlAliasGenerator($this->get('ezpublish.signalslot.repository'), $this->get('router.default'), $this->get('ezpublish.config.resolver.chain'));
        $instance->setRequestContext($this->get('router.request_context'));
        if ($this->has('ezpublish.siteaccess')) {
            $instance->setSiteAccess($this->get('ezpublish.siteaccess', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setSiteAccessRouter($this->get('ezpublish.siteaccess_router'));
        if ($this->has('logger')) {
            $instance->setLogger($this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getEzpublish_UrlaliasRouterService()
    {
        $this->services['ezpublish.urlalias_router'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\Routing\UrlAliasRouter($this->get('ezpublish.api.service.location'), $this->get('ezpublish.api.service.url_alias'), $this->get('ezpublish.api.service.content'), $this->get('ezpublish.urlalias_generator'), $this->get('router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->setConfigResolver($this->get('ezpublish.config.resolver.chain'));
        return $instance;
    }
    protected function getEzpublish_User_HashGeneratorService()
    {
        $this->services['ezpublish.user.hash_generator'] = $instance = new \eZ\Publish\Core\MVC\Symfony\Security\User\HashGenerator();
        $instance->setIdentity($this->get('ezpublish.user.identity'));
        return $instance;
    }
    protected function getEzpublish_User_IdentityService()
    {
        return $this->services['ezpublish.user.identity'] = new \eZ\Publish\Core\MVC\Symfony\Security\User\Identity();
    }
    protected function getEzpublish_User_IdentityDefiner_RoleIdService()
    {
        return $this->services['ezpublish.user.identity_definer.role_id'] = new \eZ\Publish\Core\MVC\Symfony\Security\User\ContextProvider\RoleContextProvider($this->get('ezpublish.signalslot.repository'));
    }
    protected function getEzpublish_Utils_DeprecationWarnerService()
    {
        return $this->services['ezpublish.utils.deprecation_warner'] = new \eZ\Publish\Core\Base\Utils\DeprecationWarner();
    }
    protected function getEzpublish_ViewManagerService()
    {
        $this->services['ezpublish.view_manager'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\View\Manager($this->get('templating'), $this->get('event_dispatcher'), $this->get('ezpublish.signalslot.repository'), $this->get('ezpublish.config.resolver.chain'), 'EzPublishCoreBundle::viewbase_layout.html.twig', $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->addContentViewProvider($this->get('ezpublish.content_view_provider.configured'), 10);
        $instance->addContentViewProvider($this->get('ezpublish_legacy.content_view_provider'), -255);
        $instance->addLocationViewProvider($this->get('ezpublish.location_view_provider.configured'), 10);
        $instance->addLocationViewProvider($this->get('ezpublish_legacy.location_view_provider'), -255);
        $instance->addBlockViewProvider($this->get('ezpublish.block_view_provider.configured'), 10);
        $instance->addBlockViewProvider($this->get('ezpublish_legacy.block_view_provider'), -255);
        return $instance;
    }
    protected function getEzpublishLegacy_BlockViewProviderService()
    {
        $this->services['ezpublish_legacy.block_view_provider'] = $instance = new \eZ\Publish\Core\MVC\Legacy\View\Provider\Block($this->get('ezpublish_legacy.kernel.lazy'), $this->get('ezpublish_legacy.view_decorator.twig'), $this->get('ezpublish_legacy.templating.legacy_helper'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->setPageService($this->get('ezpublish.fieldtype.ezpage.pageservice'));
        return $instance;
    }
    public function getEzpublishLegacy_Config_ResolverService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish_legacy.config.resolver'] = new eZBundleEzPublishLegacyBundleDependencyInjectionConfigurationLegacyConfigResolver_000000002343b325000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublishLegacy_Config_ResolverService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Bundle\EzPublishLegacyBundle\DependencyInjection\Configuration\LegacyConfigResolver($this->get('ezpublish_legacy.kernel.lazy'), 'site');
    }
    protected function getEzpublishLegacy_ConfigScopeListenerService()
    {
        return $this->services['ezpublish_legacy.config_scope_listener'] = new \eZ\Bundle\EzPublishLegacyBundle\EventListener\ConfigScopeListener($this->get('ezpublish_legacy.kernel.lazy_loader'));
    }
    protected function getEzpublishLegacy_ConfigurationMapperService()
    {
        $this->services['ezpublish_legacy.configuration_mapper'] = $instance = new \eZ\Bundle\EzPublishLegacyBundle\LegacyMapper\Configuration($this->get('ezpublish.config.resolver.core'), $this->get('ezpublish.http_cache.purger.instant'), $this->get('ezpublish_legacy.persistence_cache_purger'), $this->get('ezpublish.urlalias_generator'), $this->get('ezpublish.api.storage_engine.legacy.dbhandler'), $this->get('ezpublish_legacy.image_alias.cleaner'), array('imagemagick_enabled' => false, 'imagemagick_executable_path' => NULL, 'imagemagick_executable' => 'convert', 'imagemagick_filters' => array('geometry/scale' => '-geometry {1}x{2}', 'geometry/scalewidth' => '-geometry {1}', 'geometry/scaleheight' => '-geometry x{1}', 'geometry/scaledownonly' => '-geometry {1}x{2}>', 'geometry/scalewidthdownonly' => '-geometry {1}>', 'geometry/scaleheightdownonly' => '-geometry x{1}>', 'geometry/scaleexact' => '-geometry {1}x{2}!', 'geometry/scalepercent' => '-geometry {1}x{2}%', 'geometry/crop' => '-crop {1}x{2}+{3}+{4}', 'filter/noise' => '-noise {1}', 'filter/swirl' => '-swirl {1}', 'colorspace/gray' => '-colorspace GRAY', 'colorspace/transparent' => '-colorspace Transparent', 'colorspace' => '-colorspace {1}', 'border' => '-border {1}x{2}', 'border/color' => '-bordercolor rgb({1},{2},{3})', 'border/width' => '-borderwidth {1}', 'flatten' => '-flatten', 'resize' => '-resize {1}', 'optimize' => '-strip')));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEzpublishLegacy_ContentExceptionHandlerService()
    {
        return $this->services['ezpublish_legacy.content_exception_handler'] = new \eZ\Publish\Core\MVC\Legacy\EventListener\APIContentExceptionListener($this->get('ezpublish_legacy.content_view_provider'), $this->get('ezpublish_legacy.location_view_provider'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublishLegacy_ContentViewProviderService()
    {
        return $this->services['ezpublish_legacy.content_view_provider'] = new \eZ\Publish\Core\MVC\Legacy\View\Provider\Content($this->get('ezpublish_legacy.kernel.lazy'), $this->get('ezpublish_legacy.view_decorator.twig'), $this->get('ezpublish_legacy.templating.legacy_helper'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublishLegacy_ControllerService()
    {
        $this->services['ezpublish_legacy.controller'] = $instance = new \eZ\Bundle\EzPublishLegacyBundle\Controller\LegacyKernelController($this->get('ezpublish_legacy.kernel.lazy'), $this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish_legacy.uri_helper'), $this->get('ezpublish_legacy.response_manager'), $this->get('ezpublish_legacy.templating.legacy_helper'), $this->get('ezpublish.chain_router'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getEzpublishLegacy_Fieldtype_Ezimage_VariationServiceService()
    {
        return $this->services['ezpublish_legacy.fieldtype.ezimage.variation_service'] = new \eZ\Publish\Core\MVC\Legacy\Image\AliasGenerator($this->get('ezpublish_legacy.kernel.lazy'));
    }
    public function getEzpublishLegacy_ImageAlias_CleanerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish_legacy.image_alias.cleaner'] = new eZPublishCoreMVCLegacyImageAliasCleaner_000000002343b30d000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublishLegacy_ImageAlias_CleanerService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Publish\Core\MVC\Legacy\Image\AliasCleaner($this->get('ezpublish.image_alias.imagine.alias_cleaner'), $this->get('ezpublish.fieldtype.ezimage.io_service'), $this->get('ezpublish.core.io.image_fieldtype.legacy_url_redecorator'));
    }
    protected function getEzpublishLegacy_Kernel_LazyService()
    {
        return $this->services['ezpublish_legacy.kernel.lazy'] = $this->get('ezpublish_legacy.kernel.lazy_loader')->buildLegacyKernel($this->get('ezpublish_legacy.kernel_handler.web'));
    }
    protected function getEzpublishLegacy_Kernel_LazyLoaderService()
    {
        $this->services['ezpublish_legacy.kernel.lazy_loader'] = $instance = new \eZ\Publish\Core\MVC\Legacy\Kernel\Loader('/var/www/ayaville/ezpublish/../ezpublish_legacy', '/var/www/ayaville/ezpublish/../web', $this->get('event_dispatcher'), $this->get('ezpublish_legacy.uri_helper'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEzpublishLegacy_KernelHandler_CliService()
    {
        return $this->services['ezpublish_legacy.kernel_handler.cli'] = $this->get('ezpublish_legacy.kernel.lazy_loader')->buildLegacyKernelHandlerCLI();
    }
    protected function getEzpublishLegacy_KernelHandler_TreemenuService()
    {
        return $this->services['ezpublish_legacy.kernel_handler.treemenu'] = $this->get('ezpublish_legacy.kernel.lazy_loader')->buildLegacyKernelHandlerTreeMenu();
    }
    protected function getEzpublishLegacy_KernelHandler_WebService()
    {
        return $this->services['ezpublish_legacy.kernel_handler.web'] = $this->get('ezpublish_legacy.kernel.lazy_loader')->buildLegacyKernelHandlerWeb('ezpKernelWeb');
    }
    protected function getEzpublishLegacy_LegacyBundles_ExtensionLocatorService()
    {
        return $this->services['ezpublish_legacy.legacy_bundles.extension_locator'] = new \eZ\Bundle\EzPublishLegacyBundle\LegacyBundles\LegacyExtensionsLocator();
    }
    protected function getEzpublishLegacy_LegacyBundlesMapperService()
    {
        return $this->services['ezpublish_legacy.legacy_bundles_mapper'] = new \eZ\Bundle\EzPublishLegacyBundle\LegacyMapper\LegacyBundles($this->get('ezpublish.config.resolver.core'), array('extensions' => array(0 => 'ezcommentsbundle', 1 => 'ngsymfonytools')));
    }
    protected function getEzpublishLegacy_LegacyCachePurgerService()
    {
        return $this->services['ezpublish_legacy.legacy_cache_purger'] = new \eZ\Bundle\EzPublishLegacyBundle\Cache\LegacyCachePurger($this->get('ezpublish_legacy.kernel.lazy'), $this->get('ezpublish_legacy.configuration_mapper'), $this->get('filesystem'), '/var/www/ayaville/ezpublish/../ezpublish_legacy', $this->get('ezpublish.siteaccess'));
    }
    protected function getEzpublishLegacy_LegacyKernelListenerService()
    {
        return $this->services['ezpublish_legacy.legacy_kernel_listener'] = new \eZ\Bundle\EzPublishLegacyBundle\EventListener\LegacyKernelListener();
    }
    protected function getEzpublishLegacy_LocationViewProviderService()
    {
        $this->services['ezpublish_legacy.location_view_provider'] = $instance = new \eZ\Publish\Core\MVC\Legacy\View\Provider\Location($this->get('ezpublish_legacy.kernel.lazy'), $this->get('ezpublish_legacy.view_decorator.twig'), $this->get('ezpublish_legacy.templating.legacy_helper'), $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    public function getEzpublishLegacy_PersistenceCachePurgerService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish_legacy.persistence_cache_purger'] = new eZBundleEzPublishLegacyBundleCachePersistenceCachePurger_000000002343b438000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublishLegacy_PersistenceCachePurgerService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Bundle\EzPublishLegacyBundle\Cache\PersistenceCachePurger($this->get('ezpublish.cache_pool.spi.cache.decorator'), $this->get('ezpublish.spi.persistence.cache.locationhandler'), $this->get('logger'));
    }
    protected function getEzpublishLegacy_Preview_ControllerService()
    {
        $this->services['ezpublish_legacy.preview.controller'] = $instance = new \eZ\Bundle\EzPublishLegacyBundle\Controller\PreviewController($this->get('ezpublish.api.service.content'), $this->get('http_kernel'), $this->get('ezpublish.content_preview_helper'), $this->get('security.context'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setConfigResolver($this->get('ezpublish.config.resolver.chain'));
        return $instance;
    }
    protected function getEzpublishLegacy_RequestListenerService()
    {
        return $this->services['ezpublish_legacy.request_listener'] = new \eZ\Bundle\EzPublishLegacyBundle\EventListener\RequestListener($this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish.signalslot.repository'), $this->get('security.context'));
    }
    protected function getEzpublishLegacy_ResponseListenerService()
    {
        return $this->services['ezpublish_legacy.response_listener'] = new \eZ\Bundle\EzPublishLegacyBundle\EventListener\CsrfTokenResponseListener();
    }
    protected function getEzpublishLegacy_ResponseManagerService()
    {
        return $this->services['ezpublish_legacy.response_manager'] = new \eZ\Bundle\EzPublishLegacyBundle\LegacyResponse\LegacyResponseManager($this->get('templating'), $this->get('ezpublish.config.resolver.chain'));
    }
    protected function getEzpublishLegacy_RestListenerService()
    {
        return $this->services['ezpublish_legacy.rest_listener'] = new \eZ\Bundle\EzPublishLegacyBundle\EventListener\RestListener('rest');
    }
    public function getEzpublishLegacy_RouterService($lazyLoad = true)
    {
        if ($lazyLoad) {
            $container = $this;
            return $this->services['ezpublish_legacy.router'] = new eZBundleEzPublishLegacyBundleRoutingFallbackRouter_000000002343b433000000006a1c264a(
                function (&$wrappedInstance, \ProxyManager\Proxy\LazyLoadingInterface $proxy) use ($container) {
                    $wrappedInstance = $container->getEzpublishLegacy_RouterService(false);
                    $proxy->setProxyInitializer(null);
                    return true;
                }
            );
        }
        return new \eZ\Bundle\EzPublishLegacyBundle\Routing\FallbackRouter($this->get('ezpublish_legacy.url_generator'), NULL, $this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublishLegacy_Security_LoginCleanupListenerService()
    {
        return $this->services['ezpublish_legacy.security.login_cleanup_listener'] = new \eZ\Publish\Core\MVC\Legacy\Security\Firewall\LoginCleanupListener();
    }
    protected function getEzpublishLegacy_SecurityMapperService()
    {
        return $this->services['ezpublish_legacy.security_mapper'] = new \eZ\Bundle\EzPublishLegacyBundle\LegacyMapper\Security($this->get('ezpublish.signalslot.repository'), $this->get('ezpublish.config.resolver.chain'), $this->get('security.context'));
    }
    protected function getEzpublishLegacy_SessionMapperService()
    {
        $this->services['ezpublish_legacy.session_mapper'] = $instance = new \eZ\Bundle\EzPublishLegacyBundle\LegacyMapper\Session($this->get('session.storage.native'), '_ezpublish', $this->get('session', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getEzpublishLegacy_Setup_ControllerService()
    {
        $this->services['ezpublish_legacy.setup.controller'] = $instance = new \eZ\Bundle\EzPublishLegacyBundle\Controller\LegacySetupController($this->get('ezpublish_legacy.kernel.lazy'), $this->get('ezpublish_legacy.config.resolver'), $this->get('ezpublish_legacy.persistence_cache_purger'), $this->get('ezpublish_legacy.kernel.lazy_loader'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEzpublishLegacy_SetupWizard_ConfigurationConverterService()
    {
        return $this->services['ezpublish_legacy.setup_wizard.configuration_converter'] = new \eZ\Bundle\EzPublishLegacyBundle\SetupWizard\ConfigurationConverter($this->get('ezpublish_legacy.config.resolver'), $this->get('ezpublish_legacy.kernel.lazy'), array(0 => 'ezdemo_site', 1 => 'ezdemo_site_clean'));
    }
    protected function getEzpublishLegacy_SetupWizard_ConfigurationDumperService()
    {
        return $this->services['ezpublish_legacy.setup_wizard.configuration_dumper'] = new \eZ\Bundle\EzPublishLegacyBundle\SetupWizard\ConfigurationDumper($this->get('filesystem'), array(0 => 'dev', 1 => 'prod'), '/var/www/ayaville/ezpublish', '/var/www/ayaville/ezpublish/cache/prod', $this->get('ezpublish_legacy.webconfigurator'));
    }
    protected function getEzpublishLegacy_Signalslot_AssignSectionService()
    {
        return $this->services['ezpublish_legacy.signalslot.assign_section'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyAssignSectionSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_AssignUserToUserGroupService()
    {
        return $this->services['ezpublish_legacy.signalslot.assign_user_to_user_group'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyAssignUserToUserGroupSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_CopyContentService()
    {
        return $this->services['ezpublish_legacy.signalslot.copy_content'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyCopyContentSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_CreateLanguageService()
    {
        return $this->services['ezpublish_legacy.signalslot.create_language'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyCreateLanguageSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_CreateLocationService()
    {
        return $this->services['ezpublish_legacy.signalslot.create_location'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyCreateLocationSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_CreateObjectStateService()
    {
        return $this->services['ezpublish_legacy.signalslot.create_object_state'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyCreateObjectStateSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_CreateObjectStateGroupService()
    {
        return $this->services['ezpublish_legacy.signalslot.create_object_state_group'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyCreateObjectStateGroupSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_DeleteContentService()
    {
        return $this->services['ezpublish_legacy.signalslot.delete_content'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyDeleteContentSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_DeleteLanguageService()
    {
        return $this->services['ezpublish_legacy.signalslot.delete_language'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyDeleteLanguageSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_DeleteLocationService()
    {
        return $this->services['ezpublish_legacy.signalslot.delete_location'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyDeleteLocationSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_DeleteObjectStateService()
    {
        return $this->services['ezpublish_legacy.signalslot.delete_object_state'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyDeleteObjectStateSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_DeleteObjectStateGroupService()
    {
        return $this->services['ezpublish_legacy.signalslot.delete_object_state_group'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyDeleteObjectStateGroupSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_DeleteVersionService()
    {
        return $this->services['ezpublish_legacy.signalslot.delete_version'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyDeleteVersionSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_DisableLanguageService()
    {
        return $this->services['ezpublish_legacy.signalslot.disable_language'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyDisableLanguageSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_EnableLanguageService()
    {
        return $this->services['ezpublish_legacy.signalslot.enable_language'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyEnableLanguageSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_HideLocationService()
    {
        return $this->services['ezpublish_legacy.signalslot.hide_location'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyHideLocationSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_MoveSubtreeService()
    {
        return $this->services['ezpublish_legacy.signalslot.move_subtree'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyMoveSubtreeSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_PublishContentTypeDraftService()
    {
        return $this->services['ezpublish_legacy.signalslot.publish_content_type_draft'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyPublishContentTypeDraftSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_PublishVersionService()
    {
        return $this->services['ezpublish_legacy.signalslot.publish_version'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyPublishVersionSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_SetContentStateService()
    {
        return $this->services['ezpublish_legacy.signalslot.set_content_state'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacySetContentStateSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_SetPriorityOfObjectStateService()
    {
        return $this->services['ezpublish_legacy.signalslot.set_priority_of_object_state'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacySetPriorityOfObjectStateSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_SwapLocationService()
    {
        return $this->services['ezpublish_legacy.signalslot.swap_location'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacySwapLocationSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_UnassignUserFromUserGroupService()
    {
        return $this->services['ezpublish_legacy.signalslot.unassign_user_from_user_group'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyUnassignUserFromUserGroupSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_UnhideLocationService()
    {
        return $this->services['ezpublish_legacy.signalslot.unhide_location'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyUnhideLocationSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_UpdateLanguageNameService()
    {
        return $this->services['ezpublish_legacy.signalslot.update_language_name'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyUpdateLanguageNameSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_UpdateLocationService()
    {
        return $this->services['ezpublish_legacy.signalslot.update_location'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyUpdateLocationSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_UpdateObjectStateService()
    {
        return $this->services['ezpublish_legacy.signalslot.update_object_state'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyUpdateObjectStateSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_UpdateObjectStateGroupService()
    {
        return $this->services['ezpublish_legacy.signalslot.update_object_state_group'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyUpdateObjectStateGroupSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Signalslot_UpdateUserService()
    {
        return $this->services['ezpublish_legacy.signalslot.update_user'] = new \eZ\Publish\Core\SignalSlot\Slot\LegacyUpdateUserSlot($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_SiteaccessMapperService()
    {
        $this->services['ezpublish_legacy.siteaccess_mapper'] = $instance = new \eZ\Bundle\EzPublishLegacyBundle\LegacyMapper\SiteAccess(array('fragment_path' => '/_fragment'));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEzpublishLegacy_Templating_ApiContentConverterService()
    {
        return $this->services['ezpublish_legacy.templating.api_content_converter'] = new \eZ\Publish\Core\MVC\Legacy\Templating\Converter\ApiContentConverter($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Templating_DelegatingConverterService()
    {
        $a = $this->get('ezpublish_legacy.templating.api_content_converter');
        $b = $this->get('ezpublish_legacy.templating.pageparts_converter');
        $this->services['ezpublish_legacy.templating.delegating_converter'] = $instance = new \eZ\Publish\Core\MVC\Legacy\Templating\Converter\DelegatingConverter($this->get('ezpublish_legacy.templating.generic_converter'));
        $instance->addConverter($a, 'eZ\\Publish\\Core\\Repository\\Values\\Content\\Content');
        $instance->addConverter($a, 'eZ\\Publish\\Core\\Repository\\Values\\Content\\Location');
        $instance->addConverter($b, 'eZ\\Publish\\Core\\FieldType\\Page\\Parts\\Block');
        $instance->addConverter($b, 'eZ\\Publish\\Core\\FieldType\\Page\\Parts\\Zone');
        return $instance;
    }
    protected function getEzpublishLegacy_Templating_GenericConverterService()
    {
        return $this->services['ezpublish_legacy.templating.generic_converter'] = new \eZ\Publish\Core\MVC\Legacy\Templating\Converter\GenericConverter();
    }
    protected function getEzpublishLegacy_Templating_LegacyHelperService()
    {
        return $this->services['ezpublish_legacy.templating.legacy_helper'] = new \eZ\Publish\Core\MVC\Legacy\Templating\LegacyHelper($this->get('ezpublish_legacy.kernel.lazy'));
    }
    protected function getEzpublishLegacy_Templating_PagepartsConverterService()
    {
        return $this->services['ezpublish_legacy.templating.pageparts_converter'] = new \eZ\Publish\Core\MVC\Legacy\Templating\Converter\PagePartsConverter();
    }
    protected function getEzpublishLegacy_Treemenu_ControllerService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('ezpublish_legacy.treemenu.controller', 'request');
        }
        $this->services['ezpublish_legacy.treemenu.controller'] = $this->scopedServices['request']['ezpublish_legacy.treemenu.controller'] = $instance = new \eZ\Bundle\EzPublishLegacyBundle\Controller\LegacyTreeMenuController($this->get('ezpublish_legacy.kernel_handler.treemenu'), $this->get('ezpublish_legacy.kernel.lazy_loader'), array());
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEzpublishLegacy_Twig_ExtensionService()
    {
        return $this->services['ezpublish_legacy.twig.extension'] = new \eZ\Publish\Core\MVC\Legacy\Templating\Twig\Extension\LegacyExtension($this->get('templating.engine.eztpl'), $this->get('ezpublish_legacy.templating.legacy_helper'), 'EzPublishLegacyBundle::ez_legacy_render_js.html.twig', 'EzPublishLegacyBundle::ez_legacy_render_css.html.twig');
    }
    protected function getEzpublishLegacy_UriHelperService()
    {
        return $this->services['ezpublish_legacy.uri_helper'] = new \eZ\Publish\Core\MVC\Legacy\Kernel\URIHelper();
    }
    protected function getEzpublishLegacy_UrlGeneratorService()
    {
        $this->services['ezpublish_legacy.url_generator'] = $instance = new \eZ\Bundle\EzPublishLegacyBundle\Routing\UrlGenerator($this->get('ezpublish_legacy.kernel.lazy'));
        $instance->setRequestContext($this->get('router.request_context'));
        if ($this->has('ezpublish.siteaccess')) {
            $instance->setSiteAccess($this->get('ezpublish.siteaccess', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setSiteAccessRouter($this->get('ezpublish.siteaccess_router'));
        if ($this->has('logger')) {
            $instance->setLogger($this->get('logger', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getEzpublishLegacy_ViewDecorator_TwigService()
    {
        return $this->services['ezpublish_legacy.view_decorator.twig'] = new \eZ\Publish\Core\MVC\Legacy\View\TwigContentViewLayoutDecorator($this->get('twig'), array('viewbaseLayout' => 'EzPublishCoreBundle::viewbase_layout.html.twig', 'contentBlockName' => 'content'), $this->get('ezpublish.config.resolver.chain'));
    }
    protected function getEzpublishLegacy_WebconfiguratorService()
    {
        return $this->services['ezpublish_legacy.webconfigurator'] = $this->get('ezpublish_legacy.webconfigurator.factory')->buildWebConfigurator('/var/www/ayaville/ezpublish');
    }
    protected function getEzpublishLegacy_Webconfigurator_FactoryService()
    {
        return $this->services['ezpublish_legacy.webconfigurator.factory'] = new \eZ\Bundle\EzPublishLegacyBundle\SetupWizard\ConfiguratorFactory();
    }
    protected function getEzpublishLegacy_WebsiteToolbar_ControllerService()
    {
        $this->services['ezpublish_legacy.website_toolbar.controller'] = $instance = new \eZ\Bundle\EzPublishLegacyBundle\Controller\WebsiteToolbarController($this->get('templating.engine.eztpl'), $this->get('ezpublish.api.service.content'), $this->get('ezpublish.api.service.location'), $this->get('security.context'), $this->get('form.csrf_provider', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->setContainer($this);
        return $instance;
    }
    protected function getEzpublishRest_Controller_BaseService()
    {
        $this->services['ezpublish_rest.controller.base'] = $instance = new \eZ\Publish\Core\REST\Server\Controller();
        $instance->setContainer($this);
        $instance->setInputDispatcher($this->get('ezpublish_rest.input.dispatcher'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setRepository($this->get('ezpublish.signalslot.repository'));
        return $instance;
    }
    protected function getEzpublishRest_Controller_BinaryContentService()
    {
        $this->services['ezpublish_rest.controller.binary_content'] = $instance = new \eZ\Publish\Core\REST\Server\Controller\BinaryContent($this->get('ezpublish.image_alias.imagine.alias_generator'));
        $instance->setContainer($this);
        $instance->setInputDispatcher($this->get('ezpublish_rest.input.dispatcher'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setRepository($this->get('ezpublish.signalslot.repository'));
        return $instance;
    }
    protected function getEzpublishRest_Controller_ContentService()
    {
        $this->services['ezpublish_rest.controller.content'] = $instance = new \eZ\Publish\Core\REST\Server\Controller\Content();
        $instance->setContainer($this);
        $instance->setInputDispatcher($this->get('ezpublish_rest.input.dispatcher'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setRepository($this->get('ezpublish.signalslot.repository'));
        return $instance;
    }
    protected function getEzpublishRest_Controller_ContentTypeService()
    {
        $this->services['ezpublish_rest.controller.content_type'] = $instance = new \eZ\Publish\Core\REST\Server\Controller\ContentType($this->get('ezpublish.api.service.content_type'));
        $instance->setContainer($this);
        $instance->setInputDispatcher($this->get('ezpublish_rest.input.dispatcher'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setRepository($this->get('ezpublish.signalslot.repository'));
        return $instance;
    }
    protected function getEzpublishRest_Controller_LocationService()
    {
        $this->services['ezpublish_rest.controller.location'] = $instance = new \eZ\Publish\Core\REST\Server\Controller\Location($this->get('ezpublish.api.service.location'), $this->get('ezpublish.api.service.content'), $this->get('ezpublish.api.service.trash'));
        $instance->setContainer($this);
        $instance->setInputDispatcher($this->get('ezpublish_rest.input.dispatcher'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setRepository($this->get('ezpublish.signalslot.repository'));
        return $instance;
    }
    protected function getEzpublishRest_Controller_ObjectStateService()
    {
        $this->services['ezpublish_rest.controller.object_state'] = $instance = new \eZ\Publish\Core\REST\Server\Controller\ObjectState($this->get('ezpublish.api.service.object_state'), $this->get('ezpublish.api.service.content'));
        $instance->setContainer($this);
        $instance->setInputDispatcher($this->get('ezpublish_rest.input.dispatcher'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setRepository($this->get('ezpublish.signalslot.repository'));
        return $instance;
    }
    protected function getEzpublishRest_Controller_OptionsService()
    {
        $this->services['ezpublish_rest.controller.options'] = $instance = new \eZ\Publish\Core\REST\Server\Controller\Options();
        $instance->setContainer($this);
        $instance->setInputDispatcher($this->get('ezpublish_rest.input.dispatcher'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setRepository($this->get('ezpublish.signalslot.repository'));
        return $instance;
    }
    protected function getEzpublishRest_Controller_RoleService()
    {
        $this->services['ezpublish_rest.controller.role'] = $instance = new \eZ\Publish\Core\REST\Server\Controller\Role($this->get('ezpublish.api.service.role'), $this->get('ezpublish.api.service.user'), $this->get('ezpublish.api.service.location'));
        $instance->setContainer($this);
        $instance->setInputDispatcher($this->get('ezpublish_rest.input.dispatcher'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setRepository($this->get('ezpublish.signalslot.repository'));
        return $instance;
    }
    protected function getEzpublishRest_Controller_RootService()
    {
        $this->services['ezpublish_rest.controller.root'] = $instance = new \eZ\Publish\Core\REST\Server\Controller\Root();
        $instance->setContainer($this);
        $instance->setInputDispatcher($this->get('ezpublish_rest.input.dispatcher'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setRepository($this->get('ezpublish.signalslot.repository'));
        return $instance;
    }
    protected function getEzpublishRest_Controller_SectionService()
    {
        $this->services['ezpublish_rest.controller.section'] = $instance = new \eZ\Publish\Core\REST\Server\Controller\Section($this->get('ezpublish.api.service.section'));
        $instance->setContainer($this);
        $instance->setInputDispatcher($this->get('ezpublish_rest.input.dispatcher'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setRepository($this->get('ezpublish.signalslot.repository'));
        return $instance;
    }
    protected function getEzpublishRest_Controller_ServicesService()
    {
        return $this->services['ezpublish_rest.controller.services'] = new \eZ\Publish\Core\REST\Server\Controller\Services(array('AF' => array('Name' => 'Afghanistan', 'Alpha2' => 'AF', 'Alpha3' => 'AFG', 'IDC' => '93'), 'AX' => array('Name' => 'Åland', 'Alpha2' => 'AX', 'Alpha3' => 'ALA', 'IDC' => '358'), 'AL' => array('Name' => 'Albania', 'Alpha2' => 'AL', 'Alpha3' => 'ALB', 'IDC' => '355'), 'DZ' => array('Name' => 'Algeria', 'Alpha2' => 'DZ', 'Alpha3' => 'DZA', 'IDC' => '213'), 'AS' => array('Name' => 'American Samoa', 'Alpha2' => 'AS', 'Alpha3' => 'ASM', 'IDC' => '1684'), 'AD' => array('Name' => 'Andorra', 'Alpha2' => 'AD', 'Alpha3' => 'AND', 'IDC' => '376'), 'AO' => array('Name' => 'Angola', 'Alpha2' => 'AO', 'Alpha3' => 'AGO', 'IDC' => '244'), 'AI' => array('Name' => 'Anguilla', 'Alpha2' => 'AI', 'Alpha3' => 'AIA', 'IDC' => '1264'), 'AQ' => array('Name' => 'Antarctica', 'Alpha2' => 'AQ', 'Alpha3' => 'ATA', 'IDC' => '672'), 'AG' => array('Name' => 'Antigua and Barbuda', 'Alpha2' => 'AG', 'Alpha3' => 'ATG', 'IDC' => '1268'), 'AR' => array('Name' => 'Argentina', 'Alpha2' => 'AR', 'Alpha3' => 'ARG', 'IDC' => '54'), 'AM' => array('Name' => 'Armenia', 'Alpha2' => 'AM', 'Alpha3' => 'ARM', 'IDC' => '374'), 'AW' => array('Name' => 'Aruba', 'Alpha2' => 'AW', 'Alpha3' => 'ABW', 'IDC' => '297'), 'AU' => array('Name' => 'Australia', 'Alpha2' => 'AU', 'Alpha3' => 'AUS', 'IDC' => '61'), 'AT' => array('Name' => 'Austria', 'Alpha2' => 'AT', 'Alpha3' => 'AUT', 'IDC' => '43'), 'AZ' => array('Name' => 'Azerbaijan', 'Alpha2' => 'AZ', 'Alpha3' => 'AZE', 'IDC' => '994'), 'BS' => array('Name' => 'Bahamas', 'Alpha2' => 'BS', 'Alpha3' => 'BHS', 'IDC' => '1242'), 'BH' => array('Name' => 'Bahrain', 'Alpha2' => 'BH', 'Alpha3' => 'BHR', 'IDC' => '973'), 'BD' => array('Name' => 'Bangladesh', 'Alpha2' => 'BD', 'Alpha3' => 'BGD', 'IDC' => '880'), 'BB' => array('Name' => 'Barbados', 'Alpha2' => 'BB', 'Alpha3' => 'BRB', 'IDC' => '1246'), 'BY' => array('Name' => 'Belarus', 'Alpha2' => 'BY', 'Alpha3' => 'BLR', 'IDC' => '375'), 'BE' => array('Name' => 'Belgium', 'Alpha2' => 'BE', 'Alpha3' => 'BEL', 'IDC' => '32'), 'BZ' => array('Name' => 'Belize', 'Alpha2' => 'BZ', 'Alpha3' => 'BLZ', 'IDC' => '501'), 'BJ' => array('Name' => 'Benin', 'Alpha2' => 'BJ', 'Alpha3' => 'BEN', 'IDC' => '229'), 'BM' => array('Name' => 'Bermuda', 'Alpha2' => 'BM', 'Alpha3' => 'BMU', 'IDC' => '1441'), 'BT' => array('Name' => 'Bhutan', 'Alpha2' => 'BT', 'Alpha3' => 'BTN', 'IDC' => '975'), 'BO' => array('Name' => 'Bolivia', 'Alpha2' => 'BO', 'Alpha3' => 'BOL', 'IDC' => '591'), 'BA' => array('Name' => 'Bosnia and Herzegovina', 'Alpha2' => 'BA', 'Alpha3' => 'BIH', 'IDC' => '387'), 'BW' => array('Name' => 'Botswana', 'Alpha2' => 'BW', 'Alpha3' => 'BWA', 'IDC' => '267'), 'BV' => array('Name' => 'Bouvet Island', 'Alpha2' => 'BV', 'Alpha3' => 'BVT', 'IDC' => '47'), 'BR' => array('Name' => 'Brazil', 'Alpha2' => 'BR', 'Alpha3' => 'BRA', 'IDC' => '55'), 'IO' => array('Name' => 'British Indian Ocean Territory', 'Alpha2' => 'IO', 'Alpha3' => 'IOT', 'IDC' => '246'), 'BN' => array('Name' => 'Brunei Darussalam', 'Alpha2' => 'BN', 'Alpha3' => 'BRN', 'IDC' => '673'), 'BG' => array('Name' => 'Bulgaria', 'Alpha2' => 'BG', 'Alpha3' => 'BGR', 'IDC' => '359'), 'BF' => array('Name' => 'Burkina Faso', 'Alpha2' => 'BF', 'Alpha3' => 'BFA', 'IDC' => '226'), 'BI' => array('Name' => 'Burundi', 'Alpha2' => 'BI', 'Alpha3' => 'BDI', 'IDC' => '257'), 'KH' => array('Name' => 'Cambodia', 'Alpha2' => 'KH', 'Alpha3' => 'KHM', 'IDC' => '855'), 'CM' => array('Name' => 'Cameroon', 'Alpha2' => 'CM', 'Alpha3' => 'CMR', 'IDC' => '237'), 'CA' => array('Name' => 'Canada', 'Alpha2' => 'CA', 'Alpha3' => 'CAN', 'IDC' => '1'), 'CV' => array('Name' => 'Cape Verde', 'Alpha2' => 'CV', 'Alpha3' => 'CPV', 'IDC' => '238'), 'KY' => array('Name' => 'Cayman Islands', 'Alpha2' => 'KY', 'Alpha3' => 'CYM', 'IDC' => '1345'), 'CF' => array('Name' => 'Central African Republic', 'Alpha2' => 'CF', 'Alpha3' => 'CAF', 'IDC' => '236'), 'TD' => array('Name' => 'Chad', 'Alpha2' => 'TD', 'Alpha3' => 'TCD', 'IDC' => '235'), 'CL' => array('Name' => 'Chile', 'Alpha2' => 'CL', 'Alpha3' => 'CHL', 'IDC' => '56'), 'CN' => array('Name' => 'China', 'Alpha2' => 'CN', 'Alpha3' => 'CHN', 'IDC' => '86'), 'CX' => array('Name' => 'Christmas Island', 'Alpha2' => 'CX', 'Alpha3' => 'CXR', 'IDC' => '61'), 'CC' => array('Name' => 'Cocos (Keeling) Islands', 'Alpha2' => 'CC', 'Alpha3' => 'CCK', 'IDC' => '61'), 'CO' => array('Name' => 'Colombia', 'Alpha2' => 'CO', 'Alpha3' => 'COL', 'IDC' => '57'), 'KM' => array('Name' => 'Comoros', 'Alpha2' => 'KM', 'Alpha3' => 'COM', 'IDC' => '269'), 'CG' => array('Name' => 'Congo', 'Alpha2' => 'CG', 'Alpha3' => 'COG', 'IDC' => '242'), 'CD' => array('Name' => 'Congo, The Democratic Republic Of The', 'Alpha2' => 'CD', 'Alpha3' => 'COD', 'IDC' => '243'), 'CK' => array('Name' => 'Cook Islands', 'Alpha2' => 'CK', 'Alpha3' => 'COK', 'IDC' => '682'), 'CR' => array('Name' => 'Costa Rica', 'Alpha2' => 'CR', 'Alpha3' => 'CRI', 'IDC' => '506'), 'CI' => array('Name' => 'Côte d\'Ivoire', 'Alpha2' => 'CI', 'Alpha3' => 'CIV', 'IDC' => '225'), 'HR' => array('Name' => 'Croatia', 'Alpha2' => 'HR', 'Alpha3' => 'HRV', 'IDC' => '385'), 'CU' => array('Name' => 'Cuba', 'Alpha2' => 'CU', 'Alpha3' => 'CUB', 'IDC' => '53'), 'CY' => array('Name' => 'Cyprus', 'Alpha2' => 'CY', 'Alpha3' => 'CYP', 'IDC' => '357'), 'CZ' => array('Name' => 'Czech Republic', 'Alpha2' => 'CZ', 'Alpha3' => 'CZE', 'IDC' => '420'), 'DK' => array('Name' => 'Denmark', 'Alpha2' => 'DK', 'Alpha3' => 'DNK', 'IDC' => '45'), 'DJ' => array('Name' => 'Djibouti', 'Alpha2' => 'DJ', 'Alpha3' => 'DJI', 'IDC' => '253'), 'DM' => array('Name' => 'Dominica', 'Alpha2' => 'DM', 'Alpha3' => 'DMA', 'IDC' => '1767'), 'DO' => array('Name' => 'Dominican Republic', 'Alpha2' => 'DO', 'Alpha3' => 'DOM', 'IDC' => '1809'), 'EC' => array('Name' => 'Ecuador', 'Alpha2' => 'EC', 'Alpha3' => 'ECU', 'IDC' => '593'), 'EG' => array('Name' => 'Egypt', 'Alpha2' => 'EG', 'Alpha3' => 'EGY', 'IDC' => '20'), 'SV' => array('Name' => 'El Salvador', 'Alpha2' => 'SV', 'Alpha3' => 'SLV', 'IDC' => '503'), 'GQ' => array('Name' => 'Equatorial Guinea', 'Alpha2' => 'GQ', 'Alpha3' => 'GNQ', 'IDC' => '240'), 'ER' => array('Name' => 'Eritrea', 'Alpha2' => 'ER', 'Alpha3' => 'ERI', 'IDC' => '291'), 'EE' => array('Name' => 'Estonia', 'Alpha2' => 'EE', 'Alpha3' => 'EST', 'IDC' => '372'), 'ET' => array('Name' => 'Ethiopia', 'Alpha2' => 'ET', 'Alpha3' => 'ETH', 'IDC' => '251'), 'FK' => array('Name' => 'Falkland Islands (Malvinas)', 'Alpha2' => 'FK', 'Alpha3' => 'FLK', 'IDC' => '500'), 'FO' => array('Name' => 'Faroe Islands', 'Alpha2' => 'FO', 'Alpha3' => 'FRO', 'IDC' => '298'), 'FJ' => array('Name' => 'Fiji', 'Alpha2' => 'FJ', 'Alpha3' => 'FJI', 'IDC' => '679'), 'FI' => array('Name' => 'Finland', 'Alpha2' => 'FI', 'Alpha3' => 'FIN', 'IDC' => '358'), 'FR' => array('Name' => 'France', 'Alpha2' => 'FR', 'Alpha3' => 'FRA', 'IDC' => '33'), 'GF' => array('Name' => 'French Guiana', 'Alpha2' => 'GF', 'Alpha3' => 'GUF', 'IDC' => '594'), 'PF' => array('Name' => 'French Polynesia', 'Alpha2' => 'PF', 'Alpha3' => 'PYF', 'IDC' => '689'), 'TF' => array('Name' => 'French Southern Territories', 'Alpha2' => 'TF', 'Alpha3' => 'ATF', 'IDC' => '0'), 'GA' => array('Name' => 'Gabon', 'Alpha2' => 'GA', 'Alpha3' => 'GAB', 'IDC' => '241'), 'GM' => array('Name' => 'Gambia', 'Alpha2' => 'GM', 'Alpha3' => 'GMB', 'IDC' => '220'), 'GE' => array('Name' => 'Georgia', 'Alpha2' => 'GE', 'Alpha3' => 'GEO', 'IDC' => '995'), 'DE' => array('Name' => 'Germany', 'Alpha2' => 'DE', 'Alpha3' => 'DEU', 'IDC' => '49'), 'GH' => array('Name' => 'Ghana', 'Alpha2' => 'GH', 'Alpha3' => 'GHA', 'IDC' => '233'), 'GI' => array('Name' => 'Gibraltar', 'Alpha2' => 'GI', 'Alpha3' => 'GIB', 'IDC' => '350'), 'GR' => array('Name' => 'Greece', 'Alpha2' => 'GR', 'Alpha3' => 'GRC', 'IDC' => '30'), 'GL' => array('Name' => 'Greenland', 'Alpha2' => 'GL', 'Alpha3' => 'GRL', 'IDC' => '299'), 'GD' => array('Name' => 'Grenada', 'Alpha2' => 'GD', 'Alpha3' => 'GRD', 'IDC' => '1473'), 'GP' => array('Name' => 'Guadeloupe', 'Alpha2' => 'GP', 'Alpha3' => 'GLP', 'IDC' => '590'), 'GU' => array('Name' => 'Guam', 'Alpha2' => 'GU', 'Alpha3' => 'GUM', 'IDC' => '1671'), 'GT' => array('Name' => 'Guatemala', 'Alpha2' => 'GT', 'Alpha3' => 'GTM', 'IDC' => '502'), 'GG' => array('Name' => 'Guernsey', 'Alpha2' => 'GG', 'Alpha3' => 'GGY', 'IDC' => '44'), 'GN' => array('Name' => 'Guinea', 'Alpha2' => 'GN', 'Alpha3' => 'GIN', 'IDC' => '224'), 'GW' => array('Name' => 'Guinea-Bissau', 'Alpha2' => 'GW', 'Alpha3' => 'GNB', 'IDC' => '245'), 'GY' => array('Name' => 'Guyana', 'Alpha2' => 'GY', 'Alpha3' => 'GUY', 'IDC' => '592'), 'HT' => array('Name' => 'Haiti', 'Alpha2' => 'HT', 'Alpha3' => 'HTI', 'IDC' => '509'), 'HM' => array('Name' => 'Heard Island and McDonald Islands', 'Alpha2' => 'HM', 'Alpha3' => 'HMD', 'IDC' => '672'), 'HN' => array('Name' => 'Honduras', 'Alpha2' => 'HN', 'Alpha3' => 'HND', 'IDC' => '504'), 'HK' => array('Name' => 'Hong Kong', 'Alpha2' => 'HK', 'Alpha3' => 'HKG', 'IDC' => '852'), 'HU' => array('Name' => 'Hungary', 'Alpha2' => 'HU', 'Alpha3' => 'HUN', 'IDC' => '36'), 'IS' => array('Name' => 'Iceland', 'Alpha2' => 'IS', 'Alpha3' => 'ISL', 'IDC' => '354'), 'IN' => array('Name' => 'India', 'Alpha2' => 'IN', 'Alpha3' => 'IND', 'IDC' => '91'), 'ID' => array('Name' => 'Indonesia', 'Alpha2' => 'ID', 'Alpha3' => 'IDN', 'IDC' => '62'), 'IR' => array('Name' => 'Iran, Islamic Republic of', 'Alpha2' => 'IR', 'Alpha3' => 'IRN', 'IDC' => '98'), 'IQ' => array('Name' => 'Iraq', 'Alpha2' => 'IQ', 'Alpha3' => 'IRQ', 'IDC' => '964'), 'IE' => array('Name' => 'Ireland', 'Alpha2' => 'IE', 'Alpha3' => 'IRL', 'IDC' => '353'), 'IM' => array('Name' => 'Isle of Man', 'Alpha2' => 'IM', 'Alpha3' => 'IMN', 'IDC' => '44'), 'IL' => array('Name' => 'Israel', 'Alpha2' => 'IL', 'Alpha3' => 'ISR', 'IDC' => '972'), 'IT' => array('Name' => 'Italy', 'Alpha2' => 'IT', 'Alpha3' => 'ITA', 'IDC' => '39'), 'JM' => array('Name' => 'Jamaica', 'Alpha2' => 'JM', 'Alpha3' => 'JAM', 'IDC' => '1876'), 'JP' => array('Name' => 'Japan', 'Alpha2' => 'JP', 'Alpha3' => 'JPN', 'IDC' => '81'), 'JE' => array('Name' => 'Jersey', 'Alpha2' => 'JE', 'Alpha3' => 'JEY', 'IDC' => '44'), 'JO' => array('Name' => 'Jordan', 'Alpha2' => 'JO', 'Alpha3' => 'JOR', 'IDC' => '962'), 'KZ' => array('Name' => 'Kazakhstan', 'Alpha2' => 'KZ', 'Alpha3' => 'KAZ', 'IDC' => '7'), 'KE' => array('Name' => 'Kenya', 'Alpha2' => 'KE', 'Alpha3' => 'KEN', 'IDC' => '254'), 'KI' => array('Name' => 'Kiribati', 'Alpha2' => 'KI', 'Alpha3' => 'KIR', 'IDC' => '686'), 'KP' => array('Name' => 'Korea, Democratic People\'s Republic of', 'Alpha2' => 'KP', 'Alpha3' => 'PRK', 'IDC' => '850'), 'KR' => array('Name' => 'Korea, Republic of', 'Alpha2' => 'KR', 'Alpha3' => 'KOR', 'IDC' => '82'), 'KW' => array('Name' => 'Kuwait', 'Alpha2' => 'KW', 'Alpha3' => 'KWT', 'IDC' => '965'), 'KG' => array('Name' => 'Kyrgyzstan', 'Alpha2' => 'KG', 'Alpha3' => 'KGZ', 'IDC' => '996'), 'LA' => array('Name' => 'Lao People\'s Democratic Republic', 'Alpha2' => 'LA', 'Alpha3' => 'LAO', 'IDC' => '856'), 'LV' => array('Name' => 'Latvia', 'Alpha2' => 'LV', 'Alpha3' => 'LVA', 'IDC' => '371'), 'LB' => array('Name' => 'Lebanon', 'Alpha2' => 'LB', 'Alpha3' => 'LBN', 'IDC' => '961'), 'LS' => array('Name' => 'Lesotho', 'Alpha2' => 'LS', 'Alpha3' => 'LSO', 'IDC' => '266'), 'LR' => array('Name' => 'Liberia', 'Alpha2' => 'LR', 'Alpha3' => 'LBR', 'IDC' => '231'), 'LY' => array('Name' => 'Libyan Arab Jamahiriya', 'Alpha2' => 'LY', 'Alpha3' => 'LBY', 'IDC' => '218'), 'LI' => array('Name' => 'Liechtenstein', 'Alpha2' => 'LI', 'Alpha3' => 'LIE', 'IDC' => '423'), 'LT' => array('Name' => 'Lithuania', 'Alpha2' => 'LT', 'Alpha3' => 'LTU', 'IDC' => '370'), 'LU' => array('Name' => 'Luxembourg', 'Alpha2' => 'LU', 'Alpha3' => 'LUX', 'IDC' => '352'), 'MO' => array('Name' => 'Macau', 'Alpha2' => 'MO', 'Alpha3' => 'MAC', 'IDC' => '853'), 'MK' => array('Name' => 'Macedonia, The Former Yugoslav Republic of', 'Alpha2' => 'MK', 'Alpha3' => 'MKD', 'IDC' => '389'), 'MG' => array('Name' => 'Madagascar', 'Alpha2' => 'MG', 'Alpha3' => 'MDG', 'IDC' => '261'), 'MW' => array('Name' => 'Malawi', 'Alpha2' => 'MW', 'Alpha3' => 'MWI', 'IDC' => '265'), 'MY' => array('Name' => 'Malaysia', 'Alpha2' => 'MY', 'Alpha3' => 'MYS', 'IDC' => '60'), 'MV' => array('Name' => 'Maldives', 'Alpha2' => 'MV', 'Alpha3' => 'MDV', 'IDC' => '960'), 'ML' => array('Name' => 'Mali', 'Alpha2' => 'ML', 'Alpha3' => 'MLI', 'IDC' => '223'), 'MT' => array('Name' => 'Malta', 'Alpha2' => 'MT', 'Alpha3' => 'MLT', 'IDC' => '356'), 'MH' => array('Name' => 'Marshall Islands', 'Alpha2' => 'MH', 'Alpha3' => 'MHL', 'IDC' => '692'), 'MQ' => array('Name' => 'Martinique', 'Alpha2' => 'MQ', 'Alpha3' => 'MTQ', 'IDC' => '596'), 'MR' => array('Name' => 'Mauritania', 'Alpha2' => 'MR', 'Alpha3' => 'MRT', 'IDC' => '222'), 'MU' => array('Name' => 'Mauritius', 'Alpha2' => 'MU', 'Alpha3' => 'MUS', 'IDC' => '230'), 'YT' => array('Name' => 'Mayotte', 'Alpha2' => 'YT', 'Alpha3' => 'MYT', 'IDC' => '262'), 'MX' => array('Name' => 'Mexico', 'Alpha2' => 'MX', 'Alpha3' => 'MEX', 'IDC' => '52'), 'FM' => array('Name' => 'Micronesia, Federated States of', 'Alpha2' => 'FM', 'Alpha3' => 'FSM', 'IDC' => '691'), 'MD' => array('Name' => 'Moldova, Republic of', 'Alpha2' => 'MD', 'Alpha3' => 'MDA', 'IDC' => '373'), 'MC' => array('Name' => 'Monaco', 'Alpha2' => 'MC', 'Alpha3' => 'MCO', 'IDC' => '377'), 'MN' => array('Name' => 'Mongolia', 'Alpha2' => 'MN', 'Alpha3' => 'MNG', 'IDC' => '976'), 'ME' => array('Name' => 'Montenegro', 'Alpha2' => 'ME', 'Alpha3' => 'MNE', 'IDC' => '382'), 'MS' => array('Name' => 'Montserrat', 'Alpha2' => 'MS', 'Alpha3' => 'MSR', 'IDC' => '1664'), 'MA' => array('Name' => 'Morocco', 'Alpha2' => 'MA', 'Alpha3' => 'MAR', 'IDC' => '212'), 'MZ' => array('Name' => 'Mozambique', 'Alpha2' => 'MZ', 'Alpha3' => 'MOZ', 'IDC' => '258'), 'MM' => array('Name' => 'Myanmar', 'Alpha2' => 'MM', 'Alpha3' => 'MMR', 'IDC' => '95'), 'NA' => array('Name' => 'Namibia', 'Alpha2' => 'NA', 'Alpha3' => 'NAM', 'IDC' => '264'), 'NR' => array('Name' => 'Nauru', 'Alpha2' => 'NR', 'Alpha3' => 'NRU', 'IDC' => '674'), 'NP' => array('Name' => 'Nepal', 'Alpha2' => 'NP', 'Alpha3' => 'NPL', 'IDC' => '977'), 'NL' => array('Name' => 'Netherlands', 'Alpha2' => 'NL', 'Alpha3' => 'NLD', 'IDC' => '31'), 'AN' => array('Name' => 'Netherlands Antilles', 'Alpha2' => 'AN', 'Alpha3' => 'ANT', 'IDC' => '599'), 'NC' => array('Name' => 'New Caledonia', 'Alpha2' => 'NC', 'Alpha3' => 'NCL', 'IDC' => '687'), 'NZ' => array('Name' => 'New Zealand', 'Alpha2' => 'NZ', 'Alpha3' => 'NZL', 'IDC' => '64'), 'NI' => array('Name' => 'Nicaragua', 'Alpha2' => 'NI', 'Alpha3' => 'NIC', 'IDC' => '505'), 'NE' => array('Name' => 'Niger', 'Alpha2' => 'NE', 'Alpha3' => 'NER', 'IDC' => '227'), 'NG' => array('Name' => 'Nigeria', 'Alpha2' => 'NG', 'Alpha3' => 'NGA', 'IDC' => '234'), 'NU' => array('Name' => 'Niue', 'Alpha2' => 'NU', 'Alpha3' => 'NIU', 'IDC' => '683'), 'NF' => array('Name' => 'Norfolk Island', 'Alpha2' => 'NF', 'Alpha3' => 'NFK', 'IDC' => '6723'), 'MP' => array('Name' => 'Northern Mariana Islands', 'Alpha2' => 'MP', 'Alpha3' => 'MNP', 'IDC' => '1670'), 'NO' => array('Name' => 'Norway', 'Alpha2' => 'NO', 'Alpha3' => 'NOR', 'IDC' => '47'), 'OM' => array('Name' => 'Oman', 'Alpha2' => 'OM', 'Alpha3' => 'OMN', 'IDC' => '968'), 'PK' => array('Name' => 'Pakistan', 'Alpha2' => 'PK', 'Alpha3' => 'PAK', 'IDC' => '92'), 'PW' => array('Name' => 'Palau', 'Alpha2' => 'PW', 'Alpha3' => 'PLW', 'IDC' => '680'), 'PS' => array('Name' => 'Palestinian Territory, Occupied', 'Alpha2' => 'PS', 'Alpha3' => 'PSE', 'IDC' => '970'), 'PA' => array('Name' => 'Panama', 'Alpha2' => 'PA', 'Alpha3' => 'PAN', 'IDC' => '507'), 'PG' => array('Name' => 'Papua New Guinea', 'Alpha2' => 'PG', 'Alpha3' => 'PNG', 'IDC' => '675'), 'PY' => array('Name' => 'Paraguay', 'Alpha2' => 'PY', 'Alpha3' => 'PRY', 'IDC' => '595'), 'PE' => array('Name' => 'Peru', 'Alpha2' => 'PE', 'Alpha3' => 'PER', 'IDC' => '51'), 'PH' => array('Name' => 'Philippines', 'Alpha2' => 'PH', 'Alpha3' => 'PHL', 'IDC' => '63'), 'PN' => array('Name' => 'Pitcairn', 'Alpha2' => 'PN', 'Alpha3' => 'PCN', 'IDC' => '64'), 'PL' => array('Name' => 'Poland', 'Alpha2' => 'PL', 'Alpha3' => 'POL', 'IDC' => '48'), 'PT' => array('Name' => 'Portugal', 'Alpha2' => 'PT', 'Alpha3' => 'PRT', 'IDC' => '351'), 'PR' => array('Name' => 'Puerto Rico', 'Alpha2' => 'PR', 'Alpha3' => 'PRI', 'IDC' => '1787'), 'QA' => array('Name' => 'Qatar', 'Alpha2' => 'QA', 'Alpha3' => 'QAT', 'IDC' => '974'), 'RE' => array('Name' => 'Reunion', 'Alpha2' => 'RE', 'Alpha3' => 'REU', 'IDC' => '262'), 'RO' => array('Name' => 'Romania', 'Alpha2' => 'RO', 'Alpha3' => 'ROU', 'IDC' => '40'), 'RU' => array('Name' => 'Russian Federation', 'Alpha2' => 'RU', 'Alpha3' => 'RUS', 'IDC' => '7'), 'RW' => array('Name' => 'Rwanda', 'Alpha2' => 'RW', 'Alpha3' => 'RWA', 'IDC' => '250'), 'BL' => array('Name' => 'Saint Barthélemy', 'Alpha2' => 'BL', 'Alpha3' => 'BLM', 'IDC' => '590'), 'SH' => array('Name' => 'Saint Helena', 'Alpha2' => 'SH', 'Alpha3' => 'SHN', 'IDC' => '290'), 'KN' => array('Name' => 'Saint Kitts and Nevis', 'Alpha2' => 'KN', 'Alpha3' => 'KNA', 'IDC' => '1869'), 'LC' => array('Name' => 'Saint Lucia', 'Alpha2' => 'LC', 'Alpha3' => 'LCA', 'IDC' => '1758'), 'MF' => array('Name' => 'Saint Martin', 'Alpha2' => 'MF', 'Alpha3' => 'MAF', 'IDC' => '590'), 'PM' => array('Name' => 'Saint Pierre and Miquelon', 'Alpha2' => 'PM', 'Alpha3' => 'SPM', 'IDC' => '508'), 'VC' => array('Name' => 'Saint Vincent and The Grenadines', 'Alpha2' => 'VC', 'Alpha3' => 'VCT', 'IDC' => '1784'), 'WS' => array('Name' => 'Samoa', 'Alpha2' => 'WS', 'Alpha3' => 'WSM', 'IDC' => '685'), 'SM' => array('Name' => 'San Marino', 'Alpha2' => 'SM', 'Alpha3' => 'SMR', 'IDC' => '378'), 'ST' => array('Name' => 'Sao Tome and Principe', 'Alpha2' => 'ST', 'Alpha3' => 'STP', 'IDC' => '239'), 'SA' => array('Name' => 'Saudi Arabia', 'Alpha2' => 'SA', 'Alpha3' => 'SAU', 'IDC' => '966'), 'SN' => array('Name' => 'Senegal', 'Alpha2' => 'SN', 'Alpha3' => 'SEN', 'IDC' => '221'), 'RS' => array('Name' => 'Serbia', 'Alpha2' => 'RS', 'Alpha3' => 'SRB', 'IDC' => '381'), 'SC' => array('Name' => 'Seychelles', 'Alpha2' => 'SC', 'Alpha3' => 'SYC', 'IDC' => '248'), 'SL' => array('Name' => 'Sierra Leone', 'Alpha2' => 'SL', 'Alpha3' => 'SLE', 'IDC' => '232'), 'SG' => array('Name' => 'Singapore', 'Alpha2' => 'SG', 'Alpha3' => 'SGP', 'IDC' => '65'), 'SK' => array('Name' => 'Slovakia', 'Alpha2' => 'SK', 'Alpha3' => 'SVK', 'IDC' => '421'), 'SI' => array('Name' => 'Slovenia', 'Alpha2' => 'SI', 'Alpha3' => 'SVN', 'IDC' => '386'), 'SB' => array('Name' => 'Solomon Islands', 'Alpha2' => 'SB', 'Alpha3' => 'SLB', 'IDC' => '677'), 'SO' => array('Name' => 'Somalia', 'Alpha2' => 'SO', 'Alpha3' => 'SOM', 'IDC' => '252'), 'ZA' => array('Name' => 'South Africa', 'Alpha2' => 'ZA', 'Alpha3' => 'ZAF', 'IDC' => '27'), 'GS' => array('Name' => 'South Georgia and The South Sandwich Islands', 'Alpha2' => 'GS', 'Alpha3' => 'SGS', 'IDC' => '500'), 'ES' => array('Name' => 'Spain', 'Alpha2' => 'ES', 'Alpha3' => 'ESP', 'IDC' => '34'), 'LK' => array('Name' => 'Sri Lanka', 'Alpha2' => 'LK', 'Alpha3' => 'LKA', 'IDC' => '94'), 'SD' => array('Name' => 'Sudan', 'Alpha2' => 'SD', 'Alpha3' => 'SDN', 'IDC' => '249'), 'SR' => array('Name' => 'Suriname', 'Alpha2' => 'SR', 'Alpha3' => 'SUR', 'IDC' => '597'), 'SJ' => array('Name' => 'Svalbard and Jan Mayen', 'Alpha2' => 'SJ', 'Alpha3' => 'SJM', 'IDC' => '47'), 'SZ' => array('Name' => 'Swaziland', 'Alpha2' => 'SZ', 'Alpha3' => 'SWZ', 'IDC' => '268'), 'SE' => array('Name' => 'Sweden', 'Alpha2' => 'SE', 'Alpha3' => 'SWE', 'IDC' => '46'), 'CH' => array('Name' => 'Switzerland', 'Alpha2' => 'CH', 'Alpha3' => 'CHE', 'IDC' => '41'), 'SY' => array('Name' => 'Syrian Arab Republic', 'Alpha2' => 'SY', 'Alpha3' => 'SYR', 'IDC' => '963'), 'TW' => array('Name' => 'Taiwan', 'Alpha2' => 'TW', 'Alpha3' => 'TWN', 'IDC' => '886'), 'TJ' => array('Name' => 'Tajikistan', 'Alpha2' => 'TJ', 'Alpha3' => 'TJK', 'IDC' => '992'), 'TZ' => array('Name' => 'Tanzania, United Republic of', 'Alpha2' => 'TZ', 'Alpha3' => 'TZA', 'IDC' => '255'), 'TH' => array('Name' => 'Thailand', 'Alpha2' => 'TH', 'Alpha3' => 'THA', 'IDC' => '66'), 'TL' => array('Name' => 'Timor-Leste', 'Alpha2' => 'TL', 'Alpha3' => 'TLS', 'IDC' => '670'), 'TG' => array('Name' => 'Togo', 'Alpha2' => 'TG', 'Alpha3' => 'TGO', 'IDC' => '228'), 'TK' => array('Name' => 'Tokelau', 'Alpha2' => 'TK', 'Alpha3' => 'TKL', 'IDC' => '690'), 'TO' => array('Name' => 'Tonga', 'Alpha2' => 'TO', 'Alpha3' => 'TON', 'IDC' => '676'), 'TT' => array('Name' => 'Trinidad and Tobago', 'Alpha2' => 'TT', 'Alpha3' => 'TTO', 'IDC' => '1868'), 'TN' => array('Name' => 'Tunisia', 'Alpha2' => 'TN', 'Alpha3' => 'TUN', 'IDC' => '216'), 'TR' => array('Name' => 'Turkey', 'Alpha2' => 'TR', 'Alpha3' => 'TUR', 'IDC' => '90'), 'TM' => array('Name' => 'Turkmenistan', 'Alpha2' => 'TM', 'Alpha3' => 'TKM', 'IDC' => '993'), 'TC' => array('Name' => 'Turks and Caicos Islands', 'Alpha2' => 'TC', 'Alpha3' => 'TCA', 'IDC' => '1649'), 'TV' => array('Name' => 'Tuvalu', 'Alpha2' => 'TV', 'Alpha3' => 'TUV', 'IDC' => '688'), 'UG' => array('Name' => 'Uganda', 'Alpha2' => 'UG', 'Alpha3' => 'UGA', 'IDC' => '256'), 'UA' => array('Name' => 'Ukraine', 'Alpha2' => 'UA', 'Alpha3' => 'UKR', 'IDC' => '380'), 'AE' => array('Name' => 'United Arab Emirates', 'Alpha2' => 'AE', 'Alpha3' => 'ARE', 'IDC' => '971'), 'GB' => array('Name' => 'United Kingdom', 'Alpha2' => 'GB', 'Alpha3' => 'GBR', 'IDC' => '44'), 'UM' => array('Name' => 'United States Minor Outlying Islands', 'Alpha2' => 'UM', 'Alpha3' => 'UMI', 'IDC' => '1'), 'US' => array('Name' => 'United States of America', 'Alpha2' => 'US', 'Alpha3' => 'USA', 'IDC' => '1'), 'UY' => array('Name' => 'Uruguay', 'Alpha2' => 'UY', 'Alpha3' => 'URY', 'IDC' => '598'), 'UZ' => array('Name' => 'Uzbekistan', 'Alpha2' => 'UZ', 'Alpha3' => 'UZB', 'IDC' => '998'), 'VU' => array('Name' => 'Vanuatu', 'Alpha2' => 'VU', 'Alpha3' => 'VUT', 'IDC' => '678'), 'VA' => array('Name' => 'Holy See (Vatican City State)', 'Alpha2' => 'VA', 'Alpha3' => 'VAT', 'IDC' => '3906'), 'VE' => array('Name' => 'Venezuela', 'Alpha2' => 'VE', 'Alpha3' => 'VEN', 'IDC' => '58'), 'VN' => array('Name' => 'Viet Nam', 'Alpha2' => 'VN', 'Alpha3' => 'VNM', 'IDC' => '84'), 'VG' => array('Name' => 'Virgin Islands, British', 'Alpha2' => 'VG', 'Alpha3' => 'VGB', 'IDC' => '1284'), 'VI' => array('Name' => 'Virgin Islands, U.S.', 'Alpha2' => 'VI', 'Alpha3' => 'VIR', 'IDC' => '1340'), 'WF' => array('Name' => 'Wallis and Futuna', 'Alpha2' => 'WF', 'Alpha3' => 'WLF', 'IDC' => '681'), 'EH' => array('Name' => 'Western Sahara', 'Alpha2' => 'EH', 'Alpha3' => 'ESH', 'IDC' => '212'), 'YE' => array('Name' => 'Yemen', 'Alpha2' => 'YE', 'Alpha3' => 'YEM', 'IDC' => '967'), 'ZM' => array('Name' => 'Zambia', 'Alpha2' => 'ZM', 'Alpha3' => 'ZMB', 'IDC' => '260'), 'ZW' => array('Name' => 'Zimbabwe', 'Alpha2' => 'ZW', 'Alpha3' => 'ZWE', 'IDC' => '263')));
    }
    protected function getEzpublishRest_Controller_TrashService()
    {
        $this->services['ezpublish_rest.controller.trash'] = $instance = new \eZ\Publish\Core\REST\Server\Controller\Trash($this->get('ezpublish.api.service.trash'), $this->get('ezpublish.api.service.location'));
        $instance->setContainer($this);
        $instance->setInputDispatcher($this->get('ezpublish_rest.input.dispatcher'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setRepository($this->get('ezpublish.signalslot.repository'));
        return $instance;
    }
    protected function getEzpublishRest_Controller_UrlAliasService()
    {
        $this->services['ezpublish_rest.controller.url_alias'] = $instance = new \eZ\Publish\Core\REST\Server\Controller\URLAlias($this->get('ezpublish.api.service.url_alias'), $this->get('ezpublish.api.service.location'));
        $instance->setContainer($this);
        $instance->setInputDispatcher($this->get('ezpublish_rest.input.dispatcher'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setRepository($this->get('ezpublish.signalslot.repository'));
        return $instance;
    }
    protected function getEzpublishRest_Controller_UrlWildcardService()
    {
        $this->services['ezpublish_rest.controller.url_wildcard'] = $instance = new \eZ\Publish\Core\REST\Server\Controller\URLWildcard($this->get('ezpublish.api.service.url_wildcard'));
        $instance->setContainer($this);
        $instance->setInputDispatcher($this->get('ezpublish_rest.input.dispatcher'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setRepository($this->get('ezpublish.signalslot.repository'));
        return $instance;
    }
    protected function getEzpublishRest_Controller_UserService()
    {
        $a = $this->get('ezpublish.signalslot.repository');
        $this->services['ezpublish_rest.controller.user'] = $instance = new \eZ\Publish\Core\REST\Server\Controller\User($this->get('ezpublish.api.service.user'), $this->get('ezpublish.api.service.role'), $this->get('ezpublish.api.service.content'), $this->get('ezpublish.api.service.content_type'), $this->get('ezpublish.api.service.location'), $this->get('ezpublish.api.service.section'), $a);
        $instance->setContainer($this);
        $instance->setInputDispatcher($this->get('ezpublish_rest.input.dispatcher'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setRepository($a);
        return $instance;
    }
    protected function getEzpublishRest_CorsOptionProviderService()
    {
        return $this->services['ezpublish_rest.cors_option_provider'] = new \eZ\Bundle\EzPublishRestBundle\CorsOptions\RestProvider($this->get('router.default'));
    }
    protected function getEzpublishRest_CsrfListenerService()
    {
        return $this->services['ezpublish_rest.csrf_listener'] = new \eZ\Bundle\EzPublishRestBundle\EventListener\CsrfListener($this->get('event_dispatcher'), true, 'rest', $this->get('form.csrf_provider', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublishRest_FactoryService()
    {
        $this->services['ezpublish_rest.factory'] = $instance = new \eZ\Bundle\EzPublishRestBundle\ApiLoader\Factory($this->get('ezpublish.config.resolver.chain'), $this->get('ezpublish.signalslot.repository'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getEzpublishRest_FieldTypeParserService()
    {
        return $this->services['ezpublish_rest.field_type_parser'] = new \eZ\Publish\Core\REST\Common\Input\FieldTypeParser($this->get('ezpublish.api.service.content'), $this->get('ezpublish.api.service.content_type'), $this->get('ezpublish.api.service.field_type'), $this->get('ezpublish_rest.field_type_processor_registry'));
    }
    protected function getEzpublishRest_FieldTypeProcessor_EzbinaryfileService()
    {
        return $this->services['ezpublish_rest.field_type_processor.ezbinaryfile'] = $this->get('ezpublish_rest.factory')->getBinaryFileFieldTypeProcessor($this->get('ezpublish.core.io.prefix_url_decorator'));
    }
    protected function getEzpublishRest_FieldTypeProcessor_EzdateService()
    {
        return $this->services['ezpublish_rest.field_type_processor.ezdate'] = new \eZ\Publish\Core\REST\Common\FieldTypeProcessor\DateProcessor();
    }
    protected function getEzpublishRest_FieldTypeProcessor_EzdatetimeService()
    {
        return $this->services['ezpublish_rest.field_type_processor.ezdatetime'] = new \eZ\Publish\Core\REST\Common\FieldTypeProcessor\DateAndTimeProcessor();
    }
    protected function getEzpublishRest_FieldTypeProcessor_EzimageService()
    {
        return $this->services['ezpublish_rest.field_type_processor.ezimage'] = $this->get('ezpublish_rest.factory')->getImageFieldTypeProcessor($this->get('ezpublish.chain_router'));
    }
    protected function getEzpublishRest_FieldTypeProcessor_EzmediaService()
    {
        return $this->services['ezpublish_rest.field_type_processor.ezmedia'] = new \eZ\Publish\Core\REST\Common\FieldTypeProcessor\MediaProcessor();
    }
    protected function getEzpublishRest_FieldTypeProcessor_EzobjectrelationService()
    {
        return $this->services['ezpublish_rest.field_type_processor.ezobjectrelation'] = new \eZ\Publish\Core\REST\Common\FieldTypeProcessor\RelationProcessor();
    }
    protected function getEzpublishRest_FieldTypeProcessor_EzobjectrelationlistService()
    {
        return $this->services['ezpublish_rest.field_type_processor.ezobjectrelationlist'] = new \eZ\Publish\Core\REST\Common\FieldTypeProcessor\RelationListProcessor();
    }
    protected function getEzpublishRest_FieldTypeProcessor_EzpageService()
    {
        return $this->services['ezpublish_rest.field_type_processor.ezpage'] = new \eZ\Publish\Core\REST\Common\FieldTypeProcessor\PageProcessor();
    }
    protected function getEzpublishRest_FieldTypeProcessor_EzrichtextService()
    {
        return $this->services['ezpublish_rest.field_type_processor.ezrichtext'] = new \eZ\Publish\Core\REST\Common\FieldTypeProcessor\RichTextProcessor();
    }
    protected function getEzpublishRest_FieldTypeProcessor_EztimeService()
    {
        return $this->services['ezpublish_rest.field_type_processor.eztime'] = new \eZ\Publish\Core\REST\Common\FieldTypeProcessor\TimeProcessor();
    }
    protected function getEzpublishRest_FieldTypeProcessor_EzxmltextService()
    {
        return $this->services['ezpublish_rest.field_type_processor.ezxmltext'] = new \eZ\Publish\Core\REST\Common\FieldTypeProcessor\XmlTextProcessor();
    }
    protected function getEzpublishRest_FieldTypeProcessorRegistryService()
    {
        $this->services['ezpublish_rest.field_type_processor_registry'] = $instance = new \eZ\Publish\Core\REST\Common\FieldTypeProcessorRegistry();
        $instance->registerProcessor('ezimage', $this->get('ezpublish_rest.field_type_processor.ezimage'));
        $instance->registerProcessor('ezdatetime', $this->get('ezpublish_rest.field_type_processor.ezdatetime'));
        $instance->registerProcessor('ezdate', $this->get('ezpublish_rest.field_type_processor.ezdate'));
        $instance->registerProcessor('ezmedia', $this->get('ezpublish_rest.field_type_processor.ezmedia'));
        $instance->registerProcessor('ezobjectrelationlist', $this->get('ezpublish_rest.field_type_processor.ezobjectrelationlist'));
        $instance->registerProcessor('ezobjectrelation', $this->get('ezpublish_rest.field_type_processor.ezobjectrelation'));
        $instance->registerProcessor('eztime', $this->get('ezpublish_rest.field_type_processor.eztime'));
        $instance->registerProcessor('ezrichtext', $this->get('ezpublish_rest.field_type_processor.ezrichtext'));
        $instance->registerProcessor('ezxmltext', $this->get('ezpublish_rest.field_type_processor.ezxmltext'));
        $instance->registerProcessor('ezbinaryfile', $this->get('ezpublish_rest.field_type_processor.ezbinaryfile'));
        $instance->registerProcessor('ezpage', $this->get('ezpublish_rest.field_type_processor.ezpage'));
        return $instance;
    }
    protected function getEzpublishRest_FieldTypeSerializerService()
    {
        return $this->services['ezpublish_rest.field_type_serializer'] = new \eZ\Publish\Core\REST\Common\Output\FieldTypeSerializer($this->get('ezpublish.api.service.field_type'), $this->get('ezpublish_rest.field_type_processor_registry'));
    }
    protected function getEzpublishRest_Input_DispatcherService()
    {
        $this->services['ezpublish_rest.input.dispatcher'] = $instance = new \eZ\Publish\Core\REST\Common\Input\Dispatcher($this->get('ezpublish_rest.input.parsing_dispatcher'), array(), $this->get('ezpublish_rest.request_parser'), $this->get('ezpublish_rest.parser_tools'), $this->get('ezpublish_rest.field_type_parser'));
        $instance->addHandler('json', $this->get('ezpublish_rest.input.handler.json'));
        $instance->addHandler('xml', $this->get('ezpublish_rest.input.handler.xml'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Handler_JsonService()
    {
        return $this->services['ezpublish_rest.input.handler.json'] = new \eZ\Publish\Core\REST\Common\Input\Handler\Json();
    }
    protected function getEzpublishRest_Input_Handler_XmlService()
    {
        return $this->services['ezpublish_rest.input.handler.xml'] = new \eZ\Publish\Core\REST\Common\Input\Handler\Xml();
    }
    protected function getEzpublishRest_Input_Parser_ContentService()
    {
        $this->services['ezpublish_rest.input.parser.content'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\Content($this->get('ezpublish_rest.parser_tools'), $this->get('ezpublish.api.service.content'), $this->get('ezpublish_rest.input.parser.versioninfo'), $this->get('ezpublish_rest.field_type_parser'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ContentcreateService()
    {
        $this->services['ezpublish_rest.input.parser.contentcreate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\ContentCreate($this->get('ezpublish.api.service.content'), $this->get('ezpublish.api.service.content_type'), $this->get('ezpublish_rest.field_type_parser'), $this->get('ezpublish_rest.input.parser.locationcreate'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ContentinfoService()
    {
        $this->services['ezpublish_rest.input.parser.contentinfo'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\ContentInfo($this->get('ezpublish_rest.parser_tools'), $this->get('ezpublish.api.service.content_type'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ContentlistService()
    {
        $this->services['ezpublish_rest.input.parser.contentlist'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\ContentList($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ContentobjectstatesService()
    {
        $this->services['ezpublish_rest.input.parser.contentobjectstates'] = $instance = new \eZ\Publish\Core\REST\Common\Input\Parser\ContentObjectStates();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ContenttypeService()
    {
        $this->services['ezpublish_rest.input.parser.contenttype'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\ContentType($this->get('ezpublish_rest.parser_tools'), $this->get('ezpublish.api.service.content_type'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ContenttypecreateService()
    {
        $this->services['ezpublish_rest.input.parser.contenttypecreate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\ContentTypeCreate($this->get('ezpublish.api.service.content_type'), $this->get('ezpublish_rest.input.parser.fielddefinitioncreate'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ContenttypegroupService()
    {
        $this->services['ezpublish_rest.input.parser.contenttypegroup'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\ContentTypeGroup($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ContenttypegroupinputService()
    {
        $this->services['ezpublish_rest.input.parser.contenttypegroupinput'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\ContentTypeGroupInput($this->get('ezpublish.api.service.content_type'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ContenttypegrouplistService()
    {
        $this->services['ezpublish_rest.input.parser.contenttypegrouplist'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\ContentTypeGroupList($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ContenttypegroupreflistService()
    {
        $this->services['ezpublish_rest.input.parser.contenttypegroupreflist'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\ContentTypeGroupRefList($this->get('ezpublish_rest.parser_tools'), $this->get('ezpublish.api.service.content_type'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ContenttypelistService()
    {
        $this->services['ezpublish_rest.input.parser.contenttypelist'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\ContentTypeList($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ContenttypeupdateService()
    {
        $this->services['ezpublish_rest.input.parser.contenttypeupdate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\ContentTypeUpdate($this->get('ezpublish.api.service.content_type'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ContentupdateService()
    {
        $this->services['ezpublish_rest.input.parser.contentupdate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\ContentUpdate();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ErrormessageService()
    {
        $this->services['ezpublish_rest.input.parser.errormessage'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\ErrorMessage($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_FielddefinitionService()
    {
        $this->services['ezpublish_rest.input.parser.fielddefinition'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\FieldDefinition($this->get('ezpublish_rest.parser_tools'), $this->get('ezpublish_rest.field_type_parser'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_FielddefinitioncreateService()
    {
        $this->services['ezpublish_rest.input.parser.fielddefinitioncreate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\FieldDefinitionCreate($this->get('ezpublish.api.service.content_type'), $this->get('ezpublish_rest.field_type_parser'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_FielddefinitionlistService()
    {
        $this->services['ezpublish_rest.input.parser.fielddefinitionlist'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\FieldDefinitionList($this->get('ezpublish_rest.parser_tools'), $this->get('ezpublish.api.service.content_type'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_FielddefinitionupdateService()
    {
        $this->services['ezpublish_rest.input.parser.fielddefinitionupdate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\FieldDefinitionUpdate($this->get('ezpublish.api.service.content_type'), $this->get('ezpublish_rest.field_type_parser'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Cgriterion_FieldService()
    {
        $this->services['ezpublish_rest.input.parser.internal.cgriterion.field'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\Field();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_ContentidService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.contentid'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\ContentId();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_ContentremoteidService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.contentremoteid'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\ContentRemoteId();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_ContenttypegroupidService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.contenttypegroupid'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\ContentTypeGroupId();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_ContenttypeidService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.contenttypeid'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\ContentTypeId();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_ContenttypeidentifierService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.contenttypeidentifier'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\ContentTypeIdentifier($this->get('ezpublish.api.service.content_type'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_DatemetadataService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.datemetadata'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\DateMetadata();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_FulltextService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.fulltext'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\FullText();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_LanguagecodeService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.languagecode'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\LanguageCode();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_LocationidService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.locationid'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\LocationId();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_LocationremoteidService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.locationremoteid'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\LocationRemoteId();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_LogicalandService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.logicaland'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\LogicalAnd();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_LogicalnotService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.logicalnot'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\LogicalNot();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_LogicaloperatorService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.logicaloperator'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\LogicalOperator();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_LogicalorService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.logicalor'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\LogicalOr();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_MorelikethisService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.morelikethis'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\MoreLikeThis();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_ObjectstateidService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.objectstateid'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\ObjectStateId();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_OperatorService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.operator'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\Operator();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_ParentlocationidService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.parentlocationid'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\ParentLocationId();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_ParentlocationremoteidService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.parentlocationremoteid'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\ParentLocationRemoteId($this->get('ezpublish.api.service.location'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_SectionidService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.sectionid'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\SectionId();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_SectionidentifierService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.sectionidentifier'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\SectionIdentifier($this->get('ezpublish.api.service.section'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_SubtreeService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.subtree'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\Subtree();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_UsermetadataService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.usermetadata'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\UserMetadata();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_Internal_Criterion_VisibilityService()
    {
        $this->services['ezpublish_rest.input.parser.internal.criterion.visibility'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\Criterion\Visibility();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_LimitationService()
    {
        $this->services['ezpublish_rest.input.parser.limitation'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\Limitation($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_LocationService()
    {
        $this->services['ezpublish_rest.input.parser.location'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\Location($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_LocationcreateService()
    {
        $this->services['ezpublish_rest.input.parser.locationcreate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\LocationCreate($this->get('ezpublish.api.service.location'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_LocationupdateService()
    {
        $this->services['ezpublish_rest.input.parser.locationupdate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\LocationUpdate($this->get('ezpublish.api.service.location'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ObjectstateService()
    {
        $this->services['ezpublish_rest.input.parser.objectstate'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\ObjectState($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ObjectstatecreateService()
    {
        $this->services['ezpublish_rest.input.parser.objectstatecreate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\ObjectStateCreate($this->get('ezpublish.api.service.object_state'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ObjectstategroupService()
    {
        $this->services['ezpublish_rest.input.parser.objectstategroup'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\ObjectStateGroup($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ObjectstategroupcreateService()
    {
        $this->services['ezpublish_rest.input.parser.objectstategroupcreate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\ObjectStateGroupCreate($this->get('ezpublish.api.service.object_state'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ObjectstategrouplistService()
    {
        $this->services['ezpublish_rest.input.parser.objectstategrouplist'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\ObjectStateGroupList($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ObjectstategroupupdateService()
    {
        $this->services['ezpublish_rest.input.parser.objectstategroupupdate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\ObjectStateGroupUpdate($this->get('ezpublish.api.service.object_state'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ObjectstatelistService()
    {
        $this->services['ezpublish_rest.input.parser.objectstatelist'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\ObjectStateList($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ObjectstateupdateService()
    {
        $this->services['ezpublish_rest.input.parser.objectstateupdate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\ObjectStateUpdate($this->get('ezpublish.api.service.object_state'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_PolicyService()
    {
        $this->services['ezpublish_rest.input.parser.policy'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\Policy($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_PolicycreateService()
    {
        $this->services['ezpublish_rest.input.parser.policycreate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\PolicyCreate($this->get('ezpublish.api.service.role'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_PolicylistService()
    {
        $this->services['ezpublish_rest.input.parser.policylist'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\PolicyList($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_PolicyupdateService()
    {
        $this->services['ezpublish_rest.input.parser.policyupdate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\PolicyUpdate($this->get('ezpublish.api.service.role'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_RelationService()
    {
        $this->services['ezpublish_rest.input.parser.relation'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\Relation($this->get('ezpublish.api.service.content'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_RelationcreateService()
    {
        $this->services['ezpublish_rest.input.parser.relationcreate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\RelationCreate();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_RelationlistService()
    {
        $this->services['ezpublish_rest.input.parser.relationlist'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\RelationList($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_RoleService()
    {
        $this->services['ezpublish_rest.input.parser.role'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\Role($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_RoleassigninputService()
    {
        $this->services['ezpublish_rest.input.parser.roleassigninput'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\RoleAssignInput($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_RoleassignmentService()
    {
        $this->services['ezpublish_rest.input.parser.roleassignment'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\RoleAssignment($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_RoleassignmentlistService()
    {
        $this->services['ezpublish_rest.input.parser.roleassignmentlist'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\RoleAssignmentList($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_RoleinputService()
    {
        $this->services['ezpublish_rest.input.parser.roleinput'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\RoleInput($this->get('ezpublish.api.service.role'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_RolelistService()
    {
        $this->services['ezpublish_rest.input.parser.rolelist'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\RoleList($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_SectionService()
    {
        $this->services['ezpublish_rest.input.parser.section'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\Section($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_SectioninputService()
    {
        $this->services['ezpublish_rest.input.parser.sectioninput'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\SectionInput($this->get('ezpublish.api.service.section'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_SectionlistService()
    {
        $this->services['ezpublish_rest.input.parser.sectionlist'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\SectionList($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_SessioninputService()
    {
        $this->services['ezpublish_rest.input.parser.sessioninput'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\SessionInput($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_UrlaliascreateService()
    {
        $this->services['ezpublish_rest.input.parser.urlaliascreate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\URLAliasCreate($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_UrlwildcardcreateService()
    {
        $this->services['ezpublish_rest.input.parser.urlwildcardcreate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\URLWildcardCreate($this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_UsercreateService()
    {
        $this->services['ezpublish_rest.input.parser.usercreate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\UserCreate($this->get('ezpublish.api.service.user'), $this->get('ezpublish.api.service.content_type'), $this->get('ezpublish_rest.field_type_parser'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_UsergroupcreateService()
    {
        $this->services['ezpublish_rest.input.parser.usergroupcreate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\UserGroupCreate($this->get('ezpublish.api.service.user'), $this->get('ezpublish.api.service.content_type'), $this->get('ezpublish_rest.field_type_parser'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_UsergroupupdateService()
    {
        $this->services['ezpublish_rest.input.parser.usergroupupdate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\UserGroupUpdate($this->get('ezpublish.api.service.user'), $this->get('ezpublish.api.service.content'), $this->get('ezpublish.api.service.location'), $this->get('ezpublish_rest.field_type_parser'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_UserupdateService()
    {
        $this->services['ezpublish_rest.input.parser.userupdate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\UserUpdate($this->get('ezpublish.api.service.user'), $this->get('ezpublish.api.service.content'), $this->get('ezpublish_rest.field_type_parser'), $this->get('ezpublish_rest.parser_tools'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_VersioninfoService()
    {
        $this->services['ezpublish_rest.input.parser.versioninfo'] = $instance = new \eZ\Publish\Core\REST\Client\Input\Parser\VersionInfo($this->get('ezpublish_rest.parser_tools'), $this->get('ezpublish.api.service.content'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_VersionupdateService()
    {
        $this->services['ezpublish_rest.input.parser.versionupdate'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\VersionUpdate($this->get('ezpublish.api.service.content'), $this->get('ezpublish_rest.field_type_parser'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_Parser_ViewinputService()
    {
        $this->services['ezpublish_rest.input.parser.viewinput'] = $instance = new \eZ\Publish\Core\REST\Server\Input\Parser\ViewInput();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        return $instance;
    }
    protected function getEzpublishRest_Input_ParsingDispatcherService()
    {
        $this->services['ezpublish_rest.input.parsing_dispatcher'] = $instance = new \eZ\Publish\Core\REST\Common\Input\ParsingDispatcher();
        $instance->addParser('application/vnd.ez.api.ContentObjectStates', $this->get('ezpublish_rest.input.parser.contentobjectstates'));
        $instance->addParser('application/vnd.ez.api.ContentCreate', $this->get('ezpublish_rest.input.parser.contentcreate'));
        $instance->addParser('application/vnd.ez.api.ContentUpdate', $this->get('ezpublish_rest.input.parser.contentupdate'));
        $instance->addParser('application/vnd.ez.api.ContentTypeCreate', $this->get('ezpublish_rest.input.parser.contenttypecreate'));
        $instance->addParser('application/vnd.ez.api.ContentTypeGroupInput', $this->get('ezpublish_rest.input.parser.contenttypegroupinput'));
        $instance->addParser('application/vnd.ez.api.ContentTypeUpdate', $this->get('ezpublish_rest.input.parser.contenttypeupdate'));
        $instance->addParser('application/vnd.ez.api.FieldDefinitionCreate', $this->get('ezpublish_rest.input.parser.fielddefinitioncreate'));
        $instance->addParser('application/vnd.ez.api.FieldDefinitionUpdate', $this->get('ezpublish_rest.input.parser.fielddefinitionupdate'));
        $instance->addParser('application/vnd.ez.api.LocationCreate', $this->get('ezpublish_rest.input.parser.locationcreate'));
        $instance->addParser('application/vnd.ez.api.LocationUpdate', $this->get('ezpublish_rest.input.parser.locationupdate'));
        $instance->addParser('application/vnd.ez.api.ObjectStateGroupCreate', $this->get('ezpublish_rest.input.parser.objectstategroupcreate'));
        $instance->addParser('application/vnd.ez.api.ObjectStateGroupUpdate', $this->get('ezpublish_rest.input.parser.objectstategroupupdate'));
        $instance->addParser('application/vnd.ez.api.ObjectStateCreate', $this->get('ezpublish_rest.input.parser.objectstatecreate'));
        $instance->addParser('application/vnd.ez.api.ObjectStateUpdate', $this->get('ezpublish_rest.input.parser.objectstateupdate'));
        $instance->addParser('application/vnd.ez.api.PolicyCreate', $this->get('ezpublish_rest.input.parser.policycreate'));
        $instance->addParser('application/vnd.ez.api.PolicyUpdate', $this->get('ezpublish_rest.input.parser.policyupdate'));
        $instance->addParser('application/vnd.ez.api.RelationCreate', $this->get('ezpublish_rest.input.parser.relationcreate'));
        $instance->addParser('application/vnd.ez.api.RoleAssignInput', $this->get('ezpublish_rest.input.parser.roleassigninput'));
        $instance->addParser('application/vnd.ez.api.RoleInput', $this->get('ezpublish_rest.input.parser.roleinput'));
        $instance->addParser('application/vnd.ez.api.SectionInput', $this->get('ezpublish_rest.input.parser.sectioninput'));
        $instance->addParser('application/vnd.ez.api.SessionInput', $this->get('ezpublish_rest.input.parser.sessioninput'));
        $instance->addParser('application/vnd.ez.api.UserGroupUpdate', $this->get('ezpublish_rest.input.parser.usergroupupdate'));
        $instance->addParser('application/vnd.ez.api.UrlAliasCreate', $this->get('ezpublish_rest.input.parser.urlaliascreate'));
        $instance->addParser('application/vnd.ez.api.UrlWildcardCreate', $this->get('ezpublish_rest.input.parser.urlwildcardcreate'));
        $instance->addParser('application/vnd.ez.api.UserCreate', $this->get('ezpublish_rest.input.parser.usercreate'));
        $instance->addParser('application/vnd.ez.api.UserGroupCreate', $this->get('ezpublish_rest.input.parser.usergroupcreate'));
        $instance->addParser('application/vnd.ez.api.UserUpdate', $this->get('ezpublish_rest.input.parser.userupdate'));
        $instance->addParser('application/vnd.ez.api.ViewInput', $this->get('ezpublish_rest.input.parser.viewinput'));
        $instance->addParser('application/vnd.ez.api.VersionUpdate', $this->get('ezpublish_rest.input.parser.versionupdate'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.ContentId', $this->get('ezpublish_rest.input.parser.internal.criterion.contentid'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.ContentRemoteId', $this->get('ezpublish_rest.input.parser.internal.criterion.contentremoteid'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.ContentTypeGroupId', $this->get('ezpublish_rest.input.parser.internal.criterion.contenttypegroupid'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.ContentTypeId', $this->get('ezpublish_rest.input.parser.internal.criterion.contenttypeid'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.ContentTypeIdentifier', $this->get('ezpublish_rest.input.parser.internal.criterion.contenttypeidentifier'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.DateMetadata', $this->get('ezpublish_rest.input.parser.internal.criterion.datemetadata'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.Field', $this->get('ezpublish_rest.input.parser.internal.cgriterion.field'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.FullText', $this->get('ezpublish_rest.input.parser.internal.criterion.fulltext'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.LanguageCode', $this->get('ezpublish_rest.input.parser.internal.criterion.languagecode'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.LocationId', $this->get('ezpublish_rest.input.parser.internal.criterion.locationid'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.LocationRemoteId', $this->get('ezpublish_rest.input.parser.internal.criterion.locationremoteid'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.LogicalAnd', $this->get('ezpublish_rest.input.parser.internal.criterion.logicaland'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.LogicalNot', $this->get('ezpublish_rest.input.parser.internal.criterion.logicalnot'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.LogicalOperator', $this->get('ezpublish_rest.input.parser.internal.criterion.logicaloperator'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.LogicalOr', $this->get('ezpublish_rest.input.parser.internal.criterion.logicalor'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.MoreLikeThis', $this->get('ezpublish_rest.input.parser.internal.criterion.morelikethis'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.Operator', $this->get('ezpublish_rest.input.parser.internal.criterion.operator'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.ParentLocationId', $this->get('ezpublish_rest.input.parser.internal.criterion.parentlocationid'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.ParentLocationRemoteId', $this->get('ezpublish_rest.input.parser.internal.criterion.parentlocationremoteid'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.SectionIdentifier', $this->get('ezpublish_rest.input.parser.internal.criterion.sectionidentifier'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.SectionId', $this->get('ezpublish_rest.input.parser.internal.criterion.sectionid'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.Subtree', $this->get('ezpublish_rest.input.parser.internal.criterion.subtree'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.UserMetadata', $this->get('ezpublish_rest.input.parser.internal.criterion.usermetadata'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.ObjectStateId', $this->get('ezpublish_rest.input.parser.internal.criterion.objectstateid'));
        $instance->addParser('application/vnd.ez.api.internal.criterion.Visibility', $this->get('ezpublish_rest.input.parser.internal.criterion.visibility'));
        $instance->addParser('application/vnd.ez.api.Content', $this->get('ezpublish_rest.input.parser.content'));
        $instance->addParser('application/vnd.ez.api.ContentInfo', $this->get('ezpublish_rest.input.parser.contentinfo'));
        $instance->addParser('application/vnd.ez.api.ContentList', $this->get('ezpublish_rest.input.parser.contentlist'));
        $instance->addParser('application/vnd.ez.api.ContentType', $this->get('ezpublish_rest.input.parser.contenttype'));
        $instance->addParser('application/vnd.ez.api.ContentTypeList', $this->get('ezpublish_rest.input.parser.contenttypelist'));
        $instance->addParser('application/vnd.ez.api.ContentTypeGroup', $this->get('ezpublish_rest.input.parser.contenttypegroup'));
        $instance->addParser('application/vnd.ez.api.ContentTypeGroupList', $this->get('ezpublish_rest.input.parser.contenttypegrouplist'));
        $instance->addParser('application/vnd.ez.api.ContentTypeGroupRefList', $this->get('ezpublish_rest.input.parser.contenttypegroupreflist'));
        $instance->addParser('application/vnd.ez.api.ErrorMessage', $this->get('ezpublish_rest.input.parser.errormessage'));
        $instance->addParser('application/vnd.ez.api.FieldDefinition', $this->get('ezpublish_rest.input.parser.fielddefinition'));
        $instance->addParser('application/vnd.ez.api.FieldDefinitionList', $this->get('ezpublish_rest.input.parser.fielddefinitionlist'));
        $instance->addParser('application/vnd.ez.api.Limitation', $this->get('ezpublish_rest.input.parser.limitation'));
        $instance->addParser('application/vnd.ez.api.Location', $this->get('ezpublish_rest.input.parser.location'));
        $instance->addParser('application/vnd.ez.api.ObjectState', $this->get('ezpublish_rest.input.parser.objectstate'));
        $instance->addParser('application/vnd.ez.api.ObjectStateList', $this->get('ezpublish_rest.input.parser.objectstatelist'));
        $instance->addParser('application/vnd.ez.api.ObjectStateGroup', $this->get('ezpublish_rest.input.parser.objectstategroup'));
        $instance->addParser('application/vnd.ez.api.ObjectStateGroupList', $this->get('ezpublish_rest.input.parser.objectstategrouplist'));
        $instance->addParser('application/vnd.ez.api.Policy', $this->get('ezpublish_rest.input.parser.policy'));
        $instance->addParser('application/vnd.ez.api.PolicyList', $this->get('ezpublish_rest.input.parser.policylist'));
        $instance->addParser('application/vnd.ez.api.Relation', $this->get('ezpublish_rest.input.parser.relation'));
        $instance->addParser('application/vnd.ez.api.RelationList', $this->get('ezpublish_rest.input.parser.relationlist'));
        $instance->addParser('application/vnd.ez.api.Role', $this->get('ezpublish_rest.input.parser.role'));
        $instance->addParser('application/vnd.ez.api.RoleAssignment', $this->get('ezpublish_rest.input.parser.roleassignment'));
        $instance->addParser('application/vnd.ez.api.RoleAssignmentList', $this->get('ezpublish_rest.input.parser.roleassignmentlist'));
        $instance->addParser('application/vnd.ez.api.RoleList', $this->get('ezpublish_rest.input.parser.rolelist'));
        $instance->addParser('application/vnd.ez.api.Section', $this->get('ezpublish_rest.input.parser.section'));
        $instance->addParser('application/vnd.ez.api.SectionList', $this->get('ezpublish_rest.input.parser.sectionlist'));
        $instance->addParser('application/vnd.ez.api.VersionInfo', $this->get('ezpublish_rest.input.parser.versioninfo'));
        return $instance;
    }
    protected function getEzpublishRest_Output_Generator_JsonService()
    {
        $this->services['ezpublish_rest.output.generator.json'] = $instance = new \eZ\Publish\Core\REST\Common\Output\Generator\Json($this->get('ezpublish_rest.output.generator.json.field_type_hash_generator'));
        $instance->setFormatOutput(false);
        return $instance;
    }
    protected function getEzpublishRest_Output_Generator_Json_FieldTypeHashGeneratorService()
    {
        return $this->services['ezpublish_rest.output.generator.json.field_type_hash_generator'] = new \eZ\Publish\Core\REST\Common\Output\Generator\Json\FieldTypeHashGenerator();
    }
    protected function getEzpublishRest_Output_Generator_XmlService()
    {
        $this->services['ezpublish_rest.output.generator.xml'] = $instance = new \eZ\Publish\Core\REST\Common\Output\Generator\Xml($this->get('ezpublish_rest.output.generator.xml.field_type_hash_generator'));
        $instance->setFormatOutput(false);
        return $instance;
    }
    protected function getEzpublishRest_Output_Generator_Xml_FieldTypeHashGeneratorService()
    {
        return $this->services['ezpublish_rest.output.generator.xml.field_type_hash_generator'] = new \eZ\Publish\Core\REST\Common\Output\Generator\Xml\FieldTypeHashGenerator();
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_BadrequestexceptionService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.badrequestexception'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\BadRequestException(true);
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_BadstateexceptionService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.badstateexception'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\BadStateException(true);
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_BaseService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.base'] = $instance = new \eZ\Publish\Core\REST\Common\Output\ValueObjectVisitor();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CachedValueService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.cached_value'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CachedValue($this->get('ezpublish.config.resolver.chain'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        if ($this->has('request')) {
            $instance->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ConflictService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.conflict'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\Conflict(true);
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ContentlistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.contentlist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\ContentList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ContentobjectstatesService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.contentobjectstates'] = $instance = new \eZ\Publish\Core\REST\Common\Output\ValueObjectVisitor\ContentObjectStates();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ContenttypecreatestructService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.contenttypecreatestruct'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\ContentTypeCreateStruct();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ContenttypegroupService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.contenttypegroup'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\ContentTypeGroup();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ContenttypegroupcreatestructService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.contenttypegroupcreatestruct'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\ContentTypeGroupCreateStruct();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ContenttypegrouplistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.contenttypegrouplist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\ContentTypeGroupList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ContenttypegroupreflistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.contenttypegroupreflist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\ContentTypeGroupRefList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ContenttypegroupupdatestructService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.contenttypegroupupdatestruct'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\ContentTypeGroupUpdateStruct();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ContenttypeinfolistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.contenttypeinfolist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\ContentTypeInfoList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ContenttypelistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.contenttypelist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\ContentTypeList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CountrylistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.countrylist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CountryList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CreatedcontentService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.createdcontent'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CreatedContent();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CreatedcontenttypeService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.createdcontenttype'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CreatedContentType();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CreatedcontenttypegroupService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.createdcontenttypegroup'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CreatedContentTypeGroup();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CreatedfielddefinitionService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.createdfielddefinition'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CreatedFieldDefinition($this->get('ezpublish_rest.field_type_serializer'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CreatedlocationService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.createdlocation'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CreatedLocation();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CreatedobjectstateService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.createdobjectstate'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CreatedObjectState();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CreatedobjectstategroupService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.createdobjectstategroup'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CreatedObjectStateGroup();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CreatedpolicyService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.createdpolicy'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CreatedPolicy();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CreatedrelationService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.createdrelation'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CreatedRelation();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CreatedroleService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.createdrole'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CreatedRole();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CreatedsectionService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.createdsection'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CreatedSection();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CreatedurlaliasService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.createdurlalias'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CreatedURLAlias();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CreatedurlwildcardService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.createdurlwildcard'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CreatedURLWildcard();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CreateduserService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.createduser'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CreatedUser();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CreatedusergroupService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.createdusergroup'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CreatedUserGroup();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_CreatedversionService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.createdversion'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\CreatedVersion($this->get('ezpublish_rest.field_type_serializer'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_DispatcherService()
    {
        $a = $this->get('ezpublish_rest.output.value_object_visitor.badrequestexception');
        $this->services['ezpublish_rest.output.value_object_visitor.dispatcher'] = $instance = new \eZ\Publish\Core\REST\Common\Output\ValueObjectVisitorDispatcher();
        $instance->addVisitor('\\eZ\\Publish\\API\\Repository\\Exceptions\\InvalidArgumentException', $this->get('ezpublish_rest.output.value_object_visitor.exception.invalidargumentexception'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Exceptions\\InvalidArgumentException', $this->get('ezpublish_rest.output.value_object_visitor.invalidargumentexception'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Exceptions\\NotFoundException', $this->get('ezpublish_rest.output.value_object_visitor.notfoundexception'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Exceptions\\UnauthorizedException', $this->get('ezpublish_rest.output.value_object_visitor.unauthorizedexception'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Exceptions\\BadStateException', $this->get('ezpublish_rest.output.value_object_visitor.badstateexception'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Exceptions\\BadRequestException', $a);
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Common\\Exceptions\\Parser', $a);
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Exceptions\\ForbiddenException', $this->get('ezpublish_rest.output.value_object_visitor.forbiddenexception'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Exceptions\\NotImplementedException', $this->get('ezpublish_rest.output.value_object_visitor.notimplementedexception'));
        $instance->addVisitor('Exception', $this->get('ezpublish_rest.output.value_object_visitor.exception'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\SectionList', $this->get('ezpublish_rest.output.value_object_visitor.sectionlist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CreatedSection', $this->get('ezpublish_rest.output.value_object_visitor.createdsection'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\Content\\Section', $this->get('ezpublish_rest.output.value_object_visitor.section'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\Content\\SectionCreateStruct', $this->get('ezpublish_rest.output.value_object_visitor.sectioncreatestruct'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\Content\\SectionUpdateStruct', $this->get('ezpublish_rest.output.value_object_visitor.sectionupdatestruct'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\URLWildcardList', $this->get('ezpublish_rest.output.value_object_visitor.urlwildcardlist'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\Content\\URLWildcard', $this->get('ezpublish_rest.output.value_object_visitor.urlwildcard'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CreatedURLWildcard', $this->get('ezpublish_rest.output.value_object_visitor.createdurlwildcard'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\URLAliasList', $this->get('ezpublish_rest.output.value_object_visitor.urlaliaslist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\URLAliasRefList', $this->get('ezpublish_rest.output.value_object_visitor.urlaliasreflist'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\Content\\URLAlias', $this->get('ezpublish_rest.output.value_object_visitor.urlalias'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CreatedURLAlias', $this->get('ezpublish_rest.output.value_object_visitor.createdurlalias'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\ContentList', $this->get('ezpublish_rest.output.value_object_visitor.contentlist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\RestContent', $this->get('ezpublish_rest.output.value_object_visitor.restcontent'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CreatedContent', $this->get('ezpublish_rest.output.value_object_visitor.createdcontent'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\VersionList', $this->get('ezpublish_rest.output.value_object_visitor.versionlist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CreatedVersion', $this->get('ezpublish_rest.output.value_object_visitor.createdversion'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\Content\\VersionInfo', $this->get('ezpublish_rest.output.value_object_visitor.versioninfo'));
        $instance->addVisitor('eZ\\Publish\\SPI\\Variation\\Values\\ImageVariation', $this->get('ezpublish_rest.output.value_object_visitor.imagevariation'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\Version', $this->get('ezpublish_rest.output.value_object_visitor.version'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\RestUserGroup', $this->get('ezpublish_rest.output.value_object_visitor.restusergroup'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CreatedUserGroup', $this->get('ezpublish_rest.output.value_object_visitor.createdusergroup'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\UserGroupList', $this->get('ezpublish_rest.output.value_object_visitor.usergrouplist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\UserGroupRefList', $this->get('ezpublish_rest.output.value_object_visitor.usergroupreflist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\UserList', $this->get('ezpublish_rest.output.value_object_visitor.userlist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\UserRefList', $this->get('ezpublish_rest.output.value_object_visitor.userreflist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CreatedUser', $this->get('ezpublish_rest.output.value_object_visitor.createduser'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\RestUser', $this->get('ezpublish_rest.output.value_object_visitor.restuser'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\UserSession', $this->get('ezpublish_rest.output.value_object_visitor.usersession'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\DeletedUserSession', $this->get('ezpublish_rest.output.value_object_visitor.usersessiondeleted'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\RestContentType', $this->get('ezpublish_rest.output.value_object_visitor.restcontenttype'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CreatedContentType', $this->get('ezpublish_rest.output.value_object_visitor.createdcontenttype'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\ContentTypeList', $this->get('ezpublish_rest.output.value_object_visitor.contenttypelist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\ContentTypeInfoList', $this->get('ezpublish_rest.output.value_object_visitor.contenttypeinfolist'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\ContentType\\ContentTypeGroup', $this->get('ezpublish_rest.output.value_object_visitor.contenttypegroup'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CreatedContentTypeGroup', $this->get('ezpublish_rest.output.value_object_visitor.createdcontenttypegroup'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\ContentTypeGroupList', $this->get('ezpublish_rest.output.value_object_visitor.contenttypegrouplist'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\ContentType\\ContentTypeGroupCreateStruct', $this->get('ezpublish_rest.output.value_object_visitor.contenttypegroupcreatestruct'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\ContentTypeGroupRefList', $this->get('ezpublish_rest.output.value_object_visitor.contenttypegroupreflist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\FieldDefinitionList', $this->get('ezpublish_rest.output.value_object_visitor.fielddefinitionlist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CreatedFieldDefinition', $this->get('ezpublish_rest.output.value_object_visitor.createdfielddefinition'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\RestFieldDefinition', $this->get('ezpublish_rest.output.value_object_visitor.restfielddefinition'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\FieldDefinitionCreateStruct', $this->get('ezpublish_rest.output.value_object_visitor.fielddefinitioncreatestruct'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Client\\Values\\ContentType\\ContentTypeCreateStruct', $this->get('ezpublish_rest.output.value_object_visitor.contenttypecreatestruct'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\ContentType\\ContentTypeGroupUpdateStruct', $this->get('ezpublish_rest.output.value_object_visitor.contenttypegroupupdatestruct'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\RelationList', $this->get('ezpublish_rest.output.value_object_visitor.relationlist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\RestRelation', $this->get('ezpublish_rest.output.value_object_visitor.restrelation'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CreatedRelation', $this->get('ezpublish_rest.output.value_object_visitor.createdrelation'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\RoleList', $this->get('ezpublish_rest.output.value_object_visitor.rolelist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CreatedRole', $this->get('ezpublish_rest.output.value_object_visitor.createdrole'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\User\\Role', $this->get('ezpublish_rest.output.value_object_visitor.role'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\User\\Policy', $this->get('ezpublish_rest.output.value_object_visitor.policy'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CreatedPolicy', $this->get('ezpublish_rest.output.value_object_visitor.createdpolicy'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\PolicyList', $this->get('ezpublish_rest.output.value_object_visitor.policylist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\RoleAssignmentList', $this->get('ezpublish_rest.output.value_object_visitor.roleassignmentlist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\RestUserRoleAssignment', $this->get('ezpublish_rest.output.value_object_visitor.restuserroleassignment'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\RestUserGroupRoleAssignment', $this->get('ezpublish_rest.output.value_object_visitor.restusergrouproleassignment'));
        $instance->addVisitor('eZ\\Publish\\REST\\Client\\Values\\User\\RoleCreateStruct', $this->get('ezpublish_rest.output.value_object_visitor.rolecreatestruct'));
        $instance->addVisitor('eZ\\Publish\\REST\\Client\\Values\\User\\RoleUpdateStruct', $this->get('ezpublish_rest.output.value_object_visitor.roleupdatestruct'));
        $instance->addVisitor('eZ\\Publish\\REST\\Client\\Values\\User\\RoleAssignment', $this->get('ezpublish_rest.output.value_object_visitor.roleassignment'));
        $instance->addVisitor('eZ\\Publish\\REST\\Client\\Values\\User\\PolicyCreateStruct', $this->get('ezpublish_rest.output.value_object_visitor.policycreatestruct'));
        $instance->addVisitor('eZ\\Publish\\REST\\Client\\Values\\User\\PolicyUpdateStruct', $this->get('ezpublish_rest.output.value_object_visitor.policyupdatestruct'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\User\\Limitation', $this->get('ezpublish_rest.output.value_object_visitor.limitation'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CreatedLocation', $this->get('ezpublish_rest.output.value_object_visitor.createdlocation'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\RestLocation', $this->get('ezpublish_rest.output.value_object_visitor.restlocation'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\LocationList', $this->get('ezpublish_rest.output.value_object_visitor.locationlist'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\Content\\LocationCreateStruct', $this->get('ezpublish_rest.output.value_object_visitor.locationcreatestruct'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\Content\\LocationUpdateStruct', $this->get('ezpublish_rest.output.value_object_visitor.locationupdatestruct'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\Trash', $this->get('ezpublish_rest.output.value_object_visitor.trash'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\RestTrashItem', $this->get('ezpublish_rest.output.value_object_visitor.resttrashitem'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\RestExecutedView', $this->get('ezpublish_rest.output.value_object_visitor.restexecutedview'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\ObjectState\\ObjectStateGroup', $this->get('ezpublish_rest.output.value_object_visitor.objectstategroup'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CreatedObjectStateGroup', $this->get('ezpublish_rest.output.value_object_visitor.createdobjectstategroup'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\ObjectStateGroupList', $this->get('ezpublish_rest.output.value_object_visitor.objectstategrouplist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Common\\Values\\RestObjectState', $this->get('ezpublish_rest.output.value_object_visitor.restobjectstate'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CreatedObjectState', $this->get('ezpublish_rest.output.value_object_visitor.createdobjectstate'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\ObjectStateList', $this->get('ezpublish_rest.output.value_object_visitor.objectstatelist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Common\\Values\\ContentObjectStates', $this->get('ezpublish_rest.output.value_object_visitor.contentobjectstates'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\ObjectState\\ObjectStateCreateStruct', $this->get('ezpublish_rest.output.value_object_visitor.objectstatecreatestruct'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\ObjectState\\ObjectStateUpdateStruct', $this->get('ezpublish_rest.output.value_object_visitor.objectstateupdatestruct'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\ObjectState\\ObjectStateGroupCreateStruct', $this->get('ezpublish_rest.output.value_object_visitor.objectstategroupcreatestruct'));
        $instance->addVisitor('eZ\\Publish\\API\\Repository\\Values\\ObjectState\\ObjectStateGroupUpdataStruct', $this->get('ezpublish_rest.output.value_object_visitor.objectstategroupupdatastruct'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CountryList', $this->get('ezpublish_rest.output.value_object_visitor.countrylist'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\TemporaryRedirect', $this->get('ezpublish_rest.output.value_object_visitor.temporaryredirect'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\PermanentRedirect', $this->get('ezpublish_rest.output.value_object_visitor.permanentredirect'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\ResourceCreated', $this->get('ezpublish_rest.output.value_object_visitor.resourcecreated'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\NoContent', $this->get('ezpublish_rest.output.value_object_visitor.nocontent'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Common\\Values\\Root', $this->get('ezpublish_rest.output.value_object_visitor.root'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\SeeOther', $this->get('ezpublish_rest.output.value_object_visitor.seeother'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\Conflict', $this->get('ezpublish_rest.output.value_object_visitor.conflict'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\Options', $this->get('ezpublish_rest.output.value_object_visitor.options'));
        $instance->addVisitor('eZ\\Publish\\Core\\REST\\Server\\Values\\CachedValue', $this->get('ezpublish_rest.output.value_object_visitor.cached_value'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ExceptionService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.exception'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\Exception(true);
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_Exception_InvalidargumentexceptionService()
    {
        return $this->services['ezpublish_rest.output.value_object_visitor.exception.invalidargumentexception'] = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\InvalidArgumentException();
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_FielddefinitioncreatestructService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.fielddefinitioncreatestruct'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\FieldDefinitionCreateStruct($this->get('ezpublish_rest.field_type_serializer'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_FielddefinitionlistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.fielddefinitionlist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\FieldDefinitionList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ForbiddenexceptionService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.forbiddenexception'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\ForbiddenException(true);
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ImagevariationService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.imagevariation'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\ImageVariation();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_InvalidargumentexceptionService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.invalidargumentexception'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\InvalidArgumentException(true);
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_LimitationService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.limitation'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\Limitation();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_LocationcreatestructService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.locationcreatestruct'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\LocationCreateStruct();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_LocationlistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.locationlist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\LocationList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_LocationupdatestructService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.locationupdatestruct'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\LocationUpdateStruct();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_NocontentService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.nocontent'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\NoContent();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_NotfoundexceptionService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.notfoundexception'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\NotFoundException(true);
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_NotimplementedexceptionService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.notimplementedexception'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\NotImplementedException(true);
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ObjectstatecreatestructService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.objectstatecreatestruct'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\ObjectStateCreateStruct();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ObjectstategroupService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.objectstategroup'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\ObjectStateGroup();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ObjectstategroupcreatestructService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.objectstategroupcreatestruct'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\ObjectStateGroupCreateStruct();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ObjectstategrouplistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.objectstategrouplist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\ObjectStateGroupList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ObjectstategroupupdatastructService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.objectstategroupupdatastruct'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\ObjectStateGroupUpdateStruct();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ObjectstatelistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.objectstatelist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\ObjectStateList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ObjectstateupdatestructService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.objectstateupdatestruct'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\ObjectStateUpdateStruct();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_OptionsService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.options'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\Options(true);
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_PermanentredirectService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.permanentredirect'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\PermanentRedirect();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_PolicyService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.policy'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\Policy();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_PolicycreatestructService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.policycreatestruct'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\PolicyCreateStruct();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_PolicylistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.policylist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\PolicyList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_PolicyupdatestructService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.policyupdatestruct'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\PolicyUpdateStruct();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RelationlistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.relationlist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\RelationList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ResourcecreatedService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.resourcecreated'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\ResourceCreated();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RestcontentService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.restcontent'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\RestContent();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RestcontenttypeService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.restcontenttype'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\RestContentType();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RestexecutedviewService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.restexecutedview'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\RestExecutedView($this->get('ezpublish.api.service.location'), $this->get('ezpublish.api.service.content'), $this->get('ezpublish.api.service.content_type'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RestfielddefinitionService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.restfielddefinition'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\RestFieldDefinition($this->get('ezpublish_rest.field_type_serializer'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RestlocationService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.restlocation'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\RestLocation();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RestobjectstateService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.restobjectstate'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\RestObjectState();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RestrelationService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.restrelation'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\RestRelation();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_ResttrashitemService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.resttrashitem'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\RestTrashItem();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RestuserService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.restuser'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\RestUser();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RestusergroupService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.restusergroup'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\RestUserGroup();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RestusergrouproleassignmentService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.restusergrouproleassignment'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\RestUserGroupRoleAssignment();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RestuserroleassignmentService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.restuserroleassignment'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\RestUserRoleAssignment();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RoleService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.role'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\Role();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RoleassignmentService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.roleassignment'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\RoleAssignment();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RoleassignmentlistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.roleassignmentlist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\RoleAssignmentList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RolecreatestructService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.rolecreatestruct'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\RoleCreateStruct();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RolelistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.rolelist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\RoleList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RoleupdatestructService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.roleupdatestruct'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\RoleUpdateStruct();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_RootService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.root'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\Root();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_SectionService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.section'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\Section();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_SectioncreatestructService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.sectioncreatestruct'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\SectionCreateStruct();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_SectionlistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.sectionlist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\SectionList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_SectionupdatestructService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.sectionupdatestruct'] = $instance = new \eZ\Publish\Core\REST\Client\Output\ValueObjectVisitor\SectionUpdateStruct();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_SeeotherService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.seeother'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\SeeOther();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_TemporaryredirectService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.temporaryredirect'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\TemporaryRedirect();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_TrashService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.trash'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\Trash();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_UnauthorizedexceptionService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.unauthorizedexception'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\UnauthorizedException(true);
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_UrlaliasService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.urlalias'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\URLAlias();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_UrlaliaslistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.urlaliaslist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\URLAliasList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_UrlaliasreflistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.urlaliasreflist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\URLAliasRefList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_UrlwildcardService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.urlwildcard'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\URLWildcard();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_UrlwildcardlistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.urlwildcardlist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\URLWildcardList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_UsergrouplistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.usergrouplist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\UserGroupList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_UsergroupreflistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.usergroupreflist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\UserGroupRefList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_UserlistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.userlist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\UserList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_UserreflistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.userreflist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\UserRefList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_UsersessionService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.usersession'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\UserSession();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_UsersessiondeletedService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.usersessiondeleted'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\DeletedUserSession();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_VersionService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.version'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\Version($this->get('ezpublish_rest.field_type_serializer'));
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_VersioninfoService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.versioninfo'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\VersionInfo();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_ValueObjectVisitor_VersionlistService()
    {
        $this->services['ezpublish_rest.output.value_object_visitor.versionlist'] = $instance = new \eZ\Publish\Core\REST\Server\Output\ValueObjectVisitor\VersionList();
        $instance->setRequestParser($this->get('ezpublish_rest.request_parser'));
        $instance->setRouter($this->get('ezpublish.chain_router'));
        $instance->setTemplateRouter($this->get('ezpublish_rest.templated_router'));
        return $instance;
    }
    protected function getEzpublishRest_Output_Visitor_DispatcherService()
    {
        $a = $this->get('ezpublish_rest.output.visitor.json');
        $b = $this->get('ezpublish_rest.output.visitor.xml');
        $this->services['ezpublish_rest.output.visitor.dispatcher'] = $instance = new \eZ\Publish\Core\REST\Server\View\AcceptHeaderVisitorDispatcher();
        $instance->addVisitor('(^application/vnd\\.ez\\.api\\.[A-Za-z]+\\+json$)', $a);
        $instance->addVisitor('(^application/json$)', $a);
        $instance->addVisitor('(^application/vnd\\.ez\\.api\\.[A-Za-z]+\\+xml$)', $b);
        $instance->addVisitor('(^application/xml$)', $b);
        $instance->addVisitor('(^.*/.*$)', $b);
        return $instance;
    }
    protected function getEzpublishRest_Output_Visitor_JsonService()
    {
        return $this->services['ezpublish_rest.output.visitor.json'] = new \eZ\Publish\Core\REST\Common\Output\Visitor($this->get('ezpublish_rest.output.generator.json'), $this->get('ezpublish_rest.output.value_object_visitor.dispatcher'));
    }
    protected function getEzpublishRest_Output_Visitor_XmlService()
    {
        return $this->services['ezpublish_rest.output.visitor.xml'] = new \eZ\Publish\Core\REST\Common\Output\Visitor($this->get('ezpublish_rest.output.generator.xml'), $this->get('ezpublish_rest.output.value_object_visitor.dispatcher'));
    }
    protected function getEzpublishRest_ParserToolsService()
    {
        return $this->services['ezpublish_rest.parser_tools'] = new \eZ\Publish\Core\REST\Common\Input\ParserTools();
    }
    protected function getEzpublishRest_RequestListenerService()
    {
        return $this->services['ezpublish_rest.request_listener'] = new \eZ\Bundle\EzPublishRestBundle\EventListener\RequestListener('/api/ezp/v2');
    }
    protected function getEzpublishRest_RequestParserService()
    {
        return $this->services['ezpublish_rest.request_parser'] = new \eZ\Bundle\EzPublishRestBundle\RequestParser\Router('/api/ezp/v2', $this->get('ezpublish.chain_router'));
    }
    protected function getEzpublishRest_ResponseListenerService()
    {
        return $this->services['ezpublish_rest.response_listener'] = new \eZ\Bundle\EzPublishRestBundle\EventListener\ResponseListener($this->get('ezpublish_rest.output.visitor.dispatcher'));
    }
    protected function getEzpublishRest_Routing_OptionsLoaderService()
    {
        return $this->services['ezpublish_rest.routing.options_loader'] = new \eZ\Bundle\EzPublishRestBundle\Routing\OptionsLoader($this->get('ezpublish_rest.routing.options_loader.route_collection_mapper'), $this->get('ezpublish_rest.templated_router'));
    }
    protected function getEzpublishRest_Routing_OptionsLoader_MapperService()
    {
        return $this->services['ezpublish_rest.routing.options_loader.mapper'] = new \eZ\Bundle\EzPublishRestBundle\Routing\OptionsLoader\Mapper();
    }
    protected function getEzpublishRest_Routing_OptionsLoader_RouteCollectionMapperService()
    {
        return $this->services['ezpublish_rest.routing.options_loader.route_collection_mapper'] = new \eZ\Bundle\EzPublishRestBundle\Routing\OptionsLoader\RouteCollectionMapper($this->get('ezpublish_rest.routing.options_loader.mapper'));
    }
    protected function getEzpublishRest_Security_Authentication_LogoutHandlerService()
    {
        return $this->services['ezpublish_rest.security.authentication.logout_handler'] = new \eZ\Publish\Core\REST\Server\Security\RestLogoutHandler();
    }
    protected function getEzpublishRest_TemplatedRouterService()
    {
        $this->services['ezpublish_rest.templated_router'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\Routing\DefaultRouter($this, '/var/www/ayaville/ezpublish/config/routing.yml', array('cache_dir' => '/var/www/ayaville/ezpublish/cache/prod', 'debug' => false, 'generator_class' => 'Hautelook\\TemplatedUriRouter\\Routing\\Generator\\Rfc6570Generator', 'generator_base_class' => 'Hautelook\\TemplatedUriRouter\\Routing\\Generator\\Rfc6570Generator', 'generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\PhpGeneratorDumper', 'generator_cache_class' => 'ezpublishprodRF6570UrlGenerator', 'matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_base_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\PhpMatcherDumper', 'matcher_cache_class' => 'ezpublishprodRFC6570UrlMatcher'), $this->get('router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('monolog.logger.router', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->setOption('strict_requirements', NULL);
        return $instance;
    }
    protected function getFileLocatorService()
    {
        return $this->services['file_locator'] = new \Symfony\Component\HttpKernel\Config\FileLocator($this->get('kernel'), '/var/www/ayaville/ezpublish/Resources');
    }
    protected function getFilesystemService()
    {
        return $this->services['filesystem'] = new \Symfony\Component\Filesystem\Filesystem();
    }
    protected function getForm_CsrfProviderService()
    {
        return $this->services['form.csrf_provider'] = new \Symfony\Component\Form\Extension\Csrf\CsrfProvider\CsrfTokenManagerAdapter($this->get('security.csrf.token_manager'));
    }
    protected function getForm_FactoryService()
    {
        return $this->services['form.factory'] = new \Symfony\Component\Form\FormFactory($this->get('form.registry'), $this->get('form.resolved_type_factory'));
    }
    protected function getForm_RegistryService()
    {
        return $this->services['form.registry'] = new \Symfony\Component\Form\FormRegistry(array(0 => new \Symfony\Component\Form\Extension\DependencyInjection\DependencyInjectionExtension($this, array('form' => 'form.type.form', 'birthday' => 'form.type.birthday', 'checkbox' => 'form.type.checkbox', 'choice' => 'form.type.choice', 'collection' => 'form.type.collection', 'country' => 'form.type.country', 'date' => 'form.type.date', 'datetime' => 'form.type.datetime', 'email' => 'form.type.email', 'file' => 'form.type.file', 'hidden' => 'form.type.hidden', 'integer' => 'form.type.integer', 'language' => 'form.type.language', 'locale' => 'form.type.locale', 'money' => 'form.type.money', 'number' => 'form.type.number', 'password' => 'form.type.password', 'percent' => 'form.type.percent', 'radio' => 'form.type.radio', 'repeated' => 'form.type.repeated', 'search' => 'form.type.search', 'textarea' => 'form.type.textarea', 'text' => 'form.type.text', 'time' => 'form.type.time', 'timezone' => 'form.type.timezone', 'url' => 'form.type.url', 'button' => 'form.type.button', 'submit' => 'form.type.submit', 'reset' => 'form.type.reset', 'currency' => 'form.type.currency', 'liip_imagine_image' => 'liip_imagine.form.type.image', 'ezdemo_feedback' => 'ezdemo.form.type.feedback', 'ezdemo_simple_search' => 'ezdemo.form.type.simple_search'), array('form' => array(0 => 'form.type_extension.form.http_foundation', 1 => 'form.type_extension.form.validator', 2 => 'form.type_extension.csrf'), 'repeated' => array(0 => 'form.type_extension.repeated.validator'), 'submit' => array(0 => 'form.type_extension.submit.validator')), array(0 => 'form.type_guesser.validator'))), $this->get('form.resolved_type_factory'));
    }
    protected function getForm_ResolvedTypeFactoryService()
    {
        return $this->services['form.resolved_type_factory'] = new \Symfony\Component\Form\ResolvedFormTypeFactory();
    }
    protected function getForm_Type_BirthdayService()
    {
        return $this->services['form.type.birthday'] = new \Symfony\Component\Form\Extension\Core\Type\BirthdayType();
    }
    protected function getForm_Type_ButtonService()
    {
        return $this->services['form.type.button'] = new \Symfony\Component\Form\Extension\Core\Type\ButtonType();
    }
    protected function getForm_Type_CheckboxService()
    {
        return $this->services['form.type.checkbox'] = new \Symfony\Component\Form\Extension\Core\Type\CheckboxType();
    }
    protected function getForm_Type_ChoiceService()
    {
        return $this->services['form.type.choice'] = new \Symfony\Component\Form\Extension\Core\Type\ChoiceType();
    }
    protected function getForm_Type_CollectionService()
    {
        return $this->services['form.type.collection'] = new \Symfony\Component\Form\Extension\Core\Type\CollectionType();
    }
    protected function getForm_Type_CountryService()
    {
        return $this->services['form.type.country'] = new \Symfony\Component\Form\Extension\Core\Type\CountryType();
    }
    protected function getForm_Type_CurrencyService()
    {
        return $this->services['form.type.currency'] = new \Symfony\Component\Form\Extension\Core\Type\CurrencyType();
    }
    protected function getForm_Type_DateService()
    {
        return $this->services['form.type.date'] = new \Symfony\Component\Form\Extension\Core\Type\DateType();
    }
    protected function getForm_Type_DatetimeService()
    {
        return $this->services['form.type.datetime'] = new \Symfony\Component\Form\Extension\Core\Type\DateTimeType();
    }
    protected function getForm_Type_EmailService()
    {
        return $this->services['form.type.email'] = new \Symfony\Component\Form\Extension\Core\Type\EmailType();
    }
    protected function getForm_Type_FileService()
    {
        return $this->services['form.type.file'] = new \Symfony\Component\Form\Extension\Core\Type\FileType();
    }
    protected function getForm_Type_FormService()
    {
        return $this->services['form.type.form'] = new \Symfony\Component\Form\Extension\Core\Type\FormType($this->get('property_accessor'));
    }
    protected function getForm_Type_HiddenService()
    {
        return $this->services['form.type.hidden'] = new \Symfony\Component\Form\Extension\Core\Type\HiddenType();
    }
    protected function getForm_Type_IntegerService()
    {
        return $this->services['form.type.integer'] = new \Symfony\Component\Form\Extension\Core\Type\IntegerType();
    }
    protected function getForm_Type_LanguageService()
    {
        return $this->services['form.type.language'] = new \Symfony\Component\Form\Extension\Core\Type\LanguageType();
    }
    protected function getForm_Type_LocaleService()
    {
        return $this->services['form.type.locale'] = new \Symfony\Component\Form\Extension\Core\Type\LocaleType();
    }
    protected function getForm_Type_MoneyService()
    {
        return $this->services['form.type.money'] = new \Symfony\Component\Form\Extension\Core\Type\MoneyType();
    }
    protected function getForm_Type_NumberService()
    {
        return $this->services['form.type.number'] = new \Symfony\Component\Form\Extension\Core\Type\NumberType();
    }
    protected function getForm_Type_PasswordService()
    {
        return $this->services['form.type.password'] = new \Symfony\Component\Form\Extension\Core\Type\PasswordType();
    }
    protected function getForm_Type_PercentService()
    {
        return $this->services['form.type.percent'] = new \Symfony\Component\Form\Extension\Core\Type\PercentType();
    }
    protected function getForm_Type_RadioService()
    {
        return $this->services['form.type.radio'] = new \Symfony\Component\Form\Extension\Core\Type\RadioType();
    }
    protected function getForm_Type_RepeatedService()
    {
        return $this->services['form.type.repeated'] = new \Symfony\Component\Form\Extension\Core\Type\RepeatedType();
    }
    protected function getForm_Type_ResetService()
    {
        return $this->services['form.type.reset'] = new \Symfony\Component\Form\Extension\Core\Type\ResetType();
    }
    protected function getForm_Type_SearchService()
    {
        return $this->services['form.type.search'] = new \Symfony\Component\Form\Extension\Core\Type\SearchType();
    }
    protected function getForm_Type_SubmitService()
    {
        return $this->services['form.type.submit'] = new \Symfony\Component\Form\Extension\Core\Type\SubmitType();
    }
    protected function getForm_Type_TextService()
    {
        return $this->services['form.type.text'] = new \Symfony\Component\Form\Extension\Core\Type\TextType();
    }
    protected function getForm_Type_TextareaService()
    {
        return $this->services['form.type.textarea'] = new \Symfony\Component\Form\Extension\Core\Type\TextareaType();
    }
    protected function getForm_Type_TimeService()
    {
        return $this->services['form.type.time'] = new \Symfony\Component\Form\Extension\Core\Type\TimeType();
    }
    protected function getForm_Type_TimezoneService()
    {
        return $this->services['form.type.timezone'] = new \Symfony\Component\Form\Extension\Core\Type\TimezoneType();
    }
    protected function getForm_Type_UrlService()
    {
        return $this->services['form.type.url'] = new \Symfony\Component\Form\Extension\Core\Type\UrlType();
    }
    protected function getForm_TypeExtension_CsrfService()
    {
        return $this->services['form.type_extension.csrf'] = new \Symfony\Component\Form\Extension\Csrf\Type\FormTypeCsrfExtension($this->get('form.csrf_provider'), true, 'ezxform_token', $this->get('translator.default'), 'validators');
    }
    protected function getForm_TypeExtension_Form_HttpFoundationService()
    {
        return $this->services['form.type_extension.form.http_foundation'] = new \Symfony\Component\Form\Extension\HttpFoundation\Type\FormTypeHttpFoundationExtension(new \Symfony\Component\Form\Extension\HttpFoundation\HttpFoundationRequestHandler());
    }
    protected function getForm_TypeExtension_Form_ValidatorService()
    {
        return $this->services['form.type_extension.form.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\FormTypeValidatorExtension($this->get('validator'));
    }
    protected function getForm_TypeExtension_Repeated_ValidatorService()
    {
        return $this->services['form.type_extension.repeated.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\RepeatedTypeValidatorExtension();
    }
    protected function getForm_TypeExtension_Submit_ValidatorService()
    {
        return $this->services['form.type_extension.submit.validator'] = new \Symfony\Component\Form\Extension\Validator\Type\SubmitTypeValidatorExtension();
    }
    protected function getForm_TypeGuesser_ValidatorService()
    {
        return $this->services['form.type_guesser.validator'] = new \Symfony\Component\Form\Extension\Validator\ValidatorTypeGuesser($this->get('validator'));
    }
    protected function getFosHttpCache_CacheManagerService()
    {
        $this->services['fos_http_cache.cache_manager'] = $instance = new \FOS\HttpCacheBundle\CacheManager($this->get('fos_http_cache.proxy_client.varnish'), $this->get('ezpublish.chain_router'));
        if ($this->has('event_dispatcher')) {
            $instance->setEventDispatcher($this->get('event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        $instance->setTagsHeader('X-Cache-Tags');
        $instance->addSubscriber(new \FOS\HttpCache\EventListener\LogSubscriber($this->get('logger')));
        return $instance;
    }
    protected function getFosHttpCache_Command_InvalidatePathService()
    {
        return $this->services['fos_http_cache.command.invalidate_path'] = new \FOS\HttpCacheBundle\Command\InvalidatePathCommand($this->get('fos_http_cache.cache_manager'));
    }
    protected function getFosHttpCache_Command_InvalidateRegexService()
    {
        return $this->services['fos_http_cache.command.invalidate_regex'] = new \FOS\HttpCacheBundle\Command\InvalidateRegexCommand($this->get('fos_http_cache.cache_manager'));
    }
    protected function getFosHttpCache_Command_InvalidateTagService()
    {
        return $this->services['fos_http_cache.command.invalidate_tag'] = new \FOS\HttpCacheBundle\Command\InvalidateTagCommand($this->get('fos_http_cache.cache_manager'));
    }
    protected function getFosHttpCache_Command_RefreshPathService()
    {
        return $this->services['fos_http_cache.command.refresh_path'] = new \FOS\HttpCacheBundle\Command\RefreshPathCommand($this->get('fos_http_cache.cache_manager'));
    }
    protected function getFosHttpCache_EventListener_InvalidationService()
    {
        return $this->services['fos_http_cache.event_listener.invalidation'] = new \FOS\HttpCacheBundle\EventListener\InvalidationSubscriber($this->get('fos_http_cache.cache_manager'), $this->get('ezpublish.chain_router'));
    }
    protected function getFosHttpCache_EventListener_LogService()
    {
        return $this->services['fos_http_cache.event_listener.log'] = new \FOS\HttpCache\EventListener\LogSubscriber($this->get('logger'));
    }
    protected function getFosHttpCache_EventListener_TagService()
    {
        return $this->services['fos_http_cache.event_listener.tag'] = new \FOS\HttpCacheBundle\EventListener\TagSubscriber($this->get('fos_http_cache.cache_manager'));
    }
    protected function getFosHttpCache_EventListener_UserContextService()
    {
        return $this->services['fos_http_cache.event_listener.user_context'] = new \FOS\HttpCacheBundle\EventListener\UserContextSubscriber($this->get('fos_http_cache.user_context.request_matcher'), $this->get('fos_http_cache.user_context.hash_generator'), array(0 => 'Cookie', 1 => 'Authorization'), 'X-User-Hash', 600);
    }
    protected function getFosHttpCache_ProxyClient_VarnishService()
    {
        return $this->services['fos_http_cache.proxy_client.varnish'] = $this->get('ezpublish.http_cache.proxy_client.varnish.factory')->buildProxyClient(array(0 => '$http_cache.purge_servers$'), NULL);
    }
    protected function getFosHttpCache_UserContext_HashGeneratorService()
    {
        return $this->services['fos_http_cache.user_context.hash_generator'] = new \FOS\HttpCache\UserContext\HashGenerator(array(0 => $this->get('ezpublish.user.hash_generator'), 1 => $this->get('ezpublish.user.identity_definer.role_id')));
    }
    protected function getFosHttpCache_UserContext_LogoutHandlerService()
    {
        return $this->services['fos_http_cache.user_context.logout_handler'] = new \FOS\HttpCacheBundle\Security\Http\Logout\ContextInvalidationLogoutHandler($this->get('fos_http_cache.proxy_client.varnish'), array(0 => 'Cookie', 1 => 'Authorization'), 'application/vnd.fos.user-context-hash');
    }
    protected function getFosHttpCache_UserContext_RequestMatcherService()
    {
        return $this->services['fos_http_cache.user_context.request_matcher'] = new \FOS\HttpCacheBundle\UserContext\RequestMatcher('application/vnd.fos.user-context-hash', NULL);
    }
    protected function getFragment_HandlerService()
    {
        $this->services['fragment.handler'] = $instance = new \Symfony\Component\HttpKernel\Fragment\FragmentHandler(array(), false, $this->get('request_stack'));
        $instance->addRenderer($this->get('fragment.renderer.inline'));
        $instance->addRenderer($this->get('fragment.renderer.hinclude'));
        $instance->addRenderer($this->get('fragment.renderer.esi'));
        return $instance;
    }
    protected function getFragment_ListenerService()
    {
        return $this->services['fragment.listener'] = $this->get('ezpublish.fragment_listener.factory')->buildFragmentListener($this->get('uri_signer'), '/_fragment', 'Symfony\\Component\\HttpKernel\\EventListener\\FragmentListener');
    }
    protected function getFragment_Renderer_EsiService()
    {
        $a = new \Symfony\Component\HttpKernel\Fragment\EsiFragmentRenderer($this->get('esi', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('fragment.renderer.inline'), $this->get('uri_signer'));
        $a->setFragmentPath('/_fragment');
        $this->services['fragment.renderer.esi'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\Fragment\DecoratedFragmentRenderer($a);
        $instance->setFragmentPath('/_fragment');
        $instance->setSiteAccess($this->get('ezpublish.siteaccess'));
        return $instance;
    }
    protected function getFragment_Renderer_HincludeService()
    {
        $a = new \Symfony\Bundle\FrameworkBundle\Fragment\ContainerAwareHIncludeFragmentRenderer($this, $this->get('uri_signer'), NULL);
        $a->setFragmentPath('/_fragment');
        $this->services['fragment.renderer.hinclude'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\Fragment\DecoratedFragmentRenderer($a);
        $instance->setFragmentPath('/_fragment');
        $instance->setSiteAccess($this->get('ezpublish.siteaccess'));
        return $instance;
    }
    protected function getFragment_Renderer_InlineService()
    {
        $a = new \Symfony\Component\HttpKernel\Fragment\InlineFragmentRenderer($this->get('http_kernel'), $this->get('event_dispatcher'));
        $a->setFragmentPath('/_fragment');
        $this->services['fragment.renderer.inline'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\Fragment\InlineFragmentRenderer($a);
        $instance->setFragmentPath('/_fragment');
        $instance->setSiteAccess($this->get('ezpublish.siteaccess'));
        return $instance;
    }
    protected function getHautelook_Router_TemplateService()
    {
        return $this->services['hautelook.router.template'] = new \Symfony\Bundle\FrameworkBundle\Routing\Router($this, '/var/www/ayaville/ezpublish/config/routing.yml', array('cache_dir' => '/var/www/ayaville/ezpublish/cache/prod', 'debug' => false, 'generator_class' => 'Hautelook\\TemplatedUriRouter\\Routing\\Generator\\Rfc6570Generator', 'generator_base_class' => 'Hautelook\\TemplatedUriRouter\\Routing\\Generator\\Rfc6570Generator', 'generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\PhpGeneratorDumper', 'generator_cache_class' => 'ezpublishprodRF6570UrlGenerator', 'matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_base_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\PhpMatcherDumper', 'matcher_cache_class' => 'ezpublishprodRFC6570UrlMatcher'), $this->get('router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('monolog.logger.router', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getHttpKernelService()
    {
        return $this->services['http_kernel'] = new \Symfony\Component\HttpKernel\DependencyInjection\ContainerAwareHttpKernel($this->get('event_dispatcher'), $this, $this->get('controller_resolver'), $this->get('request_stack'));
    }
    protected function getKernelService()
    {
        throw new RuntimeException('You have requested a synthetic service ("kernel"). The DIC does not know how to construct this service.');
    }
    protected function getKnpMenu_FactoryService()
    {
        return $this->services['knp_menu.factory'] = new \Knp\Menu\Silex\RouterAwareFactory($this->get('ezpublish.chain_router'));
    }
    protected function getKnpMenu_MenuProviderService()
    {
        return $this->services['knp_menu.menu_provider'] = new \Knp\Menu\Provider\ChainProvider(array(0 => new \Knp\Bundle\MenuBundle\Provider\ContainerAwareProvider($this, array('top' => 'ezdemo.menu.top')), 1 => new \Knp\Bundle\MenuBundle\Provider\BuilderAliasProvider($this->get('kernel'), $this, $this->get('knp_menu.factory'))));
    }
    protected function getKnpMenu_Renderer_ListService()
    {
        return $this->services['knp_menu.renderer.list'] = new \Knp\Menu\Renderer\ListRenderer(array(), 'UTF-8');
    }
    protected function getKnpMenu_Renderer_TwigService()
    {
        return $this->services['knp_menu.renderer.twig'] = new \Knp\Menu\Renderer\TwigRenderer($this->get('twig'), 'knp_menu.html.twig', array());
    }
    protected function getKnpMenu_RendererProviderService()
    {
        return $this->services['knp_menu.renderer_provider'] = new \Knp\Bundle\MenuBundle\Renderer\ContainerAwareProvider($this, 'twig', array('list' => 'knp_menu.renderer.list', 'twig' => 'knp_menu.renderer.twig'));
    }
    protected function getLiipImagineService()
    {
        $this->services['liip_imagine'] = $instance = new \Imagine\Gd\Imagine();
        $instance->setMetadataReader(new \Imagine\Image\Metadata\ExifMetadataReader());
        return $instance;
    }
    protected function getLiipImagine_Binary_Loader_DefaultService()
    {
        return $this->services['liip_imagine.binary.loader.default'] = new \Liip\ImagineBundle\Binary\Loader\FileSystemLoader($this->get('liip_imagine.mime_type_guesser'), $this->get('liip_imagine.extension_guesser'), '/var/www/ayaville/ezpublish/../web');
    }
    protected function getLiipImagine_Binary_Loader_Prototype_FilesystemService()
    {
        return $this->services['liip_imagine.binary.loader.prototype.filesystem'] = new \Liip\ImagineBundle\Binary\Loader\FileSystemLoader($this->get('liip_imagine.mime_type_guesser'), $this->get('liip_imagine.extension_guesser'), '');
    }
    protected function getLiipImagine_Binary_Loader_Prototype_StreamService()
    {
        return $this->services['liip_imagine.binary.loader.prototype.stream'] = new \Liip\ImagineBundle\Binary\Loader\StreamLoader('', '');
    }
    protected function getLiipImagine_Binary_MimeTypeGuesserService()
    {
        return $this->services['liip_imagine.binary.mime_type_guesser'] = new \Liip\ImagineBundle\Binary\SimpleMimeTypeGuesser($this->get('liip_imagine.mime_type_guesser'));
    }
    protected function getLiipImagine_Cache_ManagerService()
    {
        $this->services['liip_imagine.cache.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Cache\CacheManager($this->get('liip_imagine.filter.configuration'), $this->get('ezpublish.chain_router'), $this->get('liip_imagine.cache.signer'), $this->get('event_dispatcher'), 'default');
        $instance->addResolver('default', $this->get('liip_imagine.cache.resolver.default'));
        $instance->addResolver('no_cache', $this->get('liip_imagine.cache.resolver.no_cache_web_path'));
        $instance->addResolver('ezpublish', $this->get('ezpublish.image_alias.imagine.cache_resolver'));
        return $instance;
    }
    protected function getLiipImagine_Cache_Resolver_DefaultService()
    {
        return $this->services['liip_imagine.cache.resolver.default'] = new \Liip\ImagineBundle\Imagine\Cache\Resolver\WebPathResolver($this->get('filesystem'), $this->get('router.request_context'), '/var/www/ayaville/ezpublish/../web', 'media/cache');
    }
    protected function getLiipImagine_Cache_Resolver_NoCacheWebPathService()
    {
        return $this->services['liip_imagine.cache.resolver.no_cache_web_path'] = new \Liip\ImagineBundle\Imagine\Cache\Resolver\NoCacheWebPathResolver($this->get('router.request_context'));
    }
    protected function getLiipImagine_Cache_SignerService()
    {
        return $this->services['liip_imagine.cache.signer'] = new \Liip\ImagineBundle\Imagine\Cache\Signer('b77af066f4a98c73649c30857ee81c77a388a9c3');
    }
    protected function getLiipImagine_ControllerService()
    {
        return $this->services['liip_imagine.controller'] = new \Liip\ImagineBundle\Controller\ImagineController($this->get('liip_imagine.data.manager'), $this->get('liip_imagine.filter.manager'), $this->get('liip_imagine.cache.manager'), $this->get('liip_imagine.cache.signer'));
    }
    protected function getLiipImagine_Data_ManagerService()
    {
        $this->services['liip_imagine.data.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Data\DataManager($this->get('liip_imagine.binary.mime_type_guesser'), $this->get('liip_imagine.extension_guesser'), $this->get('liip_imagine.filter.configuration'), 'default', NULL);
        $instance->addLoader('default', $this->get('liip_imagine.binary.loader.default'));
        $instance->addLoader('ezpublish', $this->get('ezpublish.image_alias.imagine.binary_loader'));
        return $instance;
    }
    protected function getLiipImagine_ExtensionGuesserService()
    {
        return $this->services['liip_imagine.extension_guesser'] = \Symfony\Component\HttpFoundation\File\MimeType\ExtensionGuesser::getInstance();
    }
    protected function getLiipImagine_Filter_ConfigurationService()
    {
        $this->services['liip_imagine.filter.configuration'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\Imagine\Filter\FilterConfiguration(array());
        $instance->setConfigResolver($this->get('ezpublish.config.resolver.chain'));
        return $instance;
    }
    protected function getLiipImagine_Filter_Loader_AutoRotateService()
    {
        return $this->services['liip_imagine.filter.loader.auto_rotate'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\AutoRotateFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_BackgroundService()
    {
        return $this->services['liip_imagine.filter.loader.background'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\BackgroundFilterLoader($this->get('liip_imagine'));
    }
    protected function getLiipImagine_Filter_Loader_CropService()
    {
        return $this->services['liip_imagine.filter.loader.crop'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\CropFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_PasteService()
    {
        return $this->services['liip_imagine.filter.loader.paste'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\PasteFilterLoader($this->get('liip_imagine'), '/var/www/ayaville/ezpublish');
    }
    protected function getLiipImagine_Filter_Loader_RelativeResizeService()
    {
        return $this->services['liip_imagine.filter.loader.relative_resize'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\RelativeResizeFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_ResizeService()
    {
        return $this->services['liip_imagine.filter.loader.resize'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\ResizeFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_StripService()
    {
        return $this->services['liip_imagine.filter.loader.strip'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\StripFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_ThumbnailService()
    {
        return $this->services['liip_imagine.filter.loader.thumbnail'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\ThumbnailFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_UpscaleService()
    {
        return $this->services['liip_imagine.filter.loader.upscale'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\UpscaleFilterLoader();
    }
    protected function getLiipImagine_Filter_Loader_WatermarkService()
    {
        return $this->services['liip_imagine.filter.loader.watermark'] = new \Liip\ImagineBundle\Imagine\Filter\Loader\WatermarkFilterLoader($this->get('liip_imagine'), '/var/www/ayaville/ezpublish');
    }
    protected function getLiipImagine_Filter_ManagerService()
    {
        $a = $this->get('liip_imagine.filter.loader.relative_resize');
        $b = $this->get('liip_imagine.filter.loader.resize');
        $c = $this->get('liip_imagine.filter.loader.thumbnail');
        $d = $this->get('liip_imagine.filter.loader.crop');
        $e = $this->get('ezpublish.image_alias.imagine.filter.reduce_noise');
        $f = new \eZ\Bundle\EzPublishCoreBundle\Imagine\Filter\Loader\ScaleDownOnlyFilterLoader();
        $f->setInnerLoader($c);
        $g = new \eZ\Bundle\EzPublishCoreBundle\Imagine\Filter\Loader\ScaleWidthDownOnlyFilterLoader();
        $g->setInnerLoader($c);
        $h = new \eZ\Bundle\EzPublishCoreBundle\Imagine\Filter\Loader\ScaleHeightDownOnlyFilterLoader();
        $h->setInnerLoader($c);
        $i = new \eZ\Bundle\EzPublishCoreBundle\Imagine\Filter\Loader\ScaleWidthFilterLoader();
        $i->setInnerLoader($a);
        $j = new \eZ\Bundle\EzPublishCoreBundle\Imagine\Filter\Loader\ScaleHeightFilterLoader();
        $j->setInnerLoader($a);
        $k = new \eZ\Bundle\EzPublishCoreBundle\Imagine\Filter\Loader\ScaleFilterLoader();
        $k->setInnerLoader($a);
        $l = new \eZ\Bundle\EzPublishCoreBundle\Imagine\Filter\Loader\ScaleExactFilterLoader();
        $l->setInnerLoader($b);
        $m = new \eZ\Bundle\EzPublishCoreBundle\Imagine\Filter\Loader\ScalePercentFilterLoader();
        $m->setInnerLoader($b);
        $n = new \eZ\Bundle\EzPublishCoreBundle\Imagine\Filter\Loader\CropFilterLoader();
        $n->setInnerLoader($d);
        $this->services['liip_imagine.filter.manager'] = $instance = new \Liip\ImagineBundle\Imagine\Filter\FilterManager($this->get('liip_imagine.filter.configuration'), $this->get('liip_imagine'), $this->get('liip_imagine.binary.mime_type_guesser'));
        $instance->addLoader('relative_resize', $a);
        $instance->addLoader('resize', $b);
        $instance->addLoader('thumbnail', $c);
        $instance->addLoader('crop', $d);
        $instance->addLoader('paste', $this->get('liip_imagine.filter.loader.paste'));
        $instance->addLoader('watermark', $this->get('liip_imagine.filter.loader.watermark'));
        $instance->addLoader('background', $this->get('liip_imagine.filter.loader.background'));
        $instance->addLoader('strip', $this->get('liip_imagine.filter.loader.strip'));
        $instance->addLoader('upscale', $this->get('liip_imagine.filter.loader.upscale'));
        $instance->addLoader('auto_rotate', $this->get('liip_imagine.filter.loader.auto_rotate'));
        $instance->addLoader('geometry/scaledownonly', $f);
        $instance->addLoader('geometry/scalewidthdownonly', $g);
        $instance->addLoader('geometry/scaleheightdownonly', $h);
        $instance->addLoader('geometry/scalewidth', $i);
        $instance->addLoader('geometry/scaleheight', $j);
        $instance->addLoader('geometry/scale', $k);
        $instance->addLoader('geometry/scaleexact', $l);
        $instance->addLoader('geometry/scalepercent', $m);
        $instance->addLoader('geometry/crop', $n);
        $instance->addLoader('border', new \eZ\Bundle\EzPublishCoreBundle\Imagine\Filter\Loader\BorderFilterLoader());
        $instance->addLoader('filter/noise', new \eZ\Bundle\EzPublishCoreBundle\Imagine\Filter\Loader\ReduceNoiseFilterLoader($e));
        $instance->addLoader('filter/swirl', new \eZ\Bundle\EzPublishCoreBundle\Imagine\Filter\Loader\SwirlFilterLoader($e));
        $instance->addLoader('colorspace/gray', new \eZ\Bundle\EzPublishCoreBundle\Imagine\Filter\Loader\GrayscaleFilterLoader());
        $instance->addPostProcessor('jpegoptim', $this->get('liip_imagine.filter.post_processor.jpegoptim'));
        return $instance;
    }
    protected function getLiipImagine_Filter_PostProcessor_JpegoptimService()
    {
        return $this->services['liip_imagine.filter.post_processor.jpegoptim'] = new \Liip\ImagineBundle\Imagine\Filter\PostProcessor\JpegOptimPostProcessor('/usr/bin/jpegoptim');
    }
    protected function getLiipImagine_Form_Type_ImageService()
    {
        return $this->services['liip_imagine.form.type.image'] = new \Liip\ImagineBundle\Form\Type\ImageType();
    }
    protected function getLiipImagine_MimeTypeGuesserService()
    {
        return $this->services['liip_imagine.mime_type_guesser'] = \Symfony\Component\HttpFoundation\File\MimeType\MimeTypeGuesser::getInstance();
    }
    protected function getLiipImagine_Templating_HelperService()
    {
        return $this->services['liip_imagine.templating.helper'] = new \Liip\ImagineBundle\Templating\Helper\ImagineHelper($this->get('liip_imagine.cache.manager'));
    }
    protected function getLocaleListenerService()
    {
        $this->services['locale_listener'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\EventListener\LocaleListener('en', $this->get('ezpublish.chain_router', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('request_stack'));
        $instance->setConfigResolver($this->get('ezpublish.config.resolver.chain'));
        $instance->setLocaleConverter($this->get('ezpublish.locale.converter'));
        return $instance;
    }
    protected function getLoggerService()
    {
        $this->services['logger'] = $instance = new \Symfony\Bridge\Monolog\Logger('app');
        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Handler_ConsoleService()
    {
        return $this->services['monolog.handler.console'] = new \Symfony\Bridge\Monolog\Handler\ConsoleHandler(NULL, true, array());
    }
    protected function getMonolog_Handler_MainService()
    {
        return $this->services['monolog.handler.main'] = new \Monolog\Handler\FingersCrossedHandler($this->get('monolog.handler.nested'), 500, 0, true, true, NULL);
    }
    protected function getMonolog_Handler_NestedService()
    {
        return $this->services['monolog.handler.nested'] = new \Monolog\Handler\StreamHandler('/var/www/ayaville/ezpublish/logs/prod.log', 100, true);
    }
    protected function getMonolog_Logger_AsseticService()
    {
        $this->services['monolog.logger.assetic'] = $instance = new \Symfony\Bridge\Monolog\Logger('assetic');
        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_DoctrineService()
    {
        $this->services['monolog.logger.doctrine'] = $instance = new \Symfony\Bridge\Monolog\Logger('doctrine');
        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_EmergencyService()
    {
        $this->services['monolog.logger.emergency'] = $instance = new \Symfony\Bridge\Monolog\Logger('emergency');
        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_RequestService()
    {
        $this->services['monolog.logger.request'] = $instance = new \Symfony\Bridge\Monolog\Logger('request');
        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_RouterService()
    {
        $this->services['monolog.logger.router'] = $instance = new \Symfony\Bridge\Monolog\Logger('router');
        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getMonolog_Logger_SecurityService()
    {
        $this->services['monolog.logger.security'] = $instance = new \Symfony\Bridge\Monolog\Logger('security');
        $instance->pushHandler($this->get('monolog.handler.console'));
        $instance->pushHandler($this->get('monolog.handler.main'));
        return $instance;
    }
    protected function getNelmioCors_CorsListenerService()
    {
        return $this->services['nelmio_cors.cors_listener'] = new \Nelmio\CorsBundle\EventListener\CorsListener($this->get('event_dispatcher'), new \Nelmio\CorsBundle\Options\Resolver(array(0 => $this->get('nelmio_cors.options_provider.config'), 1 => $this->get('ezpublish_rest.cors_option_provider'))));
    }
    protected function getNelmioCors_OptionsProvider_ConfigService()
    {
        return $this->services['nelmio_cors.options_provider.config'] = new \Nelmio\CorsBundle\Options\ConfigProvider(array('^/api/ezp/v2/' => array('max_age' => 60, 'allow_credentials' => true, 'allow_headers' => array(0 => 'authorization', 1 => 'accept', 2 => 'content-type', 3 => 'x-csrf-token', 4 => 'destination', 5 => 'x-siteaccess'))), array('allow_origin' => array(), 'allow_credentials' => false, 'allow_headers' => array(), 'expose_headers' => array(), 'allow_methods' => array(), 'max_age' => 0, 'hosts' => array()));
    }
    protected function getOneupFlysystem_MountManagerService()
    {
        return $this->services['oneup_flysystem.mount_manager'] = new \League\Flysystem\MountManager();
    }
    protected function getPagerfanta_ConvertNotValidCurrentPageToNotFoundListenerService()
    {
        return $this->services['pagerfanta.convert_not_valid_current_page_to_not_found_listener'] = new \WhiteOctober\PagerfantaBundle\EventListener\ConvertNotValidCurrentPageToNotFoundListener();
    }
    protected function getPagerfanta_ConvertNotValidMaxPerPageToNotFoundListenerService()
    {
        return $this->services['pagerfanta.convert_not_valid_max_per_page_to_not_found_listener'] = new \WhiteOctober\PagerfantaBundle\EventListener\ConvertNotValidMaxPerPageToNotFoundListener();
    }
    protected function getPropertyAccessorService()
    {
        return $this->services['property_accessor'] = new \Symfony\Component\PropertyAccess\PropertyAccessor();
    }
    protected function getRequestService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('request', 'request');
        }
        throw new RuntimeException('You have requested a synthetic service ("request"). The DIC does not know how to construct this service.');
    }
    protected function getRequestStackService()
    {
        return $this->services['request_stack'] = new \Symfony\Component\HttpFoundation\RequestStack();
    }
    protected function getResponseListenerService()
    {
        return $this->services['response_listener'] = new \Symfony\Component\HttpKernel\EventListener\ResponseListener('UTF-8');
    }
    protected function getRouterListenerService()
    {
        return $this->services['router_listener'] = new \Symfony\Component\HttpKernel\EventListener\RouterListener($this->get('ezpublish.chain_router'), $this->get('router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('request_stack'));
    }
    protected function getRouting_LoaderService()
    {
        $a = $this->get('file_locator');
        $b = $this->get('annotation_reader');
        $c = new \Sensio\Bundle\FrameworkExtraBundle\Routing\AnnotatedRouteControllerLoader($b);
        $d = new \Symfony\Component\Config\Loader\LoaderResolver();
        $d->addLoader(new \Symfony\Component\Routing\Loader\XmlFileLoader($a));
        $d->addLoader(new \Symfony\Component\Routing\Loader\YamlFileLoader($a));
        $d->addLoader(new \Symfony\Component\Routing\Loader\PhpFileLoader($a));
        $d->addLoader(new \Symfony\Component\Routing\Loader\AnnotationDirectoryLoader($a, $c));
        $d->addLoader(new \Symfony\Component\Routing\Loader\AnnotationFileLoader($a, $c));
        $d->addLoader($c);
        $d->addLoader($this->get('ezpublish_rest.routing.options_loader'));
        return $this->services['routing.loader'] = new \Symfony\Bundle\FrameworkBundle\Routing\DelegatingLoader($this->get('controller_name_converter'), $this->get('monolog.logger.router', ContainerInterface::NULL_ON_INVALID_REFERENCE), $d);
    }
    protected function getSecurity_ContextService()
    {
        return $this->services['security.context'] = new \Symfony\Component\Security\Core\SecurityContext($this->get('security.authentication.manager'), $this->get('security.access.decision_manager'), false);
    }
    protected function getSecurity_Csrf_TokenManagerService()
    {
        return $this->services['security.csrf.token_manager'] = new \Symfony\Component\Security\Csrf\CsrfTokenManager(new \Symfony\Component\Security\Csrf\TokenGenerator\UriSafeTokenGenerator($this->get('security.secure_random')), new \Symfony\Component\Security\Csrf\TokenStorage\SessionTokenStorage($this->get('session')));
    }
    protected function getSecurity_EncoderFactoryService()
    {
        return $this->services['security.encoder_factory'] = new \Symfony\Component\Security\Core\Encoder\EncoderFactory(array());
    }
    protected function getSecurity_FirewallService()
    {
        return $this->services['security.firewall'] = new \Symfony\Component\Security\Http\Firewall(new \Symfony\Bundle\SecurityBundle\Security\FirewallMap($this, array('security.firewall.map.context.dev' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/(_(profiler|wdt)|css|images|js)/'), 'security.firewall.map.context.ezpublish_setup' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/ezsetup'), 'security.firewall.map.context.ezpublish_rest' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/api/ezp/v2'), 'security.firewall.map.context.ezpublish_front' => new \Symfony\Component\HttpFoundation\RequestMatcher('^/'), 'security.firewall.map.context.default' => NULL)), $this->get('event_dispatcher'));
    }
    protected function getSecurity_Firewall_Map_Context_DefaultService()
    {
        $a = $this->get('security.context');
        $b = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        return $this->services['security.firewall.map.context.default'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => new \Symfony\Component\Security\Http\Firewall\ContextListener($a, array(0 => $this->get('ezpublish.security.user_provider')), 'default', $b, $this->get('event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE)), 2 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '5527874857d1b', $b), 3 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $this->get('security.authentication.trust_resolver'), $this->get('security.http_utils'), 'default', NULL, NULL, NULL, $b));
    }
    protected function getSecurity_Firewall_Map_Context_DevService()
    {
        return $this->services['security.firewall.map.context.dev'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(), NULL);
    }
    protected function getSecurity_Firewall_Map_Context_EzpublishFrontService()
    {
        $a = $this->get('security.context');
        $b = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $c = $this->get('event_dispatcher', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $d = $this->get('security.http_utils');
        $e = $this->get('http_kernel');
        $f = new \Symfony\Component\Security\Http\Firewall\LogoutListener($a, $d, new \Symfony\Component\Security\Http\Logout\DefaultLogoutSuccessHandler($d, '/'), array('csrf_parameter' => '_csrf_token', 'intention' => 'logout', 'logout_path' => '/logout'));
        $f->addHandler(new \Symfony\Component\Security\Http\Logout\SessionLogoutHandler());
        $g = new \eZ\Publish\Core\MVC\Symfony\Security\Authentication\DefaultAuthenticationSuccessHandler($d, array('always_use_default_target_path' => false, 'default_target_path' => '/', 'login_path' => '/login', 'target_path_parameter' => '_target_path', 'use_referer' => false));
        $g->setConfigResolver($this->get('ezpublish.config.resolver.chain'));
        $g->setProviderKey('ezpublish_front');
        return $this->services['security.firewall.map.context.ezpublish_front'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => new \Symfony\Component\Security\Http\Firewall\ContextListener($a, array(0 => $this->get('ezpublish.security.user_provider')), 'ezpublish_front', $b, $c), 2 => $f, 3 => new \Symfony\Component\Security\Http\Firewall\UsernamePasswordFormAuthenticationListener($a, $this->get('security.authentication.manager'), new \Symfony\Component\Security\Http\Session\SessionAuthenticationStrategy('migrate'), $d, 'ezpublish_front', $g, new \Symfony\Component\Security\Http\Authentication\DefaultAuthenticationFailureHandler($e, $d, array('login_path' => '/login', 'failure_path' => NULL, 'failure_forward' => false, 'failure_path_parameter' => '_failure_path'), $b), array('require_previous_session' => false, 'check_path' => '/login_check', 'use_forward' => false, 'username_parameter' => '_username', 'password_parameter' => '_password', 'csrf_parameter' => '_csrf_token', 'intention' => 'authenticate', 'post_only' => true), $b, $c, NULL), 4 => new \Symfony\Component\Security\Http\Firewall\AnonymousAuthenticationListener($a, '5527874857d1b', $b), 5 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $this->get('security.authentication.trust_resolver'), $d, 'ezpublish_front', new \Symfony\Component\Security\Http\EntryPoint\FormAuthenticationEntryPoint($e, $d, '/login', false), NULL, NULL, $b));
    }
    protected function getSecurity_Firewall_Map_Context_EzpublishRestService()
    {
        $a = $this->get('security.context');
        $b = $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $c = new \Symfony\Component\Security\Http\EntryPoint\BasicAuthenticationEntryPoint('eZ Publish REST API');
        return $this->services['security.firewall.map.context.ezpublish_rest'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(0 => $this->get('security.channel_listener'), 1 => new \Symfony\Component\Security\Http\Firewall\BasicAuthenticationListener($a, $this->get('security.authentication.manager'), 'ezpublish_rest', $c, $b), 2 => $this->get('security.access_listener')), new \Symfony\Component\Security\Http\Firewall\ExceptionListener($a, $this->get('security.authentication.trust_resolver'), $this->get('security.http_utils'), 'ezpublish_rest', $c, NULL, NULL, $b));
    }
    protected function getSecurity_Firewall_Map_Context_EzpublishSetupService()
    {
        return $this->services['security.firewall.map.context.ezpublish_setup'] = new \Symfony\Bundle\SecurityBundle\Security\FirewallContext(array(), NULL);
    }
    protected function getSecurity_Rememberme_ResponseListenerService()
    {
        return $this->services['security.rememberme.response_listener'] = new \Symfony\Component\Security\Http\RememberMe\ResponseListener();
    }
    protected function getSecurity_SecureRandomService()
    {
        return $this->services['security.secure_random'] = new \Symfony\Component\Security\Core\Util\SecureRandom('/var/www/ayaville/ezpublish/cache/prod/secure_random.seed', $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSecurity_Validator_UserPasswordService()
    {
        return $this->services['security.validator.user_password'] = new \Symfony\Component\Security\Core\Validator\Constraints\UserPasswordValidator($this->get('security.context'), $this->get('security.encoder_factory'));
    }
    protected function getSensioFrameworkExtra_Cache_ListenerService()
    {
        return $this->services['sensio_framework_extra.cache.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\HttpCacheListener();
    }
    protected function getSensioFrameworkExtra_Controller_ListenerService()
    {
        return $this->services['sensio_framework_extra.controller.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\ControllerListener($this->get('annotation_reader'));
    }
    protected function getSensioFrameworkExtra_Converter_DatetimeService()
    {
        return $this->services['sensio_framework_extra.converter.datetime'] = new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DateTimeParamConverter();
    }
    protected function getSensioFrameworkExtra_Converter_Doctrine_OrmService()
    {
        return $this->services['sensio_framework_extra.converter.doctrine.orm'] = new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\DoctrineParamConverter($this->get('doctrine', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSensioFrameworkExtra_Converter_ListenerService()
    {
        return $this->services['sensio_framework_extra.converter.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\ParamConverterListener($this->get('sensio_framework_extra.converter.manager'), true);
    }
    protected function getSensioFrameworkExtra_Converter_ManagerService()
    {
        $this->services['sensio_framework_extra.converter.manager'] = $instance = new \Sensio\Bundle\FrameworkExtraBundle\Request\ParamConverter\ParamConverterManager();
        $instance->add($this->get('sensio_framework_extra.converter.doctrine.orm'), 0, 'doctrine.orm');
        $instance->add($this->get('sensio_framework_extra.converter.datetime'), 0, 'datetime');
        return $instance;
    }
    protected function getSensioFrameworkExtra_Security_ListenerService()
    {
        return $this->services['sensio_framework_extra.security.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\SecurityListener($this->get('security.context', ContainerInterface::NULL_ON_INVALID_REFERENCE), new \Sensio\Bundle\FrameworkExtraBundle\Security\ExpressionLanguage(), $this->get('security.authentication.trust_resolver', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('security.role_hierarchy', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSensioFrameworkExtra_View_GuesserService()
    {
        return $this->services['sensio_framework_extra.view.guesser'] = new \Sensio\Bundle\FrameworkExtraBundle\Templating\TemplateGuesser($this->get('kernel'));
    }
    protected function getSensioFrameworkExtra_View_ListenerService()
    {
        return $this->services['sensio_framework_extra.view.listener'] = new \Sensio\Bundle\FrameworkExtraBundle\EventListener\TemplateListener($this);
    }
    protected function getServiceContainerService()
    {
        throw new RuntimeException('You have requested a synthetic service ("service_container"). The DIC does not know how to construct this service.');
    }
    protected function getSessionService()
    {
        return $this->services['session'] = new \Symfony\Component\HttpFoundation\Session\Session($this->get('session.storage.native'), $this->get('session.attribute_bag'), new \Symfony\Component\HttpFoundation\Session\Flash\FlashBag());
    }
    protected function getSession_AttributeBagService()
    {
        return $this->services['session.attribute_bag'] = new \Symfony\Component\HttpFoundation\Session\Attribute\AttributeBag('_ezpublish');
    }
    protected function getSession_Storage_FilesystemService()
    {
        return $this->services['session.storage.filesystem'] = new \Symfony\Component\HttpFoundation\Session\Storage\MockFileSessionStorage('/var/www/ayaville/ezpublish/cache/prod/sessions', 'MOCKSESSID', $this->get('session.storage.metadata_bag'));
    }
    protected function getSession_Storage_NativeService()
    {
        return $this->services['session.storage.native'] = new \Symfony\Component\HttpFoundation\Session\Storage\NativeSessionStorage(array('gc_probability' => 1), NULL, $this->get('session.storage.metadata_bag'));
    }
    protected function getSession_Storage_PhpBridgeService()
    {
        return $this->services['session.storage.php_bridge'] = new \Symfony\Component\HttpFoundation\Session\Storage\PhpBridgeSessionStorage(NULL, $this->get('session.storage.metadata_bag'));
    }
    protected function getSessionListenerService()
    {
        return $this->services['session_listener'] = new \Symfony\Bundle\FrameworkBundle\EventListener\SessionListener($this);
    }
    protected function getStash_DefaultCacheService()
    {
        return $this->services['stash.default_cache'] = new \Tedivm\StashBundle\Service\CacheService('default', $this->get('stash.driver.default_cache'), $this->get('stash.tracker.default_cache'));
    }
    protected function getStash_Driver_DefaultCacheService()
    {
        return $this->services['stash.driver.default_cache'] = \Tedivm\StashBundle\Factory\DriverFactory::createDriver(array(0 => 'Ephemeral', 1 => 'FileSystem'), array('BlackHole' => array(), 'Ephemeral' => array(), 'FileSystem' => array('dirSplit' => 2, 'path' => '/var/www/ayaville/ezpublish/cache/prod/stash', 'filePermissions' => 432, 'dirPermissions' => 504, 'memKeyLimit' => 200, 'keyHashFunction' => 'md5')));
    }
    protected function getStash_Tracker_DefaultCacheService()
    {
        $this->services['stash.tracker.default_cache'] = $instance = new \Tedivm\StashBundle\Service\CacheTracker('default');
        $instance->enableQueryLogging(false);
        return $instance;
    }
    protected function getStreamedResponseListenerService()
    {
        return $this->services['streamed_response_listener'] = new \Symfony\Component\HttpKernel\EventListener\StreamedResponseListener();
    }
    protected function getSwiftmailer_EmailSender_ListenerService()
    {
        return $this->services['swiftmailer.email_sender.listener'] = new \Symfony\Bundle\SwiftmailerBundle\EventListener\EmailSenderListener($this);
    }
    protected function getSwiftmailer_Mailer_DefaultService()
    {
        return $this->services['swiftmailer.mailer.default'] = new \Swift_Mailer($this->get('swiftmailer.mailer.default.transport'));
    }
    protected function getSwiftmailer_Mailer_Default_SpoolService()
    {
        return $this->services['swiftmailer.mailer.default.spool'] = new \Swift_MemorySpool();
    }
    protected function getSwiftmailer_Mailer_Default_TransportService()
    {
        return $this->services['swiftmailer.mailer.default.transport'] = new \Swift_Transport_SpoolTransport($this->get('swiftmailer.mailer.default.transport.eventdispatcher'), $this->get('swiftmailer.mailer.default.spool'));
    }
    protected function getSwiftmailer_Mailer_Default_Transport_RealService()
    {
        $a = new \Swift_Transport_Esmtp_AuthHandler(array(0 => new \Swift_Transport_Esmtp_Auth_CramMd5Authenticator(), 1 => new \Swift_Transport_Esmtp_Auth_LoginAuthenticator(), 2 => new \Swift_Transport_Esmtp_Auth_PlainAuthenticator()));
        $a->setUsername(NULL);
        $a->setPassword(NULL);
        $a->setAuthMode(NULL);
        $this->services['swiftmailer.mailer.default.transport.real'] = $instance = new \Swift_Transport_EsmtpTransport(new \Swift_Transport_StreamBuffer(new \Swift_StreamFilters_StringReplacementFilterFactory()), array(0 => $a), $this->get('swiftmailer.mailer.default.transport.eventdispatcher'));
        $instance->setHost('127.0.0.1');
        $instance->setPort(25);
        $instance->setEncryption(NULL);
        $instance->setTimeout(30);
        $instance->setSourceIp(NULL);
        return $instance;
    }
    protected function getTemplatingService()
    {
        $this->services['templating'] = $instance = new \Symfony\Bundle\FrameworkBundle\Templating\DelegatingEngine($this, array());
        $instance->addEngine($this->get('templating.engine.eztpl'));
        $instance->addEngine($this->get('templating.engine.twig'));
        return $instance;
    }
    protected function getTemplating_Asset_PackageFactoryService()
    {
        return $this->services['templating.asset.package_factory'] = new \Symfony\Bundle\FrameworkBundle\Templating\Asset\PackageFactory($this);
    }
    protected function getTemplating_Engine_EztplService()
    {
        return $this->services['templating.engine.eztpl'] = new \eZ\Publish\Core\MVC\Legacy\Templating\LegacyEngine($this->get('ezpublish_legacy.kernel.lazy'), $this->get('ezpublish_legacy.templating.delegating_converter'));
    }
    protected function getTemplating_FilenameParserService()
    {
        return $this->services['templating.filename_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateFilenameParser();
    }
    protected function getTemplating_GlobalsService()
    {
        return $this->services['templating.globals'] = new \Symfony\Bundle\FrameworkBundle\Templating\GlobalVariables($this);
    }
    protected function getTemplating_Helper_ActionsService()
    {
        return $this->services['templating.helper.actions'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\ActionsHelper($this->get('fragment.handler'));
    }
    protected function getTemplating_Helper_AssetsService()
    {
        if (!isset($this->scopedServices['request'])) {
            throw new InactiveScopeException('templating.helper.assets', 'request');
        }
        return $this->services['templating.helper.assets'] = $this->scopedServices['request']['templating.helper.assets'] = new \Symfony\Component\Templating\Helper\CoreAssetsHelper(new \Symfony\Bundle\FrameworkBundle\Templating\Asset\PathPackage($this->get('request'), NULL, '%s?%s'), array());
    }
    protected function getTemplating_Helper_CodeService()
    {
        return $this->services['templating.helper.code'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\CodeHelper(NULL, '/var/www/ayaville/ezpublish', 'UTF-8');
    }
    protected function getTemplating_Helper_FormService()
    {
        $a = new \Symfony\Bundle\FrameworkBundle\Templating\PhpEngine($this->get('templating.name_parser'), $this, $this->get('templating.loader'), $this->get('templating.globals'));
        $a->setCharset('UTF-8');
        $a->setHelpers(array('slots' => 'templating.helper.slots', 'assets' => 'templating.helper.assets', 'request' => 'templating.helper.request', 'session' => 'templating.helper.session', 'router' => 'templating.helper.router', 'actions' => 'templating.helper.actions', 'code' => 'templating.helper.code', 'translator' => 'templating.helper.translator', 'form' => 'templating.helper.form', 'stopwatch' => 'templating.helper.stopwatch', 'logout_url' => 'templating.helper.logout_url', 'security' => 'templating.helper.security', 'assetic' => 'assetic.helper.static', 'imagine' => 'liip_imagine.templating.helper', 'breadcrumbs' => 'white_october_breadcrumbs.helper'));
        return $this->services['templating.helper.form'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\FormHelper(new \Symfony\Component\Form\FormRenderer(new \Symfony\Component\Form\Extension\Templating\TemplatingRendererEngine($a, array(0 => 'FrameworkBundle:Form')), $this->get('form.csrf_provider', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
    }
    protected function getTemplating_Helper_LogoutUrlService()
    {
        $this->services['templating.helper.logout_url'] = $instance = new \Symfony\Bundle\SecurityBundle\Templating\Helper\LogoutUrlHelper($this, $this->get('ezpublish.chain_router'));
        $instance->registerListener('ezpublish_front', '/logout', 'logout', '_csrf_token', NULL);
        return $instance;
    }
    protected function getTemplating_Helper_RequestService()
    {
        return $this->services['templating.helper.request'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\RequestHelper($this->get('request_stack'));
    }
    protected function getTemplating_Helper_RouterService()
    {
        return $this->services['templating.helper.router'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\RouterHelper($this->get('ezpublish.chain_router'));
    }
    protected function getTemplating_Helper_SecurityService()
    {
        return $this->services['templating.helper.security'] = new \Symfony\Bundle\SecurityBundle\Templating\Helper\SecurityHelper($this->get('security.context', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getTemplating_Helper_SessionService()
    {
        return $this->services['templating.helper.session'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\SessionHelper($this->get('request_stack'));
    }
    protected function getTemplating_Helper_SlotsService()
    {
        return $this->services['templating.helper.slots'] = new \Symfony\Component\Templating\Helper\SlotsHelper();
    }
    protected function getTemplating_Helper_StopwatchService()
    {
        return $this->services['templating.helper.stopwatch'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\StopwatchHelper(NULL);
    }
    protected function getTemplating_Helper_TranslatorService()
    {
        return $this->services['templating.helper.translator'] = new \Symfony\Bundle\FrameworkBundle\Templating\Helper\TranslatorHelper($this->get('translator'));
    }
    protected function getTemplating_LoaderService()
    {
        return $this->services['templating.loader'] = new \Symfony\Bundle\FrameworkBundle\Templating\Loader\FilesystemLoader($this->get('templating.locator'));
    }
    protected function getTemplating_NameParserService()
    {
        return $this->services['templating.name_parser'] = new \Symfony\Bundle\FrameworkBundle\Templating\TemplateNameParser($this->get('kernel'));
    }
    protected function getTranslation_Dumper_CsvService()
    {
        return $this->services['translation.dumper.csv'] = new \Symfony\Component\Translation\Dumper\CsvFileDumper();
    }
    protected function getTranslation_Dumper_IniService()
    {
        return $this->services['translation.dumper.ini'] = new \Symfony\Component\Translation\Dumper\IniFileDumper();
    }
    protected function getTranslation_Dumper_JsonService()
    {
        return $this->services['translation.dumper.json'] = new \Symfony\Component\Translation\Dumper\JsonFileDumper();
    }
    protected function getTranslation_Dumper_MoService()
    {
        return $this->services['translation.dumper.mo'] = new \Symfony\Component\Translation\Dumper\MoFileDumper();
    }
    protected function getTranslation_Dumper_PhpService()
    {
        return $this->services['translation.dumper.php'] = new \Symfony\Component\Translation\Dumper\PhpFileDumper();
    }
    protected function getTranslation_Dumper_PoService()
    {
        return $this->services['translation.dumper.po'] = new \Symfony\Component\Translation\Dumper\PoFileDumper();
    }
    protected function getTranslation_Dumper_QtService()
    {
        return $this->services['translation.dumper.qt'] = new \Symfony\Component\Translation\Dumper\QtFileDumper();
    }
    protected function getTranslation_Dumper_ResService()
    {
        return $this->services['translation.dumper.res'] = new \Symfony\Component\Translation\Dumper\IcuResFileDumper();
    }
    protected function getTranslation_Dumper_XliffService()
    {
        return $this->services['translation.dumper.xliff'] = new \Symfony\Component\Translation\Dumper\XliffFileDumper();
    }
    protected function getTranslation_Dumper_YmlService()
    {
        return $this->services['translation.dumper.yml'] = new \Symfony\Component\Translation\Dumper\YamlFileDumper();
    }
    protected function getTranslation_ExtractorService()
    {
        $this->services['translation.extractor'] = $instance = new \Symfony\Component\Translation\Extractor\ChainExtractor();
        $instance->addExtractor('php', $this->get('translation.extractor.php'));
        $instance->addExtractor('twig', $this->get('twig.translation.extractor'));
        return $instance;
    }
    protected function getTranslation_Extractor_PhpService()
    {
        return $this->services['translation.extractor.php'] = new \Symfony\Bundle\FrameworkBundle\Translation\PhpExtractor();
    }
    protected function getTranslation_LoaderService()
    {
        $a = $this->get('translation.loader.xliff');
        $this->services['translation.loader'] = $instance = new \Symfony\Bundle\FrameworkBundle\Translation\TranslationLoader();
        $instance->addLoader('php', $this->get('translation.loader.php'));
        $instance->addLoader('yml', $this->get('translation.loader.yml'));
        $instance->addLoader('xlf', $a);
        $instance->addLoader('xliff', $a);
        $instance->addLoader('po', $this->get('translation.loader.po'));
        $instance->addLoader('mo', $this->get('translation.loader.mo'));
        $instance->addLoader('ts', $this->get('translation.loader.qt'));
        $instance->addLoader('csv', $this->get('translation.loader.csv'));
        $instance->addLoader('res', $this->get('translation.loader.res'));
        $instance->addLoader('dat', $this->get('translation.loader.dat'));
        $instance->addLoader('ini', $this->get('translation.loader.ini'));
        $instance->addLoader('json', $this->get('translation.loader.json'));
        return $instance;
    }
    protected function getTranslation_Loader_CsvService()
    {
        return $this->services['translation.loader.csv'] = new \Symfony\Component\Translation\Loader\CsvFileLoader();
    }
    protected function getTranslation_Loader_DatService()
    {
        return $this->services['translation.loader.dat'] = new \Symfony\Component\Translation\Loader\IcuDatFileLoader();
    }
    protected function getTranslation_Loader_IniService()
    {
        return $this->services['translation.loader.ini'] = new \Symfony\Component\Translation\Loader\IniFileLoader();
    }
    protected function getTranslation_Loader_JsonService()
    {
        return $this->services['translation.loader.json'] = new \Symfony\Component\Translation\Loader\JsonFileLoader();
    }
    protected function getTranslation_Loader_MoService()
    {
        return $this->services['translation.loader.mo'] = new \Symfony\Component\Translation\Loader\MoFileLoader();
    }
    protected function getTranslation_Loader_PhpService()
    {
        return $this->services['translation.loader.php'] = new \Symfony\Component\Translation\Loader\PhpFileLoader();
    }
    protected function getTranslation_Loader_PoService()
    {
        return $this->services['translation.loader.po'] = new \Symfony\Component\Translation\Loader\PoFileLoader();
    }
    protected function getTranslation_Loader_QtService()
    {
        return $this->services['translation.loader.qt'] = new \Symfony\Component\Translation\Loader\QtFileLoader();
    }
    protected function getTranslation_Loader_ResService()
    {
        return $this->services['translation.loader.res'] = new \Symfony\Component\Translation\Loader\IcuResFileLoader();
    }
    protected function getTranslation_Loader_XliffService()
    {
        return $this->services['translation.loader.xliff'] = new \Symfony\Component\Translation\Loader\XliffFileLoader();
    }
    protected function getTranslation_Loader_YmlService()
    {
        return $this->services['translation.loader.yml'] = new \Symfony\Component\Translation\Loader\YamlFileLoader();
    }
    protected function getTranslation_WriterService()
    {
        $this->services['translation.writer'] = $instance = new \Symfony\Component\Translation\Writer\TranslationWriter();
        $instance->addDumper('php', $this->get('translation.dumper.php'));
        $instance->addDumper('xlf', $this->get('translation.dumper.xliff'));
        $instance->addDumper('po', $this->get('translation.dumper.po'));
        $instance->addDumper('mo', $this->get('translation.dumper.mo'));
        $instance->addDumper('yml', $this->get('translation.dumper.yml'));
        $instance->addDumper('ts', $this->get('translation.dumper.qt'));
        $instance->addDumper('csv', $this->get('translation.dumper.csv'));
        $instance->addDumper('ini', $this->get('translation.dumper.ini'));
        $instance->addDumper('json', $this->get('translation.dumper.json'));
        $instance->addDumper('res', $this->get('translation.dumper.res'));
        return $instance;
    }
    protected function getTranslatorService()
    {
        return $this->services['translator'] = new \Symfony\Component\Translation\IdentityTranslator($this->get('translator.selector'));
    }
    protected function getTranslator_DefaultService()
    {
        return $this->services['translator.default'] = new \Symfony\Bundle\FrameworkBundle\Translation\Translator($this, $this->get('translator.selector'), array('translation.loader.php' => array(0 => 'php'), 'translation.loader.yml' => array(0 => 'yml'), 'translation.loader.xliff' => array(0 => 'xlf', 1 => 'xliff'), 'translation.loader.po' => array(0 => 'po'), 'translation.loader.mo' => array(0 => 'mo'), 'translation.loader.qt' => array(0 => 'ts'), 'translation.loader.csv' => array(0 => 'csv'), 'translation.loader.res' => array(0 => 'res'), 'translation.loader.dat' => array(0 => 'dat'), 'translation.loader.ini' => array(0 => 'ini'), 'translation.loader.json' => array(0 => 'json')), array('cache_dir' => '/var/www/ayaville/ezpublish/cache/prod/translations', 'debug' => false));
    }
    protected function getTwigService()
    {
        $this->services['twig'] = $instance = new \eZ\Publish\Core\MVC\Legacy\Templating\Twig\Environment($this->get('twig.loader'), array('debug' => false, 'strict_variables' => false, 'exception_controller' => 'twig.controller.exception:showAction', 'autoescape_service' => NULL, 'autoescape_service_method' => NULL, 'cache' => '/var/www/ayaville/ezpublish/cache/prod/twig', 'charset' => 'UTF-8', 'paths' => array()));
        $instance->addExtension(new \Symfony\Bundle\SecurityBundle\Twig\Extension\LogoutUrlExtension($this->get('templating.helper.logout_url')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\SecurityExtension($this->get('security.context', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\TranslationExtension($this->get('translator')));
        $instance->addExtension(new \Symfony\Bundle\TwigBundle\Extension\AssetsExtension($this, $this->get('router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE)));
        $instance->addExtension(new \Symfony\Bundle\TwigBundle\Extension\ActionsExtension($this));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\CodeExtension(NULL, '/var/www/ayaville/ezpublish', 'UTF-8'));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\RoutingExtension($this->get('ezpublish.chain_router')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\YamlExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\StopwatchExtension(NULL));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\ExpressionExtension());
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\HttpKernelExtension($this->get('fragment.handler')));
        $instance->addExtension(new \Symfony\Bridge\Twig\Extension\FormExtension(new \Symfony\Bridge\Twig\Form\TwigRenderer(new \Symfony\Bridge\Twig\Form\TwigRendererEngine(array(0 => 'form_div_layout.html.twig', 1 => 'LiipImagineBundle:Form:form_div_layout.html.twig')), $this->get('form.csrf_provider', ContainerInterface::NULL_ON_INVALID_REFERENCE))));
        $instance->addExtension(new \Symfony\Bundle\AsseticBundle\Twig\AsseticExtension($this->get('assetic.asset_factory'), $this->get('templating.name_parser'), false, array(), array(0 => 'eZDemoBundle'), new \Symfony\Bundle\AsseticBundle\DefaultValueSupplier($this)));
        $instance->addExtension(new \Doctrine\Bundle\DoctrineBundle\Twig\DoctrineExtension());
        $instance->addExtension(new \Liip\ImagineBundle\Templating\ImagineExtension($this->get('liip_imagine.cache.manager')));
        $instance->addExtension($this->get('twig.extension.intl'));
        $instance->addExtension($this->get('ezpublish.twig.extension.content'));
        $instance->addExtension($this->get('ezpublish.twig.extension.core'));
        $instance->addExtension($this->get('ezpublish.twig.extension.filesize'));
        $instance->addExtension($this->get('ezpublish.templating.extension.routing'));
        $instance->addExtension($this->get('ezpublish_legacy.twig.extension'));
        $instance->addExtension($this->get('ez_comments.twig.extension'));
        $instance->addExtension(new \WhiteOctober\PagerfantaBundle\Twig\PagerfantaExtension($this));
        $instance->addExtension($this->get('white_october_breadcrumbs.twig'));
        $instance->addExtension(new \Knp\Menu\Twig\MenuExtension(new \Knp\Menu\Twig\Helper($this->get('knp_menu.renderer_provider'), $this->get('knp_menu.menu_provider'))));
        $instance->addGlobal('app', $this->get('templating.globals'));
        $instance->setEzLegacyEngine($this->get('templating.engine.eztpl'));
        return $instance;
    }
    protected function getTwig_Controller_ExceptionService()
    {
        return $this->services['twig.controller.exception'] = new \Symfony\Bundle\TwigBundle\Controller\ExceptionController($this->get('twig'), false);
    }
    protected function getTwig_ExceptionListenerService()
    {
        return $this->services['twig.exception_listener'] = new \Symfony\Component\HttpKernel\EventListener\ExceptionListener('twig.controller.exception:showAction', $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getTwig_Extension_IntlService()
    {
        return $this->services['twig.extension.intl'] = new \Twig_Extensions_Extension_Intl();
    }
    protected function getTwig_LoaderService()
    {
        $a = new \Symfony\Bundle\TwigBundle\Loader\FilesystemLoader($this->get('templating.locator'), $this->get('templating.name_parser'));
        $a->addPath('/var/www/ayaville/vendor/symfony/symfony/src/Symfony/Bundle/FrameworkBundle/Resources/views', 'Framework');
        $a->addPath('/var/www/ayaville/vendor/symfony/symfony/src/Symfony/Bundle/SecurityBundle/Resources/views', 'Security');
        $a->addPath('/var/www/ayaville/vendor/symfony/symfony/src/Symfony/Bundle/TwigBundle/Resources/views', 'Twig');
        $a->addPath('/var/www/ayaville/vendor/symfony/swiftmailer-bundle/Symfony/Bundle/SwiftmailerBundle/Resources/views', 'Swiftmailer');
        $a->addPath('/var/www/ayaville/vendor/doctrine/doctrine-bundle/Resources/views', 'Doctrine');
        $a->addPath('/var/www/ayaville/vendor/tedivm/stash-bundle/Resources/views', 'TedivmStash');
        $a->addPath('/var/www/ayaville/vendor/liip/imagine-bundle/Liip/ImagineBundle/Resources/views', 'LiipImagine');
        $a->addPath('/var/www/ayaville/vendor/ezsystems/ezpublish-kernel/eZ/Bundle/EzPublishCoreBundle/Resources/views', 'EzPublishCore');
        $a->addPath('/var/www/ayaville/vendor/ezsystems/ezpublish-kernel/eZ/Bundle/EzPublishLegacyBundle/Resources/views', 'EzPublishLegacy');
        $a->addPath('/var/www/ayaville/vendor/ezsystems/demobundle/EzSystems/DemoBundle/Resources/views', 'eZDemo');
        $a->addPath('/var/www/ayaville/vendor/ezsystems/comments-bundle/EzSystems/CommentsBundle/Resources/views', 'EzSystemsComments');
        $a->addPath('/var/www/ayaville/vendor/whiteoctober/breadcrumbs-bundle/WhiteOctober/BreadcrumbsBundle/Resources/views', 'WhiteOctoberBreadcrumbs');
        $a->addPath('/var/www/ayaville/src/aYaline/HelloBundle/Resources/views', 'aYalineHello');
        $a->addPath('/var/www/ayaville/vendor/symfony/symfony/src/Symfony/Bridge/Twig/Resources/views/Form');
        $a->addPath('/var/www/ayaville/vendor/knplabs/knp-menu/src/Knp/Menu/Resources/views');
        $this->services['twig.loader'] = $instance = new \Twig_Loader_Chain();
        $instance->addLoader($a);
        $instance->addLoader($this->get('twig.loader.string'));
        return $instance;
    }
    protected function getTwig_Loader_StringService()
    {
        return $this->services['twig.loader.string'] = new \eZ\Publish\Core\MVC\Symfony\Templating\Twig\LoaderString();
    }
    protected function getTwig_Translation_ExtractorService()
    {
        return $this->services['twig.translation.extractor'] = new \Symfony\Bridge\Twig\Translation\TwigExtractor($this->get('twig'));
    }
    protected function getUriSignerService()
    {
        return $this->services['uri_signer'] = new \Symfony\Component\HttpKernel\UriSigner('b77af066f4a98c73649c30857ee81c77a388a9c3');
    }
    protected function getValidatorService()
    {
        return $this->services['validator'] = $this->get('validator.builder')->getValidator();
    }
    protected function getValidator_BuilderService()
    {
        $this->services['validator.builder'] = $instance = \Symfony\Component\Validator\Validation::createValidatorBuilder();
        $instance->setConstraintValidatorFactory(new \Symfony\Bundle\FrameworkBundle\Validator\ConstraintValidatorFactory($this, array('validator.expression' => 'validator.expression', 'Symfony\\Component\\Validator\\Constraints\\EmailValidator' => 'validator.email', 'security.validator.user_password' => 'security.validator.user_password')));
        $instance->setTranslator($this->get('translator'));
        $instance->setTranslationDomain('validators');
        $instance->addXmlMappings(array(0 => '/var/www/ayaville/vendor/symfony/symfony/src/Symfony/Component/Form/Resources/config/validation.xml'));
        $instance->enableAnnotationMapping($this->get('annotation_reader'));
        $instance->addMethodMapping('loadValidatorMetadata');
        $instance->setApiVersion(3);
        $instance->addObjectInitializers(array());
        return $instance;
    }
    protected function getValidator_EmailService()
    {
        return $this->services['validator.email'] = new \Symfony\Component\Validator\Constraints\EmailValidator(false);
    }
    protected function getValidator_ExpressionService()
    {
        return $this->services['validator.expression'] = new \Symfony\Component\Validator\Constraints\ExpressionValidator($this->get('property_accessor'));
    }
    protected function getWhiteOctoberBreadcrumbsService()
    {
        return $this->services['white_october_breadcrumbs'] = new \WhiteOctober\BreadcrumbsBundle\Model\Breadcrumbs();
    }
    protected function getWhiteOctoberBreadcrumbs_HelperService()
    {
        return $this->services['white_october_breadcrumbs.helper'] = new \WhiteOctober\BreadcrumbsBundle\Templating\Helper\BreadcrumbsHelper($this->get('templating'), $this->get('white_october_breadcrumbs'), array('separator' => '/', 'separatorClass' => 'separator', 'listId' => 'wo-breadcrumbs', 'listClass' => 'breadcrumb', 'itemClass' => '', 'linkRel' => '', 'locale' => NULL, 'translation_domain' => NULL, 'viewTemplate' => 'WhiteOctoberBreadcrumbsBundle::breadcrumbs.html.twig'));
    }
    protected function getWhiteOctoberBreadcrumbs_TwigService()
    {
        return $this->services['white_october_breadcrumbs.twig'] = new \WhiteOctober\BreadcrumbsBundle\Twig\Extension\BreadcrumbsExtension($this);
    }
    protected function getWhiteOctoberPagerfanta_ViewFactoryService()
    {
        $a = $this->get('translator');
        $b = new \Pagerfanta\View\DefaultView();
        $c = new \Pagerfanta\View\TwitterBootstrapView();
        $d = new \Pagerfanta\View\TwitterBootstrap3View();
        $this->services['white_october_pagerfanta.view_factory'] = $instance = new \Pagerfanta\View\ViewFactory(array());
        $instance->add(array('default' => $b, 'default_translated' => new \WhiteOctober\PagerfantaBundle\View\DefaultTranslatedView($b, $a), 'twitter_bootstrap' => $c, 'twitter_bootstrap3' => $d, 'twitter_bootstrap3_translated' => new \WhiteOctober\PagerfantaBundle\View\TwitterBootstrap3TranslatedView($d, $a), 'twitter_bootstrap_translated' => new \WhiteOctober\PagerfantaBundle\View\TwitterBootstrapTranslatedView($c, $a)));
        return $instance;
    }
    protected function synchronizeEzpublish_ConfigResolver_Fake_BinaryDirService()
    {
        if ($this->initialized('ezpublish.fieldtype.ezbinaryfile.io_service')) {
            $this->get('ezpublish.fieldtype.ezbinaryfile.io_service')->setPrefix($this->get('ezpublish.config_resolver.fake.binary_dir__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
    }
    protected function synchronizeEzpublish_ConfigResolver_Fake_Image_PublishedImagesDirService()
    {
        if ($this->initialized('ezpublish.fieldtype.ezimage.io_service.options_provider')) {
            $this->get('ezpublish.fieldtype.ezimage.io_service.options_provider')->setPublishedImagesDir($this->get('ezpublish.config_resolver.fake.image.published_images_dir__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        if ($this->initialized('ezpublish.fieldtype.ezimage.io_service.published')) {
            $this->get('ezpublish.fieldtype.ezimage.io_service.published')->setPrefix($this->get('ezpublish.config_resolver.fake.image.published_images_dir__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
    }
    protected function synchronizeEzpublish_ConfigResolver_Fake_Image_VersionedImagesDirService()
    {
        if ($this->initialized('ezpublish.fieldtype.ezimage.io_service.options_provider')) {
            $this->get('ezpublish.fieldtype.ezimage.io_service.options_provider')->setDraftImagesDir($this->get('ezpublish.config_resolver.fake.image.versioned_images_dir__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
        if ($this->initialized('ezpublish.fieldtype.ezimage.io_service.draft')) {
            $this->get('ezpublish.fieldtype.ezimage.io_service.draft')->setPrefix($this->get('ezpublish.config_resolver.fake.image.versioned_images_dir__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
    }
    protected function synchronizeEzpublish_ConfigResolver_Fake_Io_LegacyUrlPrefixService()
    {
        if ($this->initialized('ezpublish.core.io.image_fieldtype.legacy_url_decorator')) {
            $this->get('ezpublish.core.io.image_fieldtype.legacy_url_decorator')->setPrefix($this->get('ezpublish.config_resolver.fake.io.legacy_url_prefix__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
    }
    protected function synchronizeEzpublish_ConfigResolver_Fake_Io_UrlPrefixService()
    {
        if ($this->initialized('ezpublish.core.io.prefix_url_decorator')) {
            $this->get('ezpublish.core.io.prefix_url_decorator')->setPrefix($this->get('ezpublish.config_resolver.fake.io.url_prefix__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
    }
    protected function synchronizeEzpublish_ConfigResolver_Fake_StorageDirService()
    {
        if ($this->initialized('ezpublish.fieldtype.ezimage.io_service.options_provider')) {
            $this->get('ezpublish.fieldtype.ezimage.io_service.options_provider')->setStorageDir($this->get('ezpublish.config_resolver.fake.storage_dir__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
    }
    protected function synchronizeEzpublish_ConfigResolver_Fake_VarDirService()
    {
        if ($this->initialized('ezpublish.fieldtype.ezimage.io_service.options_provider')) {
            $this->get('ezpublish.fieldtype.ezimage.io_service.options_provider')->setVarDir($this->get('ezpublish.config_resolver.fake.var_dir__', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        }
    }
    protected function synchronizeEzpublish_SiteaccessService()
    {
        if ($this->initialized('fragment.renderer.inline')) {
            $this->get('fragment.renderer.inline')->setSiteAccess($this->get('ezpublish.siteaccess'));
        }
        if ($this->initialized('fragment.renderer.hinclude')) {
            $this->get('fragment.renderer.hinclude')->setSiteAccess($this->get('ezpublish.siteaccess'));
        }
        if ($this->initialized('fragment.renderer.esi')) {
            $this->get('fragment.renderer.esi')->setSiteAccess($this->get('ezpublish.siteaccess'));
        }
        if ($this->initialized('router.default')) {
            $this->get('router.default')->setSiteAccess($this->get('ezpublish.siteaccess'));
        }
        if ($this->initialized('security.http_utils')) {
            $this->get('security.http_utils')->setSiteAccess($this->get('ezpublish.siteaccess'));
        }
        if ($this->initialized('ezpublish.config.resolver.core')) {
            $this->get('ezpublish.config.resolver.core')->setSiteAccess($this->get('ezpublish.siteaccess'));
        }
        if ($this->initialized('ezpublish.urlalias_generator')) {
                    if ($this->has('ezpublish.siteaccess')) {
    $this->get('ezpublish.urlalias_generator')->setSiteAccess($this->get('ezpublish.siteaccess', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish.content_preview_helper')) {
            $this->get('ezpublish.content_preview_helper')->setSiteAccess($this->get('ezpublish.siteaccess'));
        }
        if ($this->initialized('ezpublish_legacy.url_generator')) {
                    if ($this->has('ezpublish.siteaccess')) {
    $this->get('ezpublish_legacy.url_generator')->setSiteAccess($this->get('ezpublish.siteaccess', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
    }
    protected function synchronizeRequestService()
    {
        if ($this->initialized('ezpublish.controller.content.preview.core')) {
                    if ($this->has('request')) {
    $this->get('ezpublish.controller.content.preview.core')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish.fragment_listener.factory')) {
                    if ($this->has('request')) {
    $this->get('ezpublish.fragment_listener.factory')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish.security.controller')) {
                    if ($this->has('request')) {
    $this->get('ezpublish.security.controller')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish.route_reference.generator')) {
                    if ($this->has('request')) {
    $this->get('ezpublish.route_reference.generator')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish.fieldtype.ezdatetime.parameterprovider')) {
                    if ($this->has('request')) {
    $this->get('ezpublish.fieldtype.ezdatetime.parameterprovider')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish.templating.global_helper.core')) {
                    if ($this->has('request')) {
    $this->get('ezpublish.templating.global_helper.core')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_legacy.controller')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_legacy.controller')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_legacy.preview.controller')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_legacy.preview.controller')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_legacy.session_mapper')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_legacy.session_mapper')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish.templating.global_helper.legacy')) {
                    if ($this->has('request')) {
    $this->get('ezpublish.templating.global_helper.legacy')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_legacy.location_view_provider')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_legacy.location_view_provider')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_rest.factory')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_rest.factory')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_rest.controller.base')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_rest.controller.base')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_rest.controller.root')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_rest.controller.root')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_rest.controller.section')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_rest.controller.section')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_rest.controller.binary_content')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_rest.controller.binary_content')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_rest.controller.content')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_rest.controller.content')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_rest.controller.content_type')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_rest.controller.content_type')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_rest.controller.role')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_rest.controller.role')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_rest.controller.location')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_rest.controller.location')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_rest.controller.object_state')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_rest.controller.object_state')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_rest.controller.trash')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_rest.controller.trash')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_rest.controller.user')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_rest.controller.user')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_rest.controller.url_wildcard')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_rest.controller.url_wildcard')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_rest.controller.url_alias')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_rest.controller.url_alias')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_rest.controller.options')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_rest.controller.options')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ezpublish_rest.output.value_object_visitor.cached_value')) {
                    if ($this->has('request')) {
    $this->get('ezpublish_rest.output.value_object_visitor.cached_value')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ez_comments.twig.extension')) {
                    if ($this->has('request')) {
    $this->get('ez_comments.twig.extension')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
        if ($this->initialized('ez_comments.controller.comments_renderer')) {
                    if ($this->has('request')) {
    $this->get('ez_comments.controller.comments_renderer')->setRequest($this->get('request', ContainerInterface::NULL_ON_INVALID_REFERENCE));        }
        }
    }
    protected function getAssetic_AssetFactoryService()
    {
        $this->services['assetic.asset_factory'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\Assetic\AssetFactory($this->get('kernel'), $this, $this->getParameterBag(), '/var/www/ayaville/ezpublish/../web', false);
        $instance->setConfigResolver($this->get('ezpublish.config.resolver.chain'));
        $instance->setDynamicSettingParser($this->get('ezpublish.config.dynamic_setting.parser'));
        return $instance;
    }
    protected function getControllerNameConverterService()
    {
        return $this->services['controller_name_converter'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerNameParser($this->get('kernel'));
    }
    protected function getControllerResolverService()
    {
        return $this->services['controller_resolver'] = new \Symfony\Bundle\FrameworkBundle\Controller\ControllerResolver($this, $this->get('controller_name_converter'), $this->get('monolog.logger.request', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getEzpublish_Api_StorageEngineService()
    {
        return $this->services['ezpublish.api.storage_engine'] = $this->get('ezpublish.api.storage_engine.factory')->buildStorageEngine();
    }
    protected function getRouter_DefaultService()
    {
        $this->services['router.default'] = $instance = new \eZ\Bundle\EzPublishCoreBundle\Routing\DefaultRouter($this, '/var/www/ayaville/ezpublish/config/routing.yml', array('cache_dir' => '/var/www/ayaville/ezpublish/cache/prod', 'debug' => false, 'generator_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator', 'generator_base_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator', 'generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\PhpGeneratorDumper', 'generator_cache_class' => 'ezpublishProdUrlGenerator', 'matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_base_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher', 'matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\PhpMatcherDumper', 'matcher_cache_class' => 'ezpublishProdUrlMatcher', 'strict_requirements' => NULL), $this->get('router.request_context', ContainerInterface::NULL_ON_INVALID_REFERENCE), $this->get('monolog.logger.router', ContainerInterface::NULL_ON_INVALID_REFERENCE));
        $instance->setSiteAccess($this->get('ezpublish.siteaccess'));
        $instance->setConfigResolver($this->get('ezpublish.config.resolver.chain'));
        $instance->setNonSiteAccessAwareRoutes(array(0 => '_assetic_', 1 => '_wdt', 2 => '_profiler', 3 => '_configurator_'));
        $instance->setLegacyAwareRoutes(array(0 => '_ezpublishLegacyTreeMenu', 1 => 'ezpublish_rest_', 2 => '_ezpublishPreviewContent', 3 => '_wdt', 4 => '_profiler', 5 => '_assetic'));
        $instance->setSiteAccessRouter($this->get('ezpublish.siteaccess_router'));
        return $instance;
    }
    protected function getRouter_RequestContextService()
    {
        return $this->services['router.request_context'] = new \Symfony\Component\Routing\RequestContext('', 'GET', 'localhost', 'http', 80, 443);
    }
    protected function getSecurity_Access_DecisionManagerService()
    {
        $a = $this->get('ezpublish.signalslot.repository');
        $b = $this->get('security.authentication.trust_resolver');
        $c = $this->get('security.role_hierarchy');
        return $this->services['security.access.decision_manager'] = new \Symfony\Component\Security\Core\Authorization\AccessDecisionManager(array(0 => new \eZ\Publish\Core\MVC\Symfony\Security\Authorization\Voter\ValueObjectVoter($a), 1 => new \eZ\Publish\Core\MVC\Symfony\Security\Authorization\Voter\CoreVoter($a), 2 => new \Symfony\Component\Security\Core\Authorization\Voter\ExpressionVoter(new \Symfony\Component\Security\Core\Authorization\ExpressionLanguage(), $b, $c), 3 => new \Symfony\Component\Security\Core\Authorization\Voter\RoleHierarchyVoter($c), 4 => new \Symfony\Component\Security\Core\Authorization\Voter\AuthenticatedVoter($b)), 'affirmative', false, true);
    }
    protected function getSecurity_AccessListenerService()
    {
        return $this->services['security.access_listener'] = new \Symfony\Component\Security\Http\Firewall\AccessListener($this->get('security.context'), $this->get('security.access.decision_manager'), $this->get('security.access_map'), $this->get('security.authentication.manager'));
    }
    protected function getSecurity_AccessMapService()
    {
        return $this->services['security.access_map'] = new \Symfony\Component\Security\Http\AccessMap();
    }
    protected function getSecurity_Authentication_ManagerService()
    {
        $a = $this->get('ezpublish.security.user_provider');
        $b = $this->get('security.encoder_factory');
        $c = $this->get('ezpublish.signalslot.repository');
        $d = $this->get('ezpublish.config.resolver.chain');
        $e = new \Symfony\Component\Security\Core\User\UserChecker();
        $f = new \eZ\Publish\Core\MVC\Symfony\Security\Authentication\RepositoryAuthenticationProvider($a, $e, 'ezpublish_rest', $b, true);
        $f->setRepository($c);
        $g = new \eZ\Publish\Core\MVC\Symfony\Security\Authentication\RepositoryAuthenticationProvider($a, $e, 'ezpublish_front', $b, true);
        $g->setRepository($c);
        $h = new \eZ\Publish\Core\MVC\Symfony\Security\Authentication\AnonymousAuthenticationProvider('5527874857d1b');
        $h->setRepository($c);
        $h->setConfigResolver($d);
        $i = new \eZ\Publish\Core\MVC\Symfony\Security\Authentication\AnonymousAuthenticationProvider('5527874857d1b');
        $i->setRepository($c);
        $i->setConfigResolver($d);
        $this->services['security.authentication.manager'] = $instance = new \Symfony\Component\Security\Core\Authentication\AuthenticationProviderManager(array(0 => $f, 1 => $g, 2 => $h, 3 => $i), true);
        $instance->setEventDispatcher($this->get('event_dispatcher'));
        return $instance;
    }
    protected function getSecurity_Authentication_TrustResolverService()
    {
        return $this->services['security.authentication.trust_resolver'] = new \Symfony\Component\Security\Core\Authentication\AuthenticationTrustResolver('Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken', 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken');
    }
    protected function getSecurity_ChannelListenerService()
    {
        return $this->services['security.channel_listener'] = new \Symfony\Component\Security\Http\Firewall\ChannelListener($this->get('security.access_map'), new \Symfony\Component\Security\Http\EntryPoint\RetryAuthenticationEntryPoint(80, 443), $this->get('monolog.logger.security', ContainerInterface::NULL_ON_INVALID_REFERENCE));
    }
    protected function getSecurity_HttpUtilsService()
    {
        $a = $this->get('ezpublish.chain_router', ContainerInterface::NULL_ON_INVALID_REFERENCE);
        $this->services['security.http_utils'] = $instance = new \eZ\Publish\Core\MVC\Symfony\Security\HttpUtils($a, $a);
        $instance->setSiteAccess($this->get('ezpublish.siteaccess'));
        return $instance;
    }
    protected function getSecurity_RoleHierarchyService()
    {
        return $this->services['security.role_hierarchy'] = new \Symfony\Component\Security\Core\Role\RoleHierarchy(array());
    }
    protected function getSession_Storage_MetadataBagService()
    {
        return $this->services['session.storage.metadata_bag'] = new \Symfony\Component\HttpFoundation\Session\Storage\MetadataBag('_sf2_meta', '0');
    }
    protected function getSwiftmailer_Mailer_Default_Transport_EventdispatcherService()
    {
        return $this->services['swiftmailer.mailer.default.transport.eventdispatcher'] = new \Swift_Events_SimpleEventDispatcher();
    }
    protected function getTemplating_Engine_TwigService()
    {
        $this->services['templating.engine.twig'] = $instance = new \Symfony\Bundle\TwigBundle\TwigEngine($this->get('twig'), $this->get('templating.name_parser'), $this->get('templating.locator'));
        $instance->setDefaultEscapingStrategy(array(0 => $instance, 1 => 'guessDefaultEscapingStrategy'));
        return $instance;
    }
    protected function getTemplating_LocatorService()
    {
        return $this->services['templating.locator'] = new \Symfony\Bundle\FrameworkBundle\Templating\Loader\TemplateLocator($this->get('file_locator'), '/var/www/ayaville/ezpublish/cache/prod');
    }
    protected function getTranslator_SelectorService()
    {
        return $this->services['translator.selector'] = new \Symfony\Component\Translation\MessageSelector();
    }
    public function getParameter($name)
    {
        $name = strtolower($name);
        if (!(isset($this->parameters[$name]) || array_key_exists($name, $this->parameters))) {
            throw new InvalidArgumentException(sprintf('The parameter "%s" must be defined.', $name));
        }
        return $this->parameters[$name];
    }
    public function hasParameter($name)
    {
        $name = strtolower($name);
        return isset($this->parameters[$name]) || array_key_exists($name, $this->parameters);
    }
    public function setParameter($name, $value)
    {
        throw new LogicException('Impossible to call set() on a frozen ParameterBag.');
    }
    public function getParameterBag()
    {
        if (null === $this->parameterBag) {
            $this->parameterBag = new FrozenParameterBag($this->parameters);
        }
        return $this->parameterBag;
    }
    protected function getDefaultParameters()
    {
        return array(
            'kernel.root_dir' => '/var/www/ayaville/ezpublish',
            'kernel.environment' => 'prod',
            'kernel.debug' => false,
            'kernel.name' => 'ezpublish',
            'kernel.cache_dir' => '/var/www/ayaville/ezpublish/cache/prod',
            'kernel.logs_dir' => '/var/www/ayaville/ezpublish/logs',
            'kernel.bundles' => array(
                'FrameworkBundle' => 'Symfony\\Bundle\\FrameworkBundle\\FrameworkBundle',
                'SecurityBundle' => 'Symfony\\Bundle\\SecurityBundle\\SecurityBundle',
                'TwigBundle' => 'Symfony\\Bundle\\TwigBundle\\TwigBundle',
                'MonologBundle' => 'Symfony\\Bundle\\MonologBundle\\MonologBundle',
                'SwiftmailerBundle' => 'Symfony\\Bundle\\SwiftmailerBundle\\SwiftmailerBundle',
                'AsseticBundle' => 'Symfony\\Bundle\\AsseticBundle\\AsseticBundle',
                'DoctrineBundle' => 'Doctrine\\Bundle\\DoctrineBundle\\DoctrineBundle',
                'SensioFrameworkExtraBundle' => 'Sensio\\Bundle\\FrameworkExtraBundle\\SensioFrameworkExtraBundle',
                'TedivmStashBundle' => 'Tedivm\\StashBundle\\TedivmStashBundle',
                'HautelookTemplatedUriBundle' => 'Hautelook\\TemplatedUriBundle\\HautelookTemplatedUriBundle',
                'LiipImagineBundle' => 'Liip\\ImagineBundle\\LiipImagineBundle',
                'FOSHttpCacheBundle' => 'FOS\\HttpCacheBundle\\FOSHttpCacheBundle',
                'EzPublishCoreBundle' => 'eZ\\Bundle\\EzPublishCoreBundle\\EzPublishCoreBundle',
                'EzPublishLegacyBundle' => 'eZ\\Bundle\\EzPublishLegacyBundle\\EzPublishLegacyBundle',
                'EzPublishIOBundle' => 'eZ\\Bundle\\EzPublishIOBundle\\EzPublishIOBundle',
                'eZDemoBundle' => 'EzSystems\\DemoBundle\\EzSystemsDemoBundle',
                'EzPublishRestBundle' => 'eZ\\Bundle\\EzPublishRestBundle\\EzPublishRestBundle',
                'EzSystemsCommentsBundle' => 'EzSystems\\CommentsBundle\\EzSystemsCommentsBundle',
                'EzSystemsNgsymfonytoolsBundle' => 'EzSystems\\NgsymfonytoolsBundle\\EzSystemsNgsymfonytoolsBundle',
                'WhiteOctoberPagerfantaBundle' => 'WhiteOctober\\PagerfantaBundle\\WhiteOctoberPagerfantaBundle',
                'WhiteOctoberBreadcrumbsBundle' => 'WhiteOctober\\BreadcrumbsBundle\\WhiteOctoberBreadcrumbsBundle',
                'NelmioCorsBundle' => 'Nelmio\\CorsBundle\\NelmioCorsBundle',
                'KnpMenuBundle' => 'Knp\\Bundle\\MenuBundle\\KnpMenuBundle',
                'OneupFlysystemBundle' => 'Oneup\\FlysystemBundle\\OneupFlysystemBundle',
                'aYalineHelloBundle' => 'aYaline\\HelloBundle\\aYalineHelloBundle',
            ),
            'kernel.charset' => 'UTF-8',
            'kernel.container_class' => 'ezpublishProdProjectContainer',
            'secret' => 'b77af066f4a98c73649c30857ee81c77a388a9c3',
            'locale_fallback' => 'en',
            'mailer_transport' => 'smtp',
            'mailer_host' => '127.0.0.1',
            'mailer_user' => NULL,
            'mailer_password' => NULL,
            'debug_toolbar' => true,
            'debug_redirects' => false,
            'use_assetic_controller' => true,
            'controller_resolver.class' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\ControllerResolver',
            'controller_name_converter.class' => 'Symfony\\Bundle\\FrameworkBundle\\Controller\\ControllerNameParser',
            'response_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\ResponseListener',
            'streamed_response_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\StreamedResponseListener',
            'locale_listener.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\LocaleListener',
            'event_dispatcher.class' => 'Symfony\\Component\\EventDispatcher\\ContainerAwareEventDispatcher',
            'http_kernel.class' => 'Symfony\\Component\\HttpKernel\\DependencyInjection\\ContainerAwareHttpKernel',
            'filesystem.class' => 'Symfony\\Component\\Filesystem\\Filesystem',
            'cache_warmer.class' => 'Symfony\\Component\\HttpKernel\\CacheWarmer\\CacheWarmerAggregate',
            'cache_clearer.class' => 'Symfony\\Component\\HttpKernel\\CacheClearer\\ChainCacheClearer',
            'file_locator.class' => 'Symfony\\Component\\HttpKernel\\Config\\FileLocator',
            'uri_signer.class' => 'Symfony\\Component\\HttpKernel\\UriSigner',
            'request_stack.class' => 'Symfony\\Component\\HttpFoundation\\RequestStack',
            'fragment.handler.class' => 'Symfony\\Component\\HttpKernel\\Fragment\\FragmentHandler',
            'fragment.renderer.inline.class' => 'Symfony\\Component\\HttpKernel\\Fragment\\InlineFragmentRenderer',
            'fragment.renderer.hinclude.class' => 'Symfony\\Bundle\\FrameworkBundle\\Fragment\\ContainerAwareHIncludeFragmentRenderer',
            'fragment.renderer.hinclude.global_template' => NULL,
            'fragment.renderer.esi.class' => 'Symfony\\Component\\HttpKernel\\Fragment\\EsiFragmentRenderer',
            'fragment.path' => '/_fragment',
            'translator.class' => 'Symfony\\Bundle\\FrameworkBundle\\Translation\\Translator',
            'translator.identity.class' => 'Symfony\\Component\\Translation\\IdentityTranslator',
            'translator.selector.class' => 'Symfony\\Component\\Translation\\MessageSelector',
            'translation.loader.php.class' => 'Symfony\\Component\\Translation\\Loader\\PhpFileLoader',
            'translation.loader.yml.class' => 'Symfony\\Component\\Translation\\Loader\\YamlFileLoader',
            'translation.loader.xliff.class' => 'Symfony\\Component\\Translation\\Loader\\XliffFileLoader',
            'translation.loader.po.class' => 'Symfony\\Component\\Translation\\Loader\\PoFileLoader',
            'translation.loader.mo.class' => 'Symfony\\Component\\Translation\\Loader\\MoFileLoader',
            'translation.loader.qt.class' => 'Symfony\\Component\\Translation\\Loader\\QtFileLoader',
            'translation.loader.csv.class' => 'Symfony\\Component\\Translation\\Loader\\CsvFileLoader',
            'translation.loader.res.class' => 'Symfony\\Component\\Translation\\Loader\\IcuResFileLoader',
            'translation.loader.dat.class' => 'Symfony\\Component\\Translation\\Loader\\IcuDatFileLoader',
            'translation.loader.ini.class' => 'Symfony\\Component\\Translation\\Loader\\IniFileLoader',
            'translation.loader.json.class' => 'Symfony\\Component\\Translation\\Loader\\JsonFileLoader',
            'translation.dumper.php.class' => 'Symfony\\Component\\Translation\\Dumper\\PhpFileDumper',
            'translation.dumper.xliff.class' => 'Symfony\\Component\\Translation\\Dumper\\XliffFileDumper',
            'translation.dumper.po.class' => 'Symfony\\Component\\Translation\\Dumper\\PoFileDumper',
            'translation.dumper.mo.class' => 'Symfony\\Component\\Translation\\Dumper\\MoFileDumper',
            'translation.dumper.yml.class' => 'Symfony\\Component\\Translation\\Dumper\\YamlFileDumper',
            'translation.dumper.qt.class' => 'Symfony\\Component\\Translation\\Dumper\\QtFileDumper',
            'translation.dumper.csv.class' => 'Symfony\\Component\\Translation\\Dumper\\CsvFileDumper',
            'translation.dumper.ini.class' => 'Symfony\\Component\\Translation\\Dumper\\IniFileDumper',
            'translation.dumper.json.class' => 'Symfony\\Component\\Translation\\Dumper\\JsonFileDumper',
            'translation.dumper.res.class' => 'Symfony\\Component\\Translation\\Dumper\\IcuResFileDumper',
            'translation.extractor.php.class' => 'Symfony\\Bundle\\FrameworkBundle\\Translation\\PhpExtractor',
            'translation.loader.class' => 'Symfony\\Bundle\\FrameworkBundle\\Translation\\TranslationLoader',
            'translation.extractor.class' => 'Symfony\\Component\\Translation\\Extractor\\ChainExtractor',
            'translation.writer.class' => 'Symfony\\Component\\Translation\\Writer\\TranslationWriter',
            'property_accessor.class' => 'Symfony\\Component\\PropertyAccess\\PropertyAccessor',
            'debug.errors_logger_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\ErrorsLoggerListener',
            'kernel.secret' => 'b77af066f4a98c73649c30857ee81c77a388a9c3',
            'kernel.http_method_override' => true,
            'kernel.trusted_hosts' => array(
            ),
            'kernel.trusted_proxies' => array(
            ),
            'kernel.default_locale' => 'en',
            'session.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Session',
            'session.flashbag.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Flash\\FlashBag',
            'session.attribute_bag.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Attribute\\AttributeBag',
            'session.storage.metadata_bag.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\MetadataBag',
            'session.metadata.storage_key' => '_sf2_meta',
            'session.storage.native.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\NativeSessionStorage',
            'session.storage.php_bridge.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\PhpBridgeSessionStorage',
            'session.storage.mock_file.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\MockFileSessionStorage',
            'session.handler.native_file.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\NativeFileSessionHandler',
            'session.handler.write_check.class' => 'Symfony\\Component\\HttpFoundation\\Session\\Storage\\Handler\\WriteCheckSessionHandler',
            'session_listener.class' => 'Symfony\\Bundle\\FrameworkBundle\\EventListener\\SessionListener',
            'session.storage.options' => array(
                'gc_probability' => 1,
            ),
            'session.save_path' => '/var/www/ayaville/ezpublish/cache/prod/sessions',
            'session.metadata.update_threshold' => '0',
            'security.secure_random.class' => 'Symfony\\Component\\Security\\Core\\Util\\SecureRandom',
            'form.resolved_type_factory.class' => 'Symfony\\Component\\Form\\ResolvedFormTypeFactory',
            'form.registry.class' => 'Symfony\\Component\\Form\\FormRegistry',
            'form.factory.class' => 'Symfony\\Component\\Form\\FormFactory',
            'form.extension.class' => 'Symfony\\Component\\Form\\Extension\\DependencyInjection\\DependencyInjectionExtension',
            'form.type_guesser.validator.class' => 'Symfony\\Component\\Form\\Extension\\Validator\\ValidatorTypeGuesser',
            'form.type_extension.form.request_handler.class' => 'Symfony\\Component\\Form\\Extension\\HttpFoundation\\HttpFoundationRequestHandler',
            'form.type_extension.csrf.enabled' => true,
            'form.type_extension.csrf.field_name' => 'ezxform_token',
            'security.csrf.token_generator.class' => 'Symfony\\Component\\Security\\Csrf\\TokenGenerator\\UriSafeTokenGenerator',
            'security.csrf.token_storage.class' => 'Symfony\\Component\\Security\\Csrf\\TokenStorage\\SessionTokenStorage',
            'security.csrf.token_manager.class' => 'Symfony\\Component\\Security\\Csrf\\CsrfTokenManager',
            'templating.engine.delegating.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\DelegatingEngine',
            'templating.name_parser.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\TemplateNameParser',
            'templating.filename_parser.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\TemplateFilenameParser',
            'templating.cache_warmer.template_paths.class' => 'Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\TemplatePathsCacheWarmer',
            'templating.locator.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Loader\\TemplateLocator',
            'templating.loader.filesystem.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Loader\\FilesystemLoader',
            'templating.loader.cache.class' => 'Symfony\\Component\\Templating\\Loader\\CacheLoader',
            'templating.loader.chain.class' => 'Symfony\\Component\\Templating\\Loader\\ChainLoader',
            'templating.finder.class' => 'Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\TemplateFinder',
            'templating.engine.php.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\PhpEngine',
            'templating.helper.slots.class' => 'Symfony\\Component\\Templating\\Helper\\SlotsHelper',
            'templating.helper.assets.class' => 'Symfony\\Component\\Templating\\Helper\\CoreAssetsHelper',
            'templating.helper.actions.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\ActionsHelper',
            'templating.helper.router.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\RouterHelper',
            'templating.helper.request.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\RequestHelper',
            'templating.helper.session.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\SessionHelper',
            'templating.helper.code.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\CodeHelper',
            'templating.helper.translator.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\TranslatorHelper',
            'templating.helper.form.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\FormHelper',
            'templating.helper.stopwatch.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Helper\\StopwatchHelper',
            'templating.form.engine.class' => 'Symfony\\Component\\Form\\Extension\\Templating\\TemplatingRendererEngine',
            'templating.form.renderer.class' => 'Symfony\\Component\\Form\\FormRenderer',
            'templating.globals.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\GlobalVariables',
            'templating.asset.path_package.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Asset\\PathPackage',
            'templating.asset.url_package.class' => 'Symfony\\Component\\Templating\\Asset\\UrlPackage',
            'templating.asset.package_factory.class' => 'Symfony\\Bundle\\FrameworkBundle\\Templating\\Asset\\PackageFactory',
            'templating.helper.code.file_link_format' => NULL,
            'templating.helper.form.resources' => array(
                0 => 'FrameworkBundle:Form',
            ),
            'templating.loader.cache.path' => NULL,
            'templating.engines' => array(
                0 => 'eztpl',
                1 => 'twig',
            ),
            'validator.class' => 'Symfony\\Component\\Validator\\ValidatorInterface',
            'validator.builder.class' => 'Symfony\\Component\\Validator\\ValidatorBuilderInterface',
            'validator.builder.factory.class' => 'Symfony\\Component\\Validator\\Validation',
            'validator.mapping.cache.apc.class' => 'Symfony\\Component\\Validator\\Mapping\\Cache\\ApcCache',
            'validator.mapping.cache.prefix' => '',
            'validator.validator_factory.class' => 'Symfony\\Bundle\\FrameworkBundle\\Validator\\ConstraintValidatorFactory',
            'validator.expression.class' => 'Symfony\\Component\\Validator\\Constraints\\ExpressionValidator',
            'validator.email.class' => 'Symfony\\Component\\Validator\\Constraints\\EmailValidator',
            'validator.translation_domain' => 'validators',
            'validator.api' => 3,
            'esi.class' => 'Symfony\\Component\\HttpKernel\\HttpCache\\Esi',
            'esi_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\EsiListener',
            'fragment.listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\FragmentListener',
            'data_collector.templates' => array(
            ),
            'router.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Routing\\DefaultRouter',
            'router.request_context.class' => 'Symfony\\Component\\Routing\\RequestContext',
            'routing.loader.class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\DelegatingLoader',
            'routing.resolver.class' => 'Symfony\\Component\\Config\\Loader\\LoaderResolver',
            'routing.loader.xml.class' => 'Symfony\\Component\\Routing\\Loader\\XmlFileLoader',
            'routing.loader.yml.class' => 'Symfony\\Component\\Routing\\Loader\\YamlFileLoader',
            'routing.loader.php.class' => 'Symfony\\Component\\Routing\\Loader\\PhpFileLoader',
            'router.options.generator_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator',
            'router.options.generator_base_class' => 'Symfony\\Component\\Routing\\Generator\\UrlGenerator',
            'router.options.generator_dumper_class' => 'Symfony\\Component\\Routing\\Generator\\Dumper\\PhpGeneratorDumper',
            'router.options.matcher_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher',
            'router.options.matcher_base_class' => 'Symfony\\Bundle\\FrameworkBundle\\Routing\\RedirectableUrlMatcher',
            'router.options.matcher_dumper_class' => 'Symfony\\Component\\Routing\\Matcher\\Dumper\\PhpMatcherDumper',
            'router.cache_warmer.class' => 'Symfony\\Bundle\\FrameworkBundle\\CacheWarmer\\RouterCacheWarmer',
            'router.options.matcher.cache_class' => 'ezpublishProdUrlMatcher',
            'router.options.generator.cache_class' => 'ezpublishProdUrlGenerator',
            'router_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\RouterListener',
            'router.request_context.host' => 'localhost',
            'router.request_context.scheme' => 'http',
            'router.request_context.base_url' => '',
            'router.resource' => '/var/www/ayaville/ezpublish/config/routing.yml',
            'router.cache_class_prefix' => 'ezpublishProd',
            'request_listener.http_port' => 80,
            'request_listener.https_port' => 443,
            'annotations.reader.class' => 'Doctrine\\Common\\Annotations\\AnnotationReader',
            'annotations.cached_reader.class' => 'Doctrine\\Common\\Annotations\\CachedReader',
            'annotations.file_cache_reader.class' => 'Doctrine\\Common\\Annotations\\FileCacheReader',
            'security.context.class' => 'Symfony\\Component\\Security\\Core\\SecurityContext',
            'security.user_checker.class' => 'Symfony\\Component\\Security\\Core\\User\\UserChecker',
            'security.encoder_factory.generic.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\EncoderFactory',
            'security.encoder.digest.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\MessageDigestPasswordEncoder',
            'security.encoder.plain.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\PlaintextPasswordEncoder',
            'security.encoder.pbkdf2.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\Pbkdf2PasswordEncoder',
            'security.encoder.bcrypt.class' => 'Symfony\\Component\\Security\\Core\\Encoder\\BCryptPasswordEncoder',
            'security.user.provider.in_memory.class' => 'Symfony\\Component\\Security\\Core\\User\\InMemoryUserProvider',
            'security.user.provider.in_memory.user.class' => 'Symfony\\Component\\Security\\Core\\User\\User',
            'security.user.provider.chain.class' => 'Symfony\\Component\\Security\\Core\\User\\ChainUserProvider',
            'security.authentication.trust_resolver.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationTrustResolver',
            'security.authentication.trust_resolver.anonymous_class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\AnonymousToken',
            'security.authentication.trust_resolver.rememberme_class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Token\\RememberMeToken',
            'security.authentication.manager.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\AuthenticationProviderManager',
            'security.authentication.session_strategy.class' => 'Symfony\\Component\\Security\\Http\\Session\\SessionAuthenticationStrategy',
            'security.access.decision_manager.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\AccessDecisionManager',
            'security.access.simple_role_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\RoleVoter',
            'security.access.authenticated_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\AuthenticatedVoter',
            'security.access.role_hierarchy_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\RoleHierarchyVoter',
            'security.access.expression_voter.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\Voter\\ExpressionVoter',
            'security.firewall.class' => 'Symfony\\Component\\Security\\Http\\Firewall',
            'security.firewall.map.class' => 'Symfony\\Bundle\\SecurityBundle\\Security\\FirewallMap',
            'security.firewall.context.class' => 'Symfony\\Bundle\\SecurityBundle\\Security\\FirewallContext',
            'security.matcher.class' => 'Symfony\\Component\\HttpFoundation\\RequestMatcher',
            'security.expression_matcher.class' => 'Symfony\\Component\\HttpFoundation\\ExpressionRequestMatcher',
            'security.role_hierarchy.class' => 'Symfony\\Component\\Security\\Core\\Role\\RoleHierarchy',
            'security.http_utils.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Security\\HttpUtils',
            'security.validator.user_password.class' => 'Symfony\\Component\\Security\\Core\\Validator\\Constraints\\UserPasswordValidator',
            'security.expression_language.class' => 'Symfony\\Component\\Security\\Core\\Authorization\\ExpressionLanguage',
            'security.authentication.retry_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\RetryAuthenticationEntryPoint',
            'security.channel_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\ChannelListener',
            'security.authentication.form_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\FormAuthenticationEntryPoint',
            'security.authentication.listener.form.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\UsernamePasswordFormAuthenticationListener',
            'security.authentication.listener.simple_form.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\SimpleFormAuthenticationListener',
            'security.authentication.listener.simple_preauth.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\SimplePreAuthenticationListener',
            'security.authentication.listener.basic.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\BasicAuthenticationListener',
            'security.authentication.basic_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\BasicAuthenticationEntryPoint',
            'security.authentication.listener.digest.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\DigestAuthenticationListener',
            'security.authentication.digest_entry_point.class' => 'Symfony\\Component\\Security\\Http\\EntryPoint\\DigestAuthenticationEntryPoint',
            'security.authentication.listener.x509.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\X509AuthenticationListener',
            'security.authentication.listener.anonymous.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\AnonymousAuthenticationListener',
            'security.authentication.switchuser_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\SwitchUserListener',
            'security.logout_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\LogoutListener',
            'security.logout.handler.session.class' => 'Symfony\\Component\\Security\\Http\\Logout\\SessionLogoutHandler',
            'security.logout.handler.cookie_clearing.class' => 'Symfony\\Component\\Security\\Http\\Logout\\CookieClearingLogoutHandler',
            'security.logout.success_handler.class' => 'Symfony\\Component\\Security\\Http\\Logout\\DefaultLogoutSuccessHandler',
            'security.access_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\AccessListener',
            'security.access_map.class' => 'Symfony\\Component\\Security\\Http\\AccessMap',
            'security.exception_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\ExceptionListener',
            'security.context_listener.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\ContextListener',
            'security.authentication.provider.dao.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Security\\Authentication\\RepositoryAuthenticationProvider',
            'security.authentication.provider.simple.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\SimpleAuthenticationProvider',
            'security.authentication.provider.pre_authenticated.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\PreAuthenticatedAuthenticationProvider',
            'security.authentication.provider.anonymous.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Security\\Authentication\\AnonymousAuthenticationProvider',
            'security.authentication.success_handler.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Security\\Authentication\\DefaultAuthenticationSuccessHandler',
            'security.authentication.failure_handler.class' => 'Symfony\\Component\\Security\\Http\\Authentication\\DefaultAuthenticationFailureHandler',
            'security.authentication.simple_success_failure_handler.class' => 'Symfony\\Component\\Security\\Http\\Authentication\\SimpleAuthenticationHandler',
            'security.authentication.provider.rememberme.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\Provider\\RememberMeAuthenticationProvider',
            'security.authentication.listener.rememberme.class' => 'Symfony\\Component\\Security\\Http\\Firewall\\RememberMeListener',
            'security.rememberme.token.provider.in_memory.class' => 'Symfony\\Component\\Security\\Core\\Authentication\\RememberMe\\InMemoryTokenProvider',
            'security.authentication.rememberme.services.persistent.class' => 'Symfony\\Component\\Security\\Http\\RememberMe\\PersistentTokenBasedRememberMeServices',
            'security.authentication.rememberme.services.simplehash.class' => 'Symfony\\Component\\Security\\Http\\RememberMe\\TokenBasedRememberMeServices',
            'security.rememberme.response_listener.class' => 'Symfony\\Component\\Security\\Http\\RememberMe\\ResponseListener',
            'templating.helper.logout_url.class' => 'Symfony\\Bundle\\SecurityBundle\\Templating\\Helper\\LogoutUrlHelper',
            'templating.helper.security.class' => 'Symfony\\Bundle\\SecurityBundle\\Templating\\Helper\\SecurityHelper',
            'twig.extension.logout_url.class' => 'Symfony\\Bundle\\SecurityBundle\\Twig\\Extension\\LogoutUrlExtension',
            'twig.extension.security.class' => 'Symfony\\Bridge\\Twig\\Extension\\SecurityExtension',
            'data_collector.security.class' => 'Symfony\\Bundle\\SecurityBundle\\DataCollector\\SecurityDataCollector',
            'security.access.denied_url' => NULL,
            'security.authentication.manager.erase_credentials' => true,
            'security.authentication.session_strategy.strategy' => 'migrate',
            'security.access.always_authenticate_before_granting' => false,
            'security.authentication.hide_user_not_found' => true,
            'security.role_hierarchy.roles' => array(
            ),
            'twig.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Templating\\Twig\\Environment',
            'twig.loader.filesystem.class' => 'Symfony\\Bundle\\TwigBundle\\Loader\\FilesystemLoader',
            'twig.loader.chain.class' => 'Twig_Loader_Chain',
            'templating.engine.twig.class' => 'Symfony\\Bundle\\TwigBundle\\TwigEngine',
            'twig.cache_warmer.class' => 'Symfony\\Bundle\\TwigBundle\\CacheWarmer\\TemplateCacheCacheWarmer',
            'twig.extension.trans.class' => 'Symfony\\Bridge\\Twig\\Extension\\TranslationExtension',
            'twig.extension.assets.class' => 'Symfony\\Bundle\\TwigBundle\\Extension\\AssetsExtension',
            'twig.extension.actions.class' => 'Symfony\\Bundle\\TwigBundle\\Extension\\ActionsExtension',
            'twig.extension.code.class' => 'Symfony\\Bridge\\Twig\\Extension\\CodeExtension',
            'twig.extension.routing.class' => 'Symfony\\Bridge\\Twig\\Extension\\RoutingExtension',
            'twig.extension.yaml.class' => 'Symfony\\Bridge\\Twig\\Extension\\YamlExtension',
            'twig.extension.form.class' => 'Symfony\\Bridge\\Twig\\Extension\\FormExtension',
            'twig.extension.httpkernel.class' => 'Symfony\\Bridge\\Twig\\Extension\\HttpKernelExtension',
            'twig.extension.debug.stopwatch.class' => 'Symfony\\Bridge\\Twig\\Extension\\StopwatchExtension',
            'twig.extension.expression.class' => 'Symfony\\Bridge\\Twig\\Extension\\ExpressionExtension',
            'twig.form.engine.class' => 'Symfony\\Bridge\\Twig\\Form\\TwigRendererEngine',
            'twig.form.renderer.class' => 'Symfony\\Bridge\\Twig\\Form\\TwigRenderer',
            'twig.translation.extractor.class' => 'Symfony\\Bridge\\Twig\\Translation\\TwigExtractor',
            'twig.exception_listener.class' => 'Symfony\\Component\\HttpKernel\\EventListener\\ExceptionListener',
            'twig.controller.exception.class' => 'Symfony\\Bundle\\TwigBundle\\Controller\\ExceptionController',
            'twig.exception_listener.controller' => 'twig.controller.exception:showAction',
            'twig.form.resources' => array(
                0 => 'form_div_layout.html.twig',
                1 => 'LiipImagineBundle:Form:form_div_layout.html.twig',
            ),
            'twig.options' => array(
                'debug' => false,
                'strict_variables' => false,
                'exception_controller' => 'twig.controller.exception:showAction',
                'autoescape_service' => NULL,
                'autoescape_service_method' => NULL,
                'cache' => '/var/www/ayaville/ezpublish/cache/prod/twig',
                'charset' => 'UTF-8',
                'paths' => array(
                ),
            ),
            'monolog.logger.class' => 'Symfony\\Bridge\\Monolog\\Logger',
            'monolog.gelf.publisher.class' => 'Gelf\\MessagePublisher',
            'monolog.gelfphp.publisher.class' => 'Gelf\\Publisher',
            'monolog.handler.stream.class' => 'Monolog\\Handler\\StreamHandler',
            'monolog.handler.console.class' => 'Symfony\\Bridge\\Monolog\\Handler\\ConsoleHandler',
            'monolog.handler.group.class' => 'Monolog\\Handler\\GroupHandler',
            'monolog.handler.buffer.class' => 'Monolog\\Handler\\BufferHandler',
            'monolog.handler.rotating_file.class' => 'Monolog\\Handler\\RotatingFileHandler',
            'monolog.handler.syslog.class' => 'Monolog\\Handler\\SyslogHandler',
            'monolog.handler.syslogudp.class' => 'Monolog\\Handler\\SyslogUdpHandler',
            'monolog.handler.null.class' => 'Monolog\\Handler\\NullHandler',
            'monolog.handler.test.class' => 'Monolog\\Handler\\TestHandler',
            'monolog.handler.gelf.class' => 'Monolog\\Handler\\GelfHandler',
            'monolog.handler.rollbar.class' => 'Monolog\\Handler\\RollbarHandler',
            'monolog.handler.flowdock.class' => 'Monolog\\Handler\\FlowdockHandler',
            'monolog.handler.browser_console.class' => 'Monolog\\Handler\\BrowserConsoleHandler',
            'monolog.handler.firephp.class' => 'Symfony\\Bridge\\Monolog\\Handler\\FirePHPHandler',
            'monolog.handler.chromephp.class' => 'Symfony\\Bridge\\Monolog\\Handler\\ChromePhpHandler',
            'monolog.handler.debug.class' => 'Symfony\\Bridge\\Monolog\\Handler\\DebugHandler',
            'monolog.handler.swift_mailer.class' => 'Symfony\\Bridge\\Monolog\\Handler\\SwiftMailerHandler',
            'monolog.handler.native_mailer.class' => 'Monolog\\Handler\\NativeMailerHandler',
            'monolog.handler.socket.class' => 'Monolog\\Handler\\SocketHandler',
            'monolog.handler.pushover.class' => 'Monolog\\Handler\\PushoverHandler',
            'monolog.handler.raven.class' => 'Monolog\\Handler\\RavenHandler',
            'monolog.handler.newrelic.class' => 'Monolog\\Handler\\NewRelicHandler',
            'monolog.handler.hipchat.class' => 'Monolog\\Handler\\HipChatHandler',
            'monolog.handler.cube.class' => 'Monolog\\Handler\\CubeHandler',
            'monolog.handler.amqp.class' => 'Monolog\\Handler\\AmqpHandler',
            'monolog.handler.error_log.class' => 'Monolog\\Handler\\ErrorLogHandler',
            'monolog.handler.loggly.class' => 'Monolog\\Handler\\LogglyHandler',
            'monolog.handler.logentries.class' => 'Monolog\\Handler\\LogEntriesHandler',
            'monolog.activation_strategy.not_found.class' => 'Symfony\\Bundle\\MonologBundle\\NotFoundActivationStrategy',
            'monolog.handler.fingers_crossed.class' => 'Monolog\\Handler\\FingersCrossedHandler',
            'monolog.handler.fingers_crossed.error_level_activation_strategy.class' => 'Monolog\\Handler\\FingersCrossed\\ErrorLevelActivationStrategy',
            'monolog.handler.filter.class' => 'Monolog\\Handler\\FilterHandler',
            'monolog.handler.mongo.class' => 'Monolog\\Handler\\MongoDBHandler',
            'monolog.mongo.client.class' => 'MongoClient',
            'monolog.swift_mailer.handlers' => array(
            ),
            'monolog.handlers_to_channels' => array(
                'monolog.handler.console' => NULL,
                'monolog.handler.main' => NULL,
            ),
            'swiftmailer.class' => 'Swift_Mailer',
            'swiftmailer.transport.sendmail.class' => 'Swift_Transport_SendmailTransport',
            'swiftmailer.transport.mail.class' => 'Swift_Transport_MailTransport',
            'swiftmailer.transport.failover.class' => 'Swift_Transport_FailoverTransport',
            'swiftmailer.plugin.redirecting.class' => 'Swift_Plugins_RedirectingPlugin',
            'swiftmailer.plugin.impersonate.class' => 'Swift_Plugins_ImpersonatePlugin',
            'swiftmailer.plugin.messagelogger.class' => 'Swift_Plugins_MessageLogger',
            'swiftmailer.plugin.antiflood.class' => 'Swift_Plugins_AntiFloodPlugin',
            'swiftmailer.transport.smtp.class' => 'Swift_Transport_EsmtpTransport',
            'swiftmailer.plugin.blackhole.class' => 'Swift_Plugins_BlackholePlugin',
            'swiftmailer.spool.file.class' => 'Swift_FileSpool',
            'swiftmailer.spool.memory.class' => 'Swift_MemorySpool',
            'swiftmailer.email_sender.listener.class' => 'Symfony\\Bundle\\SwiftmailerBundle\\EventListener\\EmailSenderListener',
            'swiftmailer.data_collector.class' => 'Symfony\\Bundle\\SwiftmailerBundle\\DataCollector\\MessageDataCollector',
            'swiftmailer.mailer.default.transport.name' => 'smtp',
            'swiftmailer.mailer.default.delivery.enabled' => true,
            'swiftmailer.mailer.default.transport.smtp.encryption' => NULL,
            'swiftmailer.mailer.default.transport.smtp.port' => 25,
            'swiftmailer.mailer.default.transport.smtp.host' => '127.0.0.1',
            'swiftmailer.mailer.default.transport.smtp.username' => NULL,
            'swiftmailer.mailer.default.transport.smtp.password' => NULL,
            'swiftmailer.mailer.default.transport.smtp.auth_mode' => NULL,
            'swiftmailer.mailer.default.transport.smtp.timeout' => 30,
            'swiftmailer.mailer.default.transport.smtp.source_ip' => NULL,
            'swiftmailer.spool.default.memory.path' => '/var/www/ayaville/ezpublish/cache/prod/swiftmailer/spool/default',
            'swiftmailer.mailer.default.spool.enabled' => true,
            'swiftmailer.mailer.default.plugin.impersonate' => NULL,
            'swiftmailer.mailer.default.single_address' => NULL,
            'swiftmailer.spool.enabled' => true,
            'swiftmailer.delivery.enabled' => true,
            'swiftmailer.single_address' => NULL,
            'swiftmailer.mailers' => array(
                'default' => 'swiftmailer.mailer.default',
            ),
            'swiftmailer.default_mailer' => 'default',
            'assetic.asset_factory.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Assetic\\AssetFactory',
            'assetic.asset_manager.class' => 'Assetic\\Factory\\LazyAssetManager',
            'assetic.asset_manager_cache_warmer.class' => 'Symfony\\Bundle\\AsseticBundle\\CacheWarmer\\AssetManagerCacheWarmer',
            'assetic.cached_formula_loader.class' => 'Assetic\\Factory\\Loader\\CachedFormulaLoader',
            'assetic.config_cache.class' => 'Assetic\\Cache\\ConfigCache',
            'assetic.config_loader.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Loader\\ConfigurationLoader',
            'assetic.config_resource.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Resource\\ConfigurationResource',
            'assetic.coalescing_directory_resource.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Resource\\CoalescingDirectoryResource',
            'assetic.directory_resource.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Resource\\DirectoryResource',
            'assetic.filter_manager.class' => 'Symfony\\Bundle\\AsseticBundle\\FilterManager',
            'assetic.worker.ensure_filter.class' => 'Assetic\\Factory\\Worker\\EnsureFilterWorker',
            'assetic.worker.cache_busting.class' => 'Assetic\\Factory\\Worker\\CacheBustingWorker',
            'assetic.value_supplier.class' => 'Symfony\\Bundle\\AsseticBundle\\DefaultValueSupplier',
            'assetic.node.paths' => array(
            ),
            'assetic.cache_dir' => '/var/www/ayaville/ezpublish/cache/prod/assetic',
            'assetic.bundles' => array(
                0 => 'eZDemoBundle',
            ),
            'assetic.twig_extension.class' => 'Symfony\\Bundle\\AsseticBundle\\Twig\\AsseticExtension',
            'assetic.twig_formula_loader.class' => 'Assetic\\Extension\\Twig\\TwigFormulaLoader',
            'assetic.helper.dynamic.class' => 'Symfony\\Bundle\\AsseticBundle\\Templating\\DynamicAsseticHelper',
            'assetic.helper.static.class' => 'Symfony\\Bundle\\AsseticBundle\\Templating\\StaticAsseticHelper',
            'assetic.php_formula_loader.class' => 'Symfony\\Bundle\\AsseticBundle\\Factory\\Loader\\AsseticHelperFormulaLoader',
            'assetic.debug' => false,
            'assetic.use_controller' => false,
            'assetic.enable_profiler' => false,
            'assetic.read_from' => '/var/www/ayaville/ezpublish/../web',
            'assetic.write_to' => '/var/www/ayaville/ezpublish/../web',
            'assetic.variables' => array(
            ),
            'assetic.java.bin' => '/usr/bin/java',
            'assetic.node.bin' => '/usr/bin/node',
            'assetic.ruby.bin' => '/usr/bin/ruby',
            'assetic.sass.bin' => '/usr/bin/sass',
            'assetic.filter.cssrewrite.class' => 'Assetic\\Filter\\CssRewriteFilter',
            'assetic.twig_extension.functions' => array(
            ),
            'doctrine_cache.apc.class' => 'Doctrine\\Common\\Cache\\ApcCache',
            'doctrine_cache.array.class' => 'Doctrine\\Common\\Cache\\ArrayCache',
            'doctrine_cache.file_system.class' => 'Doctrine\\Common\\Cache\\FilesystemCache',
            'doctrine_cache.php_file.class' => 'Doctrine\\Common\\Cache\\PhpFileCache',
            'doctrine_cache.mongodb.class' => 'Doctrine\\Common\\Cache\\MongoDBCache',
            'doctrine_cache.mongodb.collection.class' => 'MongoCollection',
            'doctrine_cache.mongodb.connection.class' => 'MongoClient',
            'doctrine_cache.mongodb.server' => 'localhost:27017',
            'doctrine_cache.riak.class' => 'Doctrine\\Common\\Cache\\RiakCache',
            'doctrine_cache.riak.bucket.class' => 'Riak\\Bucket',
            'doctrine_cache.riak.connection.class' => 'Riak\\Connection',
            'doctrine_cache.riak.bucket_property_list.class' => 'Riak\\BucketPropertyList',
            'doctrine_cache.riak.host' => 'localhost',
            'doctrine_cache.riak.port' => 8087,
            'doctrine_cache.memcache.class' => 'Doctrine\\Common\\Cache\\MemcacheCache',
            'doctrine_cache.memcache.connection.class' => 'Memcache',
            'doctrine_cache.memcache.host' => 'localhost',
            'doctrine_cache.memcache.port' => 11211,
            'doctrine_cache.memcached.class' => 'Doctrine\\Common\\Cache\\MemcachedCache',
            'doctrine_cache.memcached.connection.class' => 'Memcached',
            'doctrine_cache.memcached.host' => 'localhost',
            'doctrine_cache.memcached.port' => 11211,
            'doctrine_cache.redis.class' => 'Doctrine\\Common\\Cache\\RedisCache',
            'doctrine_cache.redis.connection.class' => 'Redis',
            'doctrine_cache.redis.host' => 'localhost',
            'doctrine_cache.redis.port' => 6379,
            'doctrine_cache.couchbase.class' => 'Doctrine\\Common\\Cache\\CouchbaseCache',
            'doctrine_cache.couchbase.connection.class' => 'Couchbase',
            'doctrine_cache.couchbase.hostnames' => 'localhost:8091',
            'doctrine_cache.wincache.class' => 'Doctrine\\Common\\Cache\\WinCacheCache',
            'doctrine_cache.xcache.class' => 'Doctrine\\Common\\Cache\\XcacheCache',
            'doctrine_cache.zenddata.class' => 'Doctrine\\Common\\Cache\\ZendDataCache',
            'doctrine_cache.security.acl.cache.class' => 'Doctrine\\Bundle\\DoctrineCacheBundle\\Acl\\Model\\AclCache',
            'doctrine.dbal.logger.chain.class' => 'Doctrine\\DBAL\\Logging\\LoggerChain',
            'doctrine.dbal.logger.profiling.class' => 'Doctrine\\DBAL\\Logging\\DebugStack',
            'doctrine.dbal.logger.class' => 'Symfony\\Bridge\\Doctrine\\Logger\\DbalLogger',
            'doctrine.dbal.configuration.class' => 'Doctrine\\DBAL\\Configuration',
            'doctrine.data_collector.class' => 'Doctrine\\Bundle\\DoctrineBundle\\DataCollector\\DoctrineDataCollector',
            'doctrine.dbal.connection.event_manager.class' => 'Symfony\\Bridge\\Doctrine\\ContainerAwareEventManager',
            'doctrine.dbal.connection_factory.class' => 'Doctrine\\Bundle\\DoctrineBundle\\ConnectionFactory',
            'doctrine.dbal.events.mysql_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\MysqlSessionInit',
            'doctrine.dbal.events.oracle_session_init.class' => 'Doctrine\\DBAL\\Event\\Listeners\\OracleSessionInit',
            'doctrine.class' => 'Doctrine\\Bundle\\DoctrineBundle\\Registry',
            'doctrine.entity_managers' => array(
            ),
            'doctrine.default_entity_manager' => '',
            'doctrine.dbal.connection_factory.types' => array(
            ),
            'doctrine.connections' => array(
                'eng_repository_connection' => 'doctrine.dbal.eng_repository_connection_connection',
            ),
            'doctrine.default_connection' => 'eng_repository_connection',
            'sensio_framework_extra.view.guesser.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Templating\\TemplateGuesser',
            'sensio_framework_extra.controller.listener.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ControllerListener',
            'sensio_framework_extra.routing.loader.annot_dir.class' => 'Symfony\\Component\\Routing\\Loader\\AnnotationDirectoryLoader',
            'sensio_framework_extra.routing.loader.annot_file.class' => 'Symfony\\Component\\Routing\\Loader\\AnnotationFileLoader',
            'sensio_framework_extra.routing.loader.annot_class.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Routing\\AnnotatedRouteControllerLoader',
            'sensio_framework_extra.converter.listener.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\ParamConverterListener',
            'sensio_framework_extra.converter.manager.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter\\ParamConverterManager',
            'sensio_framework_extra.converter.doctrine.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter\\DoctrineParamConverter',
            'sensio_framework_extra.converter.datetime.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\Request\\ParamConverter\\DateTimeParamConverter',
            'sensio_framework_extra.view.listener.class' => 'Sensio\\Bundle\\FrameworkExtraBundle\\EventListener\\TemplateListener',
            'stash.cache.class' => 'Tedivm\\StashBundle\\Service\\CacheService',
            'stash.tracker.class' => 'Tedivm\\StashBundle\\Service\\CacheTracker',
            'stash.driver.class' => 'Stash\\Interfaces\\DriverInterface',
            'stash.factory.class' => 'Tedivm\\StashBundle\\Factory\\DriverFactory',
            'stash.adapter.doctrine.class' => 'Tedivm\\StashBundle\\Adapters\\DoctrineAdapter',
            'stash.adapter.session.class' => 'Tedivm\\StashBundle\\Adapters\\SessionHandlerAdapter',
            'stash.data_collector.class' => 'Tedivm\\StashBundle\\Collector\\CacheDataCollector',
            'stash.tracker' => false,
            'stash.caches' => array(
                'default' => 'stash.default_cache',
            ),
            'stash.caches.options' => array(
                'default' => array(
                    'drivers' => array(
                        0 => 'FileSystem',
                    ),
                    'inMemory' => true,
                    'registerDoctrineAdapter' => false,
                    'registerSessionHandler' => false,
                    'BlackHole' => array(
                    ),
                    'Ephemeral' => array(
                    ),
                    'FileSystem' => array(
                        'dirSplit' => 2,
                        'path' => '/var/www/ayaville/ezpublish/cache/prod/stash',
                        'filePermissions' => 432,
                        'dirPermissions' => 504,
                        'memKeyLimit' => 200,
                        'keyHashFunction' => 'md5',
                    ),
                ),
            ),
            'stash.default_cache' => 'default',
            'hautelook.router.template.generator.class' => 'Hautelook\\TemplatedUriRouter\\Routing\\Generator\\Rfc6570Generator',
            'liip_imagine.filter.configuration.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\FilterConfiguration',
            'liip_imagine.filter.manager.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\FilterManager',
            'liip_imagine.data.manager.class' => 'Liip\\ImagineBundle\\Imagine\\Data\\DataManager',
            'liip_imagine.cache.manager.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\CacheManager',
            'liip_imagine.cache.signer.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Signer',
            'liip_imagine.binary.mime_type_guesser.class' => 'Liip\\ImagineBundle\\Binary\\SimpleMimeTypeGuesser',
            'liip_imagine.controller.class' => 'Liip\\ImagineBundle\\Controller\\ImagineController',
            'liip_imagine.twig.extension.class' => 'Liip\\ImagineBundle\\Templating\\ImagineExtension',
            'liip_imagine.templating.helper.class' => 'Liip\\ImagineBundle\\Templating\\Helper\\ImagineHelper',
            'liip_imagine.gd.class' => 'Imagine\\Gd\\Imagine',
            'liip_imagine.imagick.class' => 'Imagine\\Imagick\\Imagine',
            'liip_imagine.gmagick.class' => 'Imagine\\Gmagick\\Imagine',
            'liip_imagine.filter.loader.relative_resize.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\RelativeResizeFilterLoader',
            'liip_imagine.filter.loader.resize.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\ResizeFilterLoader',
            'liip_imagine.filter.loader.thumbnail.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\ThumbnailFilterLoader',
            'liip_imagine.filter.loader.crop.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\CropFilterLoader',
            'liip_imagine.filter.loader.paste.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\PasteFilterLoader',
            'liip_imagine.filter.loader.watermark.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\WatermarkFilterLoader',
            'liip_imagine.filter.loader.strip.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\StripFilterLoader',
            'liip_imagine.filter.loader.background.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\BackgroundFilterLoader',
            'liip_imagine.filter.loader.upscale.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\UpscaleFilterLoader',
            'liip_imagine.filter.loader.auto_rotate.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\Loader\\AutoRotateFilterLoader',
            'liip_imagine.binary.loader.filesystem.class' => 'Liip\\ImagineBundle\\Binary\\Loader\\FileSystemLoader',
            'liip_imagine.binary.loader.stream.class' => 'Liip\\ImagineBundle\\Binary\\Loader\\StreamLoader',
            'liip_imagine.cache.resolver.web_path.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\WebPathResolver',
            'liip_imagine.cache.resolver.no_cache_web_path.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\NoCacheWebPathResolver',
            'liip_imagine.cache.resolver.aws_s3.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\AwsS3Resolver',
            'liip_imagine.cache.resolver.cache.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\CacheResolver',
            'liip_imagine.cache.resolver.proxy.class' => 'Liip\\ImagineBundle\\Imagine\\Cache\\Resolver\\ProxyResolver',
            'liip_imagine.form.type.image.class' => 'Liip\\ImagineBundle\\Form\\Type\\ImageType',
            'liip_imagine.meta_data.reader.class' => 'Imagine\\Image\\Metadata\\ExifMetadataReader',
            'liip_imagine.filter.post_processor.jpegoptim.class' => 'Liip\\ImagineBundle\\Imagine\\Filter\\PostProcessor\\JpegOptimPostProcessor',
            'liip_imagine.jpegoptim.binary' => '/usr/bin/jpegoptim',
            'liip_imagine.cache.resolver.default' => 'default',
            'liip_imagine.default_image' => NULL,
            'liip_imagine.filter_sets' => array(
            ),
            'liip_imagine.binary.loader.default' => 'default',
            'liip_imagine.controller.filter_action' => 'liip_imagine.controller:filterAction',
            'liip_imagine.controller.filter_runtime_action' => 'liip_imagine.controller:filterRuntimeAction',
            'fos_http_cache.proxy_client.varnish.class' => 'FOS\\HttpCache\\ProxyClient\\Varnish',
            'fos_http_cache.proxy_client.varnish.servers' => array(
                0 => '$http_cache.purge_servers$',
            ),
            'fos_http_cache.proxy_client.varnish.base_url' => NULL,
            'fos_http_cache.cache_manager.class' => 'FOS\\HttpCacheBundle\\CacheManager',
            'fos_http_cache.event_listener.log.class' => 'FOS\\HttpCache\\EventListener\\LogSubscriber',
            'fos_http_cache.command.invalidate_path.class' => 'FOS\\HttpCacheBundle\\Command\\InvalidatePathCommand',
            'fos_http_cache.command.invalidate_regex.class' => 'FOS\\HttpCacheBundle\\Command\\InvalidateRegexCommand',
            'fos_http_cache.command.invalidate_tag.class' => 'FOS\\HttpCacheBundle\\Command\\InvalidateTagCommand',
            'fos_http_cache.command.refresh_path.class' => 'FOS\\HttpCacheBundle\\Command\\RefreshPathCommand',
            'fos_http_cache.event_listener.tag.class' => 'FOS\\HttpCacheBundle\\EventListener\\TagSubscriber',
            'fos_http_cache.event_listener.invalidation.class' => 'FOS\\HttpCacheBundle\\EventListener\\InvalidationSubscriber',
            'fos_http_cache.event_listener.user_context.class' => 'FOS\\HttpCacheBundle\\EventListener\\UserContextSubscriber',
            'fos_http_cache.user_context.hash_generator.class' => 'FOS\\HttpCache\\UserContext\\HashGenerator',
            'fos_http_cache.user_context.role_provider.class' => 'FOS\\HttpCacheBundle\\UserContext\\RoleProvider',
            'fos_http_cache.user_context.request_matcher.class' => 'FOS\\HttpCacheBundle\\UserContext\\RequestMatcher',
            'fos_http_cache.user_context.logout_handler.class' => 'FOS\\HttpCacheBundle\\Security\\Http\\Logout\\ContextInvalidationLogoutHandler',
            'ezpublish.siteaccess.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\SiteAccess',
            'ezpublish.siteaccess.default.name' => 'default',
            'ezpublish.config.resolver.dynamic.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\DependencyInjection\\Configuration\\ConfigResolver',
            'ezpublish.config.resolver.chain.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\DependencyInjection\\Configuration\\ChainConfigResolver',
            'ezpublish.config.default_scope' => 'ezsettings',
            'ezpublish.config.dynamic_setting.parser.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\DependencyInjection\\Configuration\\SiteAccessAware\\DynamicSettingParser',
            'ezpublish.controller.base.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Controller\\Controller',
            'ezpublish.controller.content.view.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Controller\\Content\\ViewController',
            'ezpublish.controller.content.preview.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Controller\\Content\\PreviewController',
            'ezpublish.controller.page.view.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Controller\\PageController',
            'ezpublish.decorated_fragment_renderer.inline.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Fragment\\InlineFragmentRenderer',
            'ezpublish.decorated_fragment_renderer.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Fragment\\DecoratedFragmentRenderer',
            'ezpublish.fragment_listener.factory.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Fragment\\FragmentListenerFactory',
            'ezpublish.controller_manager.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Controller\\Manager',
            'ezpublish.controller_listener.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\ViewControllerListener',
            'ezpublish.page_controller_listener.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\PageControllerListener',
            'ezpublish.security.user_provider.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Security\\User\\Provider',
            'ezpublish.security.voter.core.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Security\\Authorization\\Voter\\CoreVoter',
            'ezpublish.security.voter.value_object.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Security\\Authorization\\Voter\\ValueObjectVoter',
            'ezpublish.security.controller.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Controller\\SecurityController',
            'ezpublish.security.login_listener.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Security\\EventListener\\SecurityListener',
            'ezpublish.user.identity.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Security\\User\\Identity',
            'ezpublish.user.hash_generator.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Security\\User\\HashGenerator',
            'ezpublish.user.identity_definer.role_id.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Security\\User\\ContextProvider\\RoleContextProvider',
            'webroot_dir' => '/var/www/ayaville/ezpublish/../web',
            'ezsettings.default.location_view' => array(
                'gallery_viewer' => array(
                    'image' => array(
                        'template' => 'eZDemoBundle:gallery_viewer:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'image',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'gallery_item' => array(
                    'image' => array(
                        'template' => 'eZDemoBundle:gallery_item:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'image',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'block_item_campaign' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:block_item_campaign:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'article',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'block_item' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:block_item:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'article',
                        ),
                        'params' => array(
                        ),
                    ),
                    'image' => array(
                        'template' => 'eZDemoBundle:block_item:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'image',
                        ),
                        'params' => array(
                        ),
                    ),
                    'video' => array(
                        'template' => 'eZDemoBundle:block_item:video.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'video',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'block_item_highlighted' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:block_item_highlighted:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'article',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'full' => array(
                    'article' => array(
                        'controller' => 'eZDemoBundle:Demo:showArticle',
                        'template' => 'eZDemoBundle:full:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'article',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'blog' => array(
                        'controller' => 'eZDemoBundle:Demo:listBlogPosts',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'blog',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'blog_post' => array(
                        'controller' => 'eZDemoBundle:Demo:showBlogPost',
                        'template' => 'eZDemoBundle:full:blog_post.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'blog_post',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'frontpage' => array(
                        'template' => 'eZDemoBundle:full:landing_page.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'landing_page',
                        ),
                        'params' => array(
                        ),
                    ),
                    'place_list' => array(
                        'template' => 'eZDemoBundle:full:place_list.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'place_list',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'place' => array(
                        'template' => 'eZDemoBundle:full:place.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'place',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'feedback_form' => array(
                        'controller' => 'eZDemoBundle:FeedbackForm:showFeedbackForm',
                        'template' => 'eZDemoBundle:full:feedback_form.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'feedback_form',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'line' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:line:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'article',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'blog_post' => array(
                        'controller' => 'eZDemoBundle:Demo:showBlogPost',
                        'template' => 'eZDemoBundle:line:blog_post.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'blog_post',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'place' => array(
                        'template' => 'eZDemoBundle:line:place.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'place',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                ),
            ),
            'ezsettings.default.content_view' => array(
                'embed' => array(
                    'image' => array(
                        'template' => 'eZDemoBundle:embed:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'image',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                ),
            ),
            'ezsettings.default.block_view' => array(
                'block' => array(
                    'campaign' => array(
                        'template' => 'eZDemoBundle:block:campaign.html.twig',
                        'match' => array(
                            'Type' => 'Campaign',
                        ),
                    ),
                    'content_grid_2cols_2_rows' => array(
                        'template' => 'eZDemoBundle:block:content_grid_2cols_2rows.html.twig',
                        'match' => array(
                            'Type' => 'ContentGrid',
                            'View' => '2_columns_2_rows',
                        ),
                    ),
                    'content_grid_1col_2rows' => array(
                        'template' => 'eZDemoBundle:block:content_grid_1col_2rows.html.twig',
                        'match' => array(
                            'Type' => 'ContentGrid',
                            'View' => 'default',
                        ),
                    ),
                    'content_grid_1col_4rows' => array(
                        'template' => 'eZDemoBundle:block:content_grid_1col_4rows.html.twig',
                        'match' => array(
                            'Type' => 'ContentGrid',
                            'View' => '1_column_4_rows',
                        ),
                    ),
                    'gallery' => array(
                        'template' => 'eZDemoBundle:block:gallery.html.twig',
                        'match' => array(
                            'Type' => 'Gallery',
                            'View' => 'default',
                        ),
                    ),
                    'highlighted_item' => array(
                        'template' => 'eZDemoBundle:block:highlighted_item.html.twig',
                        'match' => array(
                            'Type' => 'HighlightedItem',
                            'View' => 'default',
                        ),
                    ),
                    'feed_reader' => array(
                        'template' => 'eZDemoBundle:block:feed_reader.html.twig',
                        'match' => array(
                            'Type' => 'FeedReader',
                            'View' => 'default',
                        ),
                    ),
                    'video' => array(
                        'template' => 'eZDemoBundle:block:video.html.twig',
                        'match' => array(
                            'Type' => 'Video',
                            'view' => 'default',
                        ),
                    ),
                ),
            ),
            'ezpublish.repositories' => array(
                'eng_repository' => array(
                    'engine' => 'legacy',
                    'connection' => 'eng_repository_connection',
                    'config' => array(
                    ),
                ),
            ),
            'ezsettings.default.repository' => NULL,
            'ezpublish.session_name.default' => 'eZSESSID{siteaccess_hash}',
            'ezsettings.default.session_name' => 'eZSESSID{siteaccess_hash}',
            'ezsettings.default.session' => array(
                'name' => 'eZSESSID{siteaccess_hash}',
            ),
            'ezsettings.default.legacy_mode' => false,
            'ezsettings.default.url_alias_router' => true,
            'ezsettings.default.index_page' => NULL,
            'ezsettings.default.default_page' => NULL,
            'ezsettings.default.languages' => array(
            ),
            'ezsettings.default.translation_siteaccesses' => array(
            ),
            'ezsettings.default.related_siteaccesses' => array(
            ),
            'ezsettings.default.cache_pool_name' => 'default',
            'ezsettings.default.var_dir' => 'var',
            'ezsettings.default.storage_dir' => 'storage',
            'ezsettings.default.binary_dir' => 'original',
            'ezsettings.default.anonymous_user_id' => 10,
            'ezsettings.default.io.metadata_handler' => 'default',
            'ezsettings.default.io.binarydata_handler' => 'default',
            'ezsettings.default.io.url_prefix' => 'var/storage',
            'ezsettings.default.io.legacy_url_prefix' => 'var/storage',
            'ezsettings.default.io.root_dir' => '/var/www/ayaville/ezpublish/../ezpublish_legacy/var/storage',
            'ezsettings.default.content.view_cache' => true,
            'ezsettings.default.content.ttl_cache' => true,
            'ezsettings.default.content.default_ttl' => 60,
            'ezsettings.default.content.tree_root.location_id' => 2,
            'ezsettings.default.content.tree_root.excluded_uri_prefixes' => array(
            ),
            'ezsettings.default.fieldtypes.ezxml.custom_xsl' => array(
                0 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/XmlText/Input/Resources/stylesheets/eZXml2Html5_core.xsl',
                    'priority' => 0,
                ),
                1 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/XmlText/Input/Resources/stylesheets/eZXml2Html5_custom.xsl',
                    'priority' => 0,
                ),
            ),
            'ezsettings.default.fieldtypes.ezrichtext.output_custom_xsl' => array(
                0 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/docbook/xhtml5/output/core.xsl',
                    'priority' => 0,
                ),
            ),
            'ezsettings.default.fieldtypes.ezrichtext.edit_custom_xsl' => array(
                0 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/docbook/xhtml5/edit/core.xsl',
                    'priority' => 0,
                ),
            ),
            'ezsettings.default.fieldtypes.ezrichtext.input_custom_xsl' => array(
            ),
            'ezsettings.default.fieldtypes.ezrichtext.tags.default' => array(
                'template' => 'EzPublishCoreBundle:FieldType/RichText/tag:default.html.twig',
            ),
            'ezsettings.default.fieldtypes.ezrichtext.tags.default_inline' => array(
                'template' => 'EzPublishCoreBundle:FieldType/RichText/tag:default_inline.html.twig',
            ),
            'ezsettings.default.fieldtypes.ezrichtext.embed.content' => array(
                'template' => 'EzPublishCoreBundle:FieldType/RichText/embed:content.html.twig',
            ),
            'ezsettings.default.fieldtypes.ezrichtext.embed.content_denied' => array(
                'template' => 'EzPublishCoreBundle:FieldType/RichText/embed:content_denied.html.twig',
            ),
            'ezsettings.default.fieldtypes.ezrichtext.embed.content_inline' => array(
                'template' => 'EzPublishCoreBundle:FieldType/RichText/embed:content_inline.html.twig',
            ),
            'ezsettings.default.fieldtypes.ezrichtext.embed.content_inline_denied' => array(
                'template' => 'EzPublishCoreBundle:FieldType/RichText/embed:content_inline_denied.html.twig',
            ),
            'ezsettings.default.fieldtypes.ezrichtext.embed.location' => array(
                'template' => 'EzPublishCoreBundle:FieldType/RichText/embed:location.html.twig',
            ),
            'ezsettings.default.fieldtypes.ezrichtext.embed.location_denied' => array(
                'template' => 'EzPublishCoreBundle:FieldType/RichText/embed:location_denied.html.twig',
            ),
            'ezsettings.default.fieldtypes.ezrichtext.embed.location_inline' => array(
                'template' => 'EzPublishCoreBundle:FieldType/RichText/embed:location_inline.html.twig',
            ),
            'ezsettings.default.fieldtypes.ezrichtext.embed.location_inline_denied' => array(
                'template' => 'EzPublishCoreBundle:FieldType/RichText/embed:location_inline_denied.html.twig',
            ),
            'ezsettings.default.http_cache.purge_servers' => array(
            ),
            'ezsettings.default.treemenu.http_cache' => true,
            'ezsettings.default.treemenu.ttl_cache' => 86400,
            'ezsettings.default.field_templates' => array(
                0 => array(
                    'template' => 'EzPublishCoreBundle::content_fields.html.twig',
                    'priority' => 0,
                ),
                1 => array(
                    'template' => 'eZDemoBundle::content_fields.html.twig',
                    'priority' => 10,
                ),
            ),
            'ezsettings.default.fielddefinition_settings_templates' => array(
                0 => array(
                    'template' => 'EzPublishCoreBundle::fielddefinition_settings.html.twig',
                    'priority' => 0,
                ),
            ),
            'ezsettings.default.security.login_template' => 'eZDemoBundle:Security:login.html.twig',
            'ezsettings.default.security.base_layout' => 'eZDemoBundle::pagelayout.html.twig',
            'ezsettings.default.image.temporary_dir' => 'imagetmp',
            'ezsettings.default.image.published_images_dir' => 'images',
            'ezsettings.default.image.versioned_images_dir' => 'images-versioned',
            'ezsettings.default.image_variations' => array(
                'reference' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 600,
                            1 => 600,
                        ),
                    ),
                ),
                'small' => array(
                    'reference' => 'reference',
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 100,
                            1 => 100,
                        ),
                    ),
                ),
                'tiny' => array(
                    'reference' => 'reference',
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 30,
                            1 => 30,
                        ),
                    ),
                ),
                'medium' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 200,
                            1 => 290,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'large' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 360,
                            1 => 440,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'rss' => array(
                    'reference' => 'reference',
                    'filters' => array(
                        'geometry/scale' => array(
                            0 => 88,
                            1 => 31,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'campaign' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 770,
                            1 => 390,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'backgroundimage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 770,
                            1 => 390,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'highlighted' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 300,
                        ),
                        'geometry/crop' => array(
                            0 => 300,
                            1 => 300,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'galleryfull' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'contentgrid' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 370,
                            1 => 160,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'gallery' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 770,
                            1 => 390,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'imagefull' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'listitem' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 130,
                            1 => 190,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'articleimage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'articlethumbnail' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 170,
                            1 => 220,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'gallerythumbnail' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 105,
                            1 => 100,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'galleryline' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 70,
                            1 => 150,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'imagelarge' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 448,
                            1 => 622,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'logo' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaleheight' => array(
                            0 => 36,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'infoboximage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 75,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'billboard' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 764,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'productthumbnail' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 170,
                            1 => 220,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'productimage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownwidthonly' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'mainstory1' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 468,
                        ),
                        'geometry/crop' => array(
                            0 => 468,
                            1 => 396,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'mainstory2' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 439,
                        ),
                        'geometry/crop' => array(
                            0 => 439,
                            1 => 233,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'mainstory3' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 201,
                        ),
                        'geometry/crop' => array(
                            0 => 201,
                            1 => 239,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'block2items1' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 195,
                        ),
                        'geometry/crop' => array(
                            0 => 195,
                            1 => 98,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'block2items2' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 195,
                        ),
                        'geometry/crop' => array(
                            0 => 195,
                            1 => 98,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'block3items3' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 195,
                        ),
                        'geometry/crop' => array(
                            0 => 195,
                            1 => 98,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'blockgallery1' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 126,
                        ),
                        'geometry/crop' => array(
                            0 => 126,
                            1 => 84,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'imageplacesize' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 370,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
            ),
            'ezpublish.image.imagemagick.enabled' => false,
            'ezpublish.image.imagemagick.executable_path' => NULL,
            'ezpublish.image.imagemagick.executable' => 'convert',
            'ezsettings.default.imagemagick.pre_parameters' => NULL,
            'ezsettings.default.imagemagick.post_parameters' => NULL,
            'ezpublish.image.imagemagick.filters' => array(
                'geometry/scale' => '-geometry {1}x{2}',
                'geometry/scalewidth' => '-geometry {1}',
                'geometry/scaleheight' => '-geometry x{1}',
                'geometry/scaledownonly' => '-geometry {1}x{2}>',
                'geometry/scalewidthdownonly' => '-geometry {1}>',
                'geometry/scaleheightdownonly' => '-geometry x{1}>',
                'geometry/scaleexact' => '-geometry {1}x{2}!',
                'geometry/scalepercent' => '-geometry {1}x{2}%',
                'geometry/crop' => '-crop {1}x{2}+{3}+{4}',
                'filter/noise' => '-noise {1}',
                'filter/swirl' => '-swirl {1}',
                'colorspace/gray' => '-colorspace GRAY',
                'colorspace/transparent' => '-colorspace Transparent',
                'colorspace' => '-colorspace {1}',
                'border' => '-border {1}x{2}',
                'border/color' => '-bordercolor rgb({1},{2},{3})',
                'border/width' => '-borderwidth {1}',
                'flatten' => '-flatten',
                'resize' => '-resize {1}',
                'optimize' => '-strip',
            ),
            'ezpublish.ezpage.enabledlayouts' => array(
                0 => 'GlobalZoneLayout',
                1 => '2ZonesLayout1',
                2 => '2ZonesLayout2',
                3 => '2ZonesLayout3',
                4 => '3ZonesLayout1',
                5 => '3ZonesLayout2',
            ),
            'ezpublish.ezpage.enabledblocks' => array(
                0 => 'Campaign',
                1 => 'MainStory',
                2 => 'ContentGrid',
                3 => 'Gallery',
                4 => 'Banner',
                5 => 'Video',
                6 => 'TagCloud',
                7 => 'Poll',
                8 => 'ItemList',
                9 => 'FeedReader',
                10 => 'FeedbackForm',
                11 => 'HighlightedItem',
            ),
            'ezpublish.ezpage.layouts' => array(
                'GlobalZoneLayout' => array(
                    'name' => 'Global zone layout',
                    'template' => 'eZDemoBundle:zone:globalzonelayout.html.twig',
                ),
                '2ZonesLayout1' => array(
                    'name' => '2 zones (layout 1)',
                    'template' => 'eZDemoBundle:zone:2zoneslayout1.html.twig',
                ),
                '2ZonesLayout2' => array(
                    'name' => '2 zones (layout 2)',
                    'template' => 'eZDemoBundle:zone:2zoneslayout2.html.twig',
                ),
                '2ZonesLayout3' => array(
                    'name' => '2 zones (layout 3)',
                    'template' => 'eZDemoBundle:zone:2zoneslayout3.html.twig',
                ),
                '3ZonesLayout1' => array(
                    'name' => '3 zones (layout 1)',
                    'template' => 'eZDemoBundle:zone:3zoneslayout1.html.twig',
                ),
                '3ZonesLayout2' => array(
                    'name' => '3 zones (layout 2)',
                    'template' => 'eZDemoBundle:zone:3zoneslayout2.html.twig',
                ),
                'CallForActionLayout' => array(
                    'name' => 'Call For Action zone layout',
                    'template' => 'callforactionlayout.tpl',
                ),
            ),
            'ezpublish.ezpage.blocks' => array(
                'Campaign' => array(
                    'name' => 'Campaign',
                ),
                'MainStory' => array(
                    'name' => 'Main story',
                ),
                'ContentGrid' => array(
                    'name' => 'Content Grid',
                ),
                'Gallery' => array(
                    'name' => 'Gallery',
                ),
                'Banner' => array(
                    'name' => 'Banner',
                ),
                'Video' => array(
                    'name' => 'Video',
                ),
                'TagCloud' => array(
                    'name' => 'Tag cloud',
                ),
                'Poll' => array(
                    'name' => 'Poll',
                ),
                'ItemList' => array(
                    'name' => 'Item list',
                ),
                'FeedReader' => array(
                    'name' => 'Feed reader',
                ),
                'FeedbackForm' => array(
                    'name' => 'Feedback Form',
                ),
                'HighlightedItem' => array(
                    'name' => 'Highlighted Item',
                ),
                'DemoBlock' => array(
                    'name' => 'Demo Block',
                ),
                'Manual2Items' => array(
                    'name' => '2 items (Manual)',
                ),
                'Manual3Items' => array(
                    'name' => '3 items (Manual)',
                ),
                'Manual4Items' => array(
                    'name' => '4 items (Manual)',
                ),
                'Manual5Items' => array(
                    'name' => '5 items (Manual)',
                ),
                'Dynamic3Items' => array(
                    'name' => '3 items (Dynamic)',
                ),
                'FlashRecorder' => array(
                    'name' => 'Flash Recorder',
                ),
                'Keyword' => array(
                    'name' => 'Keyword',
                ),
                'GMap' => array(
                    'name' => 'Google Map',
                ),
                'OnlineUsers' => array(
                    'name' => 'Online Users',
                ),
                'MultimediaCarousel' => array(
                    'name' => 'Multimedia carousel',
                ),
                'Search' => array(
                    'name' => 'Search',
                ),
                'Ads' => array(
                    'name' => 'Advertisement',
                ),
                'LatestContent' => array(
                    'name' => 'Latest content',
                ),
                'TopRated' => array(
                    'name' => 'Top Rated',
                ),
                'GMapItems' => array(
                    'name' => 'Google Map Items',
                ),
            ),
            'ezpublish.siteaccess.groups' => array(
                'ezdemo_frontend_group' => array(
                    0 => 'ezdemo_site',
                    1 => 'ezdemo_site_user',
                    2 => 'eng',
                    3 => 'fre',
                ),
                'ezdemo_site_group' => array(
                    0 => 'ezdemo',
                    1 => 'eng',
                    2 => 'fre',
                    3 => 'ezdemo_admin',
                ),
            ),
            'ezpublish.siteaccess.groups_by_siteaccess' => array(
                'ezdemo_site' => array(
                    0 => 'ezdemo_frontend_group',
                ),
                'ezdemo_site_user' => array(
                    0 => 'ezdemo_frontend_group',
                ),
                'eng' => array(
                    0 => 'ezdemo_frontend_group',
                    1 => 'ezdemo_site_group',
                ),
                'fre' => array(
                    0 => 'ezdemo_frontend_group',
                    1 => 'ezdemo_site_group',
                ),
                'ezdemo' => array(
                    0 => 'ezdemo_site_group',
                ),
                'ezdemo_admin' => array(
                    0 => 'ezdemo_site_group',
                ),
            ),
            'ezpublish.siteaccess.default' => 'eng',
            'ezpublish.siteaccess.relation_map' => array(
                'eng_repository' => array(
                    2 => array(
                        0 => 'ezdemo',
                        1 => 'eng',
                        2 => 'fre',
                    ),
                ),
            ),
            'ezpublish.siteaccesses_by_language' => array(
                'eng-GB' => array(
                    0 => 'eng',
                    1 => 'ezdemo_admin',
                    2 => 'ezdemo',
                ),
                'fre-FR' => array(
                    0 => 'fre',
                ),
            ),
            'ezpublish.siteaccess.list' => array(
                0 => 'ezdemo',
                1 => 'eng',
                2 => 'fre',
                3 => 'ezdemo_admin',
            ),
            'ezpublish.siteaccess.match_config' => array(
                'URIElement' => array(
                    'value' => '1',
                ),
            ),
            'ezpublish.default_router.non_siteaccess_aware_routes' => array(
                0 => '_assetic_',
                1 => '_wdt',
                2 => '_profiler',
                3 => '_configurator_',
            ),
            'ezpublish.default_router.legacy_aware_routes' => array(
                0 => '_ezpublishLegacyTreeMenu',
                1 => 'ezpublish_rest_',
                2 => '_ezpublishPreviewContent',
                3 => '_wdt',
                4 => '_profiler',
                5 => '_assetic',
            ),
            'ezpublish.chain_router.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Routing\\ChainRouter',
            'ezpublish.url_generator.base.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Routing\\Generator',
            'ezpublish.urlalias_router.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Routing\\UrlAliasRouter',
            'ezpublish.urlalias_generator.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Routing\\Generator\\UrlAliasGenerator',
            'ezpublish.siteaccess.matcher_builder.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\SiteAccess\\MatcherBuilder',
            'ezpublish.siteaccess_router.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\SiteAccess\\Router',
            'ezpublish.siteaccess_listener.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\SiteAccessListener',
            'ezpublish.siteaccess_listener.routing.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\RoutingListener',
            'ezpublish.request_redirect_listener.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\RequestEventListener',
            'ezpublish.siteaccess_match_listener.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\EventListener\\SiteAccessMatchListener',
            'ezpublish.route_reference.generator.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Routing\\Generator\\RouteReferenceGenerator',
            'ezpublish.route_reference.listener.language_switch.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\EventListener\\LanguageSwitchListener',
            'ezpublish.original_request_listener.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\OriginalRequestListener',
            'ezpublish.api.repository.factory.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\ApiLoader\\RepositoryFactory',
            'ezpublish.api.inner_repository.class' => 'eZ\\Publish\\Core\\Repository\\Repository',
            'ezpublish.field_type_collection.factory.class' => 'eZ\\Publish\\Core\\Base\\Container\\ApiLoader\\FieldTypeCollectionFactory',
            'ezpublish.api.storage_engine.class' => 'eZ\\Publish\\SPI\\Persistence\\Handler',
            'ezpublish.api.service.content.class' => 'eZ\\Publish\\Core\\Repository\\ContentService',
            'ezpublish.api.service.content_type.class' => 'eZ\\Publish\\Core\\Repository\\ContentTypeService',
            'ezpublish.api.service.field_type.class' => 'eZ\\Publish\\Core\\Repository\\FieldTypeService',
            'ezpublish.api.service.role.class' => 'eZ\\Publish\\Core\\Repository\\RoleService',
            'ezpublish.api.service.object_state.class' => 'eZ\\Publish\\Core\\Repository\\ObjectStateService',
            'ezpublish.api.service.url_wildcard.class' => 'eZ\\Publish\\Core\\Repository\\URLWildcardService',
            'ezpublish.api.service.url_alias.class' => 'eZ\\Publish\\Core\\Repository\\URLAliasService',
            'ezpublish.api.service.user.class' => 'eZ\\Publish\\Core\\Repository\\UserService',
            'ezpublish.api.service.search.class' => 'eZ\\Publish\\Core\\Repository\\SearchService',
            'ezpublish.api.service.section.class' => 'eZ\\Publish\\Core\\Repository\\SectionService',
            'ezpublish.api.service.trash.class' => 'eZ\\Publish\\Core\\Repository\\TrashService',
            'ezpublish.api.service.location.class' => 'eZ\\Publish\\Core\\Repository\\LocationService',
            'ezpublish.signalslot.repository.class' => 'eZ\\Publish\\Core\\SignalSlot\\Repository',
            'ezpublish.signalslot.signal_dispatcher.class' => 'eZ\\Publish\\Core\\SignalSlot\\SignalDispatcher\\DefaultSignalDispatcher',
            'ezpublish.signalslot.signal_dispatcher_transaction_wrapper.class' => 'eZ\\Publish\\Core\\SignalSlot\\SignalDispatcher\\SignalDispatcherTransactionWrapper',
            'ezpublish.fieldtype.ezbinaryfile.externalstorage.class' => 'eZ\\Publish\\Core\\FieldType\\BinaryFile\\BinaryFileStorage',
            'ezpublish.fieldtype.ezimage.externalstorage.class' => 'eZ\\Publish\\Core\\FieldType\\Image\\ImageStorage',
            'ezpublish.fieldtype.ezkeyword.externalstorage.class' => 'eZ\\Publish\\Core\\FieldType\\Keyword\\KeywordStorage',
            'ezpublish.fieldtype.ezmedia.externalstorage.class' => 'eZ\\Publish\\Core\\FieldType\\Media\\MediaStorage',
            'ezpublish.fieldtype.ezurl.externalstorage.class' => 'eZ\\Publish\\Core\\FieldType\\Url\\UrlStorage',
            'ezpublish.fieldtype.ezxmltext.externalstorage.class' => 'eZ\\Publish\\Core\\FieldType\\XmlText\\XmlTextStorage',
            'ezpublish.fieldtype.ezgmaplocation.externalstorage.class' => 'eZ\\Publish\\Core\\FieldType\\MapLocation\\MapLocationStorage',
            'ezpublish.fieldtype.ezuser.externalstorage.class' => 'eZ\\Publish\\Core\\FieldType\\User\\UserStorage',
            'ezpublish.fieldtype.ezrichtext.externalstorage.class' => 'eZ\\Publish\\Core\\FieldType\\RichText\\RichTextStorage',
            'ezpublish.fieldtype.class' => 'eZ\\Publish\\Core\\FieldType\\FieldType',
            'ezpublish.fieldtype.ezauthor.class' => 'eZ\\Publish\\Core\\FieldType\\Author\\Type',
            'ezpublish.fieldtype.ezbinaryfile.class' => 'eZ\\Publish\\Core\\FieldType\\BinaryFile\\Type',
            'ezpublish.fieldtype.ezboolean.class' => 'eZ\\Publish\\Core\\FieldType\\Checkbox\\Type',
            'ezpublish.fieldtype.ezdatetime.class' => 'eZ\\Publish\\Core\\FieldType\\DateAndTime\\Type',
            'ezpublish.fieldtype.ezdate.class' => 'eZ\\Publish\\Core\\FieldType\\Date\\Type',
            'ezpublish.fieldtype.eztime.class' => 'eZ\\Publish\\Core\\FieldType\\Time\\Type',
            'ezpublish.fieldtype.ezemail.class' => 'eZ\\Publish\\Core\\FieldType\\EmailAddress\\Type',
            'ezpublish.fieldtype.ezfloat.class' => 'eZ\\Publish\\Core\\FieldType\\Float\\Type',
            'ezpublish.fieldtype.ezinteger.class' => 'eZ\\Publish\\Core\\FieldType\\Integer\\Type',
            'ezpublish.fieldtype.ezimage.class' => 'eZ\\Publish\\Core\\FieldType\\Image\\Type',
            'ezpublish.fieldtype.ezisbn.class' => 'eZ\\Publish\\Core\\FieldType\\ISBN\\Type',
            'ezpublish.fieldtype.ezkeyword.class' => 'eZ\\Publish\\Core\\FieldType\\Keyword\\Type',
            'ezpublish.fieldtype.ezmedia.class' => 'eZ\\Publish\\Core\\FieldType\\Media\\Type',
            'ezpublish.fieldtype.ezobjectrelation.class' => 'eZ\\Publish\\Core\\FieldType\\Relation\\Type',
            'ezpublish.fieldtype.ezsrrating.class' => 'eZ\\Publish\\Core\\FieldType\\Rating\\Type',
            'ezpublish.fieldtype.ezselection.class' => 'eZ\\Publish\\Core\\FieldType\\Selection\\Type',
            'ezpublish.fieldtype.eztext.class' => 'eZ\\Publish\\Core\\FieldType\\TextBlock\\Type',
            'ezpublish.fieldtype.ezstring.class' => 'eZ\\Publish\\Core\\FieldType\\TextLine\\Type',
            'ezpublish.fieldtype.ezurl.class' => 'eZ\\Publish\\Core\\FieldType\\Url\\Type',
            'ezpublish.fieldtype.ezxmltext.class' => 'eZ\\Publish\\Core\\FieldType\\XmlText\\Type',
            'ezpublish.fieldtype.ezpage.class' => 'eZ\\Publish\\Core\\FieldType\\Page\\Type',
            'ezpublish.fieldtype.ezgmaplocation.class' => 'eZ\\Publish\\Core\\FieldType\\MapLocation\\Type',
            'ezpublish.fieldtype.ezobjectrelationlist.class' => 'eZ\\Publish\\Core\\FieldType\\RelationList\\Type',
            'ezpublish.fieldtype.ezuser.class' => 'eZ\\Publish\\Core\\FieldType\\User\\Type',
            'ezpublish.fieldtype.ezcountry.class' => 'eZ\\Publish\\Core\\FieldType\\Country\\Type',
            'ezpublish.fieldtype.ezcountry.data' => array(
                'AF' => array(
                    'Name' => 'Afghanistan',
                    'Alpha2' => 'AF',
                    'Alpha3' => 'AFG',
                    'IDC' => '93',
                ),
                'AX' => array(
                    'Name' => 'Åland',
                    'Alpha2' => 'AX',
                    'Alpha3' => 'ALA',
                    'IDC' => '358',
                ),
                'AL' => array(
                    'Name' => 'Albania',
                    'Alpha2' => 'AL',
                    'Alpha3' => 'ALB',
                    'IDC' => '355',
                ),
                'DZ' => array(
                    'Name' => 'Algeria',
                    'Alpha2' => 'DZ',
                    'Alpha3' => 'DZA',
                    'IDC' => '213',
                ),
                'AS' => array(
                    'Name' => 'American Samoa',
                    'Alpha2' => 'AS',
                    'Alpha3' => 'ASM',
                    'IDC' => '1684',
                ),
                'AD' => array(
                    'Name' => 'Andorra',
                    'Alpha2' => 'AD',
                    'Alpha3' => 'AND',
                    'IDC' => '376',
                ),
                'AO' => array(
                    'Name' => 'Angola',
                    'Alpha2' => 'AO',
                    'Alpha3' => 'AGO',
                    'IDC' => '244',
                ),
                'AI' => array(
                    'Name' => 'Anguilla',
                    'Alpha2' => 'AI',
                    'Alpha3' => 'AIA',
                    'IDC' => '1264',
                ),
                'AQ' => array(
                    'Name' => 'Antarctica',
                    'Alpha2' => 'AQ',
                    'Alpha3' => 'ATA',
                    'IDC' => '672',
                ),
                'AG' => array(
                    'Name' => 'Antigua and Barbuda',
                    'Alpha2' => 'AG',
                    'Alpha3' => 'ATG',
                    'IDC' => '1268',
                ),
                'AR' => array(
                    'Name' => 'Argentina',
                    'Alpha2' => 'AR',
                    'Alpha3' => 'ARG',
                    'IDC' => '54',
                ),
                'AM' => array(
                    'Name' => 'Armenia',
                    'Alpha2' => 'AM',
                    'Alpha3' => 'ARM',
                    'IDC' => '374',
                ),
                'AW' => array(
                    'Name' => 'Aruba',
                    'Alpha2' => 'AW',
                    'Alpha3' => 'ABW',
                    'IDC' => '297',
                ),
                'AU' => array(
                    'Name' => 'Australia',
                    'Alpha2' => 'AU',
                    'Alpha3' => 'AUS',
                    'IDC' => '61',
                ),
                'AT' => array(
                    'Name' => 'Austria',
                    'Alpha2' => 'AT',
                    'Alpha3' => 'AUT',
                    'IDC' => '43',
                ),
                'AZ' => array(
                    'Name' => 'Azerbaijan',
                    'Alpha2' => 'AZ',
                    'Alpha3' => 'AZE',
                    'IDC' => '994',
                ),
                'BS' => array(
                    'Name' => 'Bahamas',
                    'Alpha2' => 'BS',
                    'Alpha3' => 'BHS',
                    'IDC' => '1242',
                ),
                'BH' => array(
                    'Name' => 'Bahrain',
                    'Alpha2' => 'BH',
                    'Alpha3' => 'BHR',
                    'IDC' => '973',
                ),
                'BD' => array(
                    'Name' => 'Bangladesh',
                    'Alpha2' => 'BD',
                    'Alpha3' => 'BGD',
                    'IDC' => '880',
                ),
                'BB' => array(
                    'Name' => 'Barbados',
                    'Alpha2' => 'BB',
                    'Alpha3' => 'BRB',
                    'IDC' => '1246',
                ),
                'BY' => array(
                    'Name' => 'Belarus',
                    'Alpha2' => 'BY',
                    'Alpha3' => 'BLR',
                    'IDC' => '375',
                ),
                'BE' => array(
                    'Name' => 'Belgium',
                    'Alpha2' => 'BE',
                    'Alpha3' => 'BEL',
                    'IDC' => '32',
                ),
                'BZ' => array(
                    'Name' => 'Belize',
                    'Alpha2' => 'BZ',
                    'Alpha3' => 'BLZ',
                    'IDC' => '501',
                ),
                'BJ' => array(
                    'Name' => 'Benin',
                    'Alpha2' => 'BJ',
                    'Alpha3' => 'BEN',
                    'IDC' => '229',
                ),
                'BM' => array(
                    'Name' => 'Bermuda',
                    'Alpha2' => 'BM',
                    'Alpha3' => 'BMU',
                    'IDC' => '1441',
                ),
                'BT' => array(
                    'Name' => 'Bhutan',
                    'Alpha2' => 'BT',
                    'Alpha3' => 'BTN',
                    'IDC' => '975',
                ),
                'BO' => array(
                    'Name' => 'Bolivia',
                    'Alpha2' => 'BO',
                    'Alpha3' => 'BOL',
                    'IDC' => '591',
                ),
                'BA' => array(
                    'Name' => 'Bosnia and Herzegovina',
                    'Alpha2' => 'BA',
                    'Alpha3' => 'BIH',
                    'IDC' => '387',
                ),
                'BW' => array(
                    'Name' => 'Botswana',
                    'Alpha2' => 'BW',
                    'Alpha3' => 'BWA',
                    'IDC' => '267',
                ),
                'BV' => array(
                    'Name' => 'Bouvet Island',
                    'Alpha2' => 'BV',
                    'Alpha3' => 'BVT',
                    'IDC' => '47',
                ),
                'BR' => array(
                    'Name' => 'Brazil',
                    'Alpha2' => 'BR',
                    'Alpha3' => 'BRA',
                    'IDC' => '55',
                ),
                'IO' => array(
                    'Name' => 'British Indian Ocean Territory',
                    'Alpha2' => 'IO',
                    'Alpha3' => 'IOT',
                    'IDC' => '246',
                ),
                'BN' => array(
                    'Name' => 'Brunei Darussalam',
                    'Alpha2' => 'BN',
                    'Alpha3' => 'BRN',
                    'IDC' => '673',
                ),
                'BG' => array(
                    'Name' => 'Bulgaria',
                    'Alpha2' => 'BG',
                    'Alpha3' => 'BGR',
                    'IDC' => '359',
                ),
                'BF' => array(
                    'Name' => 'Burkina Faso',
                    'Alpha2' => 'BF',
                    'Alpha3' => 'BFA',
                    'IDC' => '226',
                ),
                'BI' => array(
                    'Name' => 'Burundi',
                    'Alpha2' => 'BI',
                    'Alpha3' => 'BDI',
                    'IDC' => '257',
                ),
                'KH' => array(
                    'Name' => 'Cambodia',
                    'Alpha2' => 'KH',
                    'Alpha3' => 'KHM',
                    'IDC' => '855',
                ),
                'CM' => array(
                    'Name' => 'Cameroon',
                    'Alpha2' => 'CM',
                    'Alpha3' => 'CMR',
                    'IDC' => '237',
                ),
                'CA' => array(
                    'Name' => 'Canada',
                    'Alpha2' => 'CA',
                    'Alpha3' => 'CAN',
                    'IDC' => '1',
                ),
                'CV' => array(
                    'Name' => 'Cape Verde',
                    'Alpha2' => 'CV',
                    'Alpha3' => 'CPV',
                    'IDC' => '238',
                ),
                'KY' => array(
                    'Name' => 'Cayman Islands',
                    'Alpha2' => 'KY',
                    'Alpha3' => 'CYM',
                    'IDC' => '1345',
                ),
                'CF' => array(
                    'Name' => 'Central African Republic',
                    'Alpha2' => 'CF',
                    'Alpha3' => 'CAF',
                    'IDC' => '236',
                ),
                'TD' => array(
                    'Name' => 'Chad',
                    'Alpha2' => 'TD',
                    'Alpha3' => 'TCD',
                    'IDC' => '235',
                ),
                'CL' => array(
                    'Name' => 'Chile',
                    'Alpha2' => 'CL',
                    'Alpha3' => 'CHL',
                    'IDC' => '56',
                ),
                'CN' => array(
                    'Name' => 'China',
                    'Alpha2' => 'CN',
                    'Alpha3' => 'CHN',
                    'IDC' => '86',
                ),
                'CX' => array(
                    'Name' => 'Christmas Island',
                    'Alpha2' => 'CX',
                    'Alpha3' => 'CXR',
                    'IDC' => '61',
                ),
                'CC' => array(
                    'Name' => 'Cocos (Keeling) Islands',
                    'Alpha2' => 'CC',
                    'Alpha3' => 'CCK',
                    'IDC' => '61',
                ),
                'CO' => array(
                    'Name' => 'Colombia',
                    'Alpha2' => 'CO',
                    'Alpha3' => 'COL',
                    'IDC' => '57',
                ),
                'KM' => array(
                    'Name' => 'Comoros',
                    'Alpha2' => 'KM',
                    'Alpha3' => 'COM',
                    'IDC' => '269',
                ),
                'CG' => array(
                    'Name' => 'Congo',
                    'Alpha2' => 'CG',
                    'Alpha3' => 'COG',
                    'IDC' => '242',
                ),
                'CD' => array(
                    'Name' => 'Congo, The Democratic Republic Of The',
                    'Alpha2' => 'CD',
                    'Alpha3' => 'COD',
                    'IDC' => '243',
                ),
                'CK' => array(
                    'Name' => 'Cook Islands',
                    'Alpha2' => 'CK',
                    'Alpha3' => 'COK',
                    'IDC' => '682',
                ),
                'CR' => array(
                    'Name' => 'Costa Rica',
                    'Alpha2' => 'CR',
                    'Alpha3' => 'CRI',
                    'IDC' => '506',
                ),
                'CI' => array(
                    'Name' => 'Côte d\'Ivoire',
                    'Alpha2' => 'CI',
                    'Alpha3' => 'CIV',
                    'IDC' => '225',
                ),
                'HR' => array(
                    'Name' => 'Croatia',
                    'Alpha2' => 'HR',
                    'Alpha3' => 'HRV',
                    'IDC' => '385',
                ),
                'CU' => array(
                    'Name' => 'Cuba',
                    'Alpha2' => 'CU',
                    'Alpha3' => 'CUB',
                    'IDC' => '53',
                ),
                'CY' => array(
                    'Name' => 'Cyprus',
                    'Alpha2' => 'CY',
                    'Alpha3' => 'CYP',
                    'IDC' => '357',
                ),
                'CZ' => array(
                    'Name' => 'Czech Republic',
                    'Alpha2' => 'CZ',
                    'Alpha3' => 'CZE',
                    'IDC' => '420',
                ),
                'DK' => array(
                    'Name' => 'Denmark',
                    'Alpha2' => 'DK',
                    'Alpha3' => 'DNK',
                    'IDC' => '45',
                ),
                'DJ' => array(
                    'Name' => 'Djibouti',
                    'Alpha2' => 'DJ',
                    'Alpha3' => 'DJI',
                    'IDC' => '253',
                ),
                'DM' => array(
                    'Name' => 'Dominica',
                    'Alpha2' => 'DM',
                    'Alpha3' => 'DMA',
                    'IDC' => '1767',
                ),
                'DO' => array(
                    'Name' => 'Dominican Republic',
                    'Alpha2' => 'DO',
                    'Alpha3' => 'DOM',
                    'IDC' => '1809',
                ),
                'EC' => array(
                    'Name' => 'Ecuador',
                    'Alpha2' => 'EC',
                    'Alpha3' => 'ECU',
                    'IDC' => '593',
                ),
                'EG' => array(
                    'Name' => 'Egypt',
                    'Alpha2' => 'EG',
                    'Alpha3' => 'EGY',
                    'IDC' => '20',
                ),
                'SV' => array(
                    'Name' => 'El Salvador',
                    'Alpha2' => 'SV',
                    'Alpha3' => 'SLV',
                    'IDC' => '503',
                ),
                'GQ' => array(
                    'Name' => 'Equatorial Guinea',
                    'Alpha2' => 'GQ',
                    'Alpha3' => 'GNQ',
                    'IDC' => '240',
                ),
                'ER' => array(
                    'Name' => 'Eritrea',
                    'Alpha2' => 'ER',
                    'Alpha3' => 'ERI',
                    'IDC' => '291',
                ),
                'EE' => array(
                    'Name' => 'Estonia',
                    'Alpha2' => 'EE',
                    'Alpha3' => 'EST',
                    'IDC' => '372',
                ),
                'ET' => array(
                    'Name' => 'Ethiopia',
                    'Alpha2' => 'ET',
                    'Alpha3' => 'ETH',
                    'IDC' => '251',
                ),
                'FK' => array(
                    'Name' => 'Falkland Islands (Malvinas)',
                    'Alpha2' => 'FK',
                    'Alpha3' => 'FLK',
                    'IDC' => '500',
                ),
                'FO' => array(
                    'Name' => 'Faroe Islands',
                    'Alpha2' => 'FO',
                    'Alpha3' => 'FRO',
                    'IDC' => '298',
                ),
                'FJ' => array(
                    'Name' => 'Fiji',
                    'Alpha2' => 'FJ',
                    'Alpha3' => 'FJI',
                    'IDC' => '679',
                ),
                'FI' => array(
                    'Name' => 'Finland',
                    'Alpha2' => 'FI',
                    'Alpha3' => 'FIN',
                    'IDC' => '358',
                ),
                'FR' => array(
                    'Name' => 'France',
                    'Alpha2' => 'FR',
                    'Alpha3' => 'FRA',
                    'IDC' => '33',
                ),
                'GF' => array(
                    'Name' => 'French Guiana',
                    'Alpha2' => 'GF',
                    'Alpha3' => 'GUF',
                    'IDC' => '594',
                ),
                'PF' => array(
                    'Name' => 'French Polynesia',
                    'Alpha2' => 'PF',
                    'Alpha3' => 'PYF',
                    'IDC' => '689',
                ),
                'TF' => array(
                    'Name' => 'French Southern Territories',
                    'Alpha2' => 'TF',
                    'Alpha3' => 'ATF',
                    'IDC' => '0',
                ),
                'GA' => array(
                    'Name' => 'Gabon',
                    'Alpha2' => 'GA',
                    'Alpha3' => 'GAB',
                    'IDC' => '241',
                ),
                'GM' => array(
                    'Name' => 'Gambia',
                    'Alpha2' => 'GM',
                    'Alpha3' => 'GMB',
                    'IDC' => '220',
                ),
                'GE' => array(
                    'Name' => 'Georgia',
                    'Alpha2' => 'GE',
                    'Alpha3' => 'GEO',
                    'IDC' => '995',
                ),
                'DE' => array(
                    'Name' => 'Germany',
                    'Alpha2' => 'DE',
                    'Alpha3' => 'DEU',
                    'IDC' => '49',
                ),
                'GH' => array(
                    'Name' => 'Ghana',
                    'Alpha2' => 'GH',
                    'Alpha3' => 'GHA',
                    'IDC' => '233',
                ),
                'GI' => array(
                    'Name' => 'Gibraltar',
                    'Alpha2' => 'GI',
                    'Alpha3' => 'GIB',
                    'IDC' => '350',
                ),
                'GR' => array(
                    'Name' => 'Greece',
                    'Alpha2' => 'GR',
                    'Alpha3' => 'GRC',
                    'IDC' => '30',
                ),
                'GL' => array(
                    'Name' => 'Greenland',
                    'Alpha2' => 'GL',
                    'Alpha3' => 'GRL',
                    'IDC' => '299',
                ),
                'GD' => array(
                    'Name' => 'Grenada',
                    'Alpha2' => 'GD',
                    'Alpha3' => 'GRD',
                    'IDC' => '1473',
                ),
                'GP' => array(
                    'Name' => 'Guadeloupe',
                    'Alpha2' => 'GP',
                    'Alpha3' => 'GLP',
                    'IDC' => '590',
                ),
                'GU' => array(
                    'Name' => 'Guam',
                    'Alpha2' => 'GU',
                    'Alpha3' => 'GUM',
                    'IDC' => '1671',
                ),
                'GT' => array(
                    'Name' => 'Guatemala',
                    'Alpha2' => 'GT',
                    'Alpha3' => 'GTM',
                    'IDC' => '502',
                ),
                'GG' => array(
                    'Name' => 'Guernsey',
                    'Alpha2' => 'GG',
                    'Alpha3' => 'GGY',
                    'IDC' => '44',
                ),
                'GN' => array(
                    'Name' => 'Guinea',
                    'Alpha2' => 'GN',
                    'Alpha3' => 'GIN',
                    'IDC' => '224',
                ),
                'GW' => array(
                    'Name' => 'Guinea-Bissau',
                    'Alpha2' => 'GW',
                    'Alpha3' => 'GNB',
                    'IDC' => '245',
                ),
                'GY' => array(
                    'Name' => 'Guyana',
                    'Alpha2' => 'GY',
                    'Alpha3' => 'GUY',
                    'IDC' => '592',
                ),
                'HT' => array(
                    'Name' => 'Haiti',
                    'Alpha2' => 'HT',
                    'Alpha3' => 'HTI',
                    'IDC' => '509',
                ),
                'HM' => array(
                    'Name' => 'Heard Island and McDonald Islands',
                    'Alpha2' => 'HM',
                    'Alpha3' => 'HMD',
                    'IDC' => '672',
                ),
                'HN' => array(
                    'Name' => 'Honduras',
                    'Alpha2' => 'HN',
                    'Alpha3' => 'HND',
                    'IDC' => '504',
                ),
                'HK' => array(
                    'Name' => 'Hong Kong',
                    'Alpha2' => 'HK',
                    'Alpha3' => 'HKG',
                    'IDC' => '852',
                ),
                'HU' => array(
                    'Name' => 'Hungary',
                    'Alpha2' => 'HU',
                    'Alpha3' => 'HUN',
                    'IDC' => '36',
                ),
                'IS' => array(
                    'Name' => 'Iceland',
                    'Alpha2' => 'IS',
                    'Alpha3' => 'ISL',
                    'IDC' => '354',
                ),
                'IN' => array(
                    'Name' => 'India',
                    'Alpha2' => 'IN',
                    'Alpha3' => 'IND',
                    'IDC' => '91',
                ),
                'ID' => array(
                    'Name' => 'Indonesia',
                    'Alpha2' => 'ID',
                    'Alpha3' => 'IDN',
                    'IDC' => '62',
                ),
                'IR' => array(
                    'Name' => 'Iran, Islamic Republic of',
                    'Alpha2' => 'IR',
                    'Alpha3' => 'IRN',
                    'IDC' => '98',
                ),
                'IQ' => array(
                    'Name' => 'Iraq',
                    'Alpha2' => 'IQ',
                    'Alpha3' => 'IRQ',
                    'IDC' => '964',
                ),
                'IE' => array(
                    'Name' => 'Ireland',
                    'Alpha2' => 'IE',
                    'Alpha3' => 'IRL',
                    'IDC' => '353',
                ),
                'IM' => array(
                    'Name' => 'Isle of Man',
                    'Alpha2' => 'IM',
                    'Alpha3' => 'IMN',
                    'IDC' => '44',
                ),
                'IL' => array(
                    'Name' => 'Israel',
                    'Alpha2' => 'IL',
                    'Alpha3' => 'ISR',
                    'IDC' => '972',
                ),
                'IT' => array(
                    'Name' => 'Italy',
                    'Alpha2' => 'IT',
                    'Alpha3' => 'ITA',
                    'IDC' => '39',
                ),
                'JM' => array(
                    'Name' => 'Jamaica',
                    'Alpha2' => 'JM',
                    'Alpha3' => 'JAM',
                    'IDC' => '1876',
                ),
                'JP' => array(
                    'Name' => 'Japan',
                    'Alpha2' => 'JP',
                    'Alpha3' => 'JPN',
                    'IDC' => '81',
                ),
                'JE' => array(
                    'Name' => 'Jersey',
                    'Alpha2' => 'JE',
                    'Alpha3' => 'JEY',
                    'IDC' => '44',
                ),
                'JO' => array(
                    'Name' => 'Jordan',
                    'Alpha2' => 'JO',
                    'Alpha3' => 'JOR',
                    'IDC' => '962',
                ),
                'KZ' => array(
                    'Name' => 'Kazakhstan',
                    'Alpha2' => 'KZ',
                    'Alpha3' => 'KAZ',
                    'IDC' => '7',
                ),
                'KE' => array(
                    'Name' => 'Kenya',
                    'Alpha2' => 'KE',
                    'Alpha3' => 'KEN',
                    'IDC' => '254',
                ),
                'KI' => array(
                    'Name' => 'Kiribati',
                    'Alpha2' => 'KI',
                    'Alpha3' => 'KIR',
                    'IDC' => '686',
                ),
                'KP' => array(
                    'Name' => 'Korea, Democratic People\'s Republic of',
                    'Alpha2' => 'KP',
                    'Alpha3' => 'PRK',
                    'IDC' => '850',
                ),
                'KR' => array(
                    'Name' => 'Korea, Republic of',
                    'Alpha2' => 'KR',
                    'Alpha3' => 'KOR',
                    'IDC' => '82',
                ),
                'KW' => array(
                    'Name' => 'Kuwait',
                    'Alpha2' => 'KW',
                    'Alpha3' => 'KWT',
                    'IDC' => '965',
                ),
                'KG' => array(
                    'Name' => 'Kyrgyzstan',
                    'Alpha2' => 'KG',
                    'Alpha3' => 'KGZ',
                    'IDC' => '996',
                ),
                'LA' => array(
                    'Name' => 'Lao People\'s Democratic Republic',
                    'Alpha2' => 'LA',
                    'Alpha3' => 'LAO',
                    'IDC' => '856',
                ),
                'LV' => array(
                    'Name' => 'Latvia',
                    'Alpha2' => 'LV',
                    'Alpha3' => 'LVA',
                    'IDC' => '371',
                ),
                'LB' => array(
                    'Name' => 'Lebanon',
                    'Alpha2' => 'LB',
                    'Alpha3' => 'LBN',
                    'IDC' => '961',
                ),
                'LS' => array(
                    'Name' => 'Lesotho',
                    'Alpha2' => 'LS',
                    'Alpha3' => 'LSO',
                    'IDC' => '266',
                ),
                'LR' => array(
                    'Name' => 'Liberia',
                    'Alpha2' => 'LR',
                    'Alpha3' => 'LBR',
                    'IDC' => '231',
                ),
                'LY' => array(
                    'Name' => 'Libyan Arab Jamahiriya',
                    'Alpha2' => 'LY',
                    'Alpha3' => 'LBY',
                    'IDC' => '218',
                ),
                'LI' => array(
                    'Name' => 'Liechtenstein',
                    'Alpha2' => 'LI',
                    'Alpha3' => 'LIE',
                    'IDC' => '423',
                ),
                'LT' => array(
                    'Name' => 'Lithuania',
                    'Alpha2' => 'LT',
                    'Alpha3' => 'LTU',
                    'IDC' => '370',
                ),
                'LU' => array(
                    'Name' => 'Luxembourg',
                    'Alpha2' => 'LU',
                    'Alpha3' => 'LUX',
                    'IDC' => '352',
                ),
                'MO' => array(
                    'Name' => 'Macau',
                    'Alpha2' => 'MO',
                    'Alpha3' => 'MAC',
                    'IDC' => '853',
                ),
                'MK' => array(
                    'Name' => 'Macedonia, The Former Yugoslav Republic of',
                    'Alpha2' => 'MK',
                    'Alpha3' => 'MKD',
                    'IDC' => '389',
                ),
                'MG' => array(
                    'Name' => 'Madagascar',
                    'Alpha2' => 'MG',
                    'Alpha3' => 'MDG',
                    'IDC' => '261',
                ),
                'MW' => array(
                    'Name' => 'Malawi',
                    'Alpha2' => 'MW',
                    'Alpha3' => 'MWI',
                    'IDC' => '265',
                ),
                'MY' => array(
                    'Name' => 'Malaysia',
                    'Alpha2' => 'MY',
                    'Alpha3' => 'MYS',
                    'IDC' => '60',
                ),
                'MV' => array(
                    'Name' => 'Maldives',
                    'Alpha2' => 'MV',
                    'Alpha3' => 'MDV',
                    'IDC' => '960',
                ),
                'ML' => array(
                    'Name' => 'Mali',
                    'Alpha2' => 'ML',
                    'Alpha3' => 'MLI',
                    'IDC' => '223',
                ),
                'MT' => array(
                    'Name' => 'Malta',
                    'Alpha2' => 'MT',
                    'Alpha3' => 'MLT',
                    'IDC' => '356',
                ),
                'MH' => array(
                    'Name' => 'Marshall Islands',
                    'Alpha2' => 'MH',
                    'Alpha3' => 'MHL',
                    'IDC' => '692',
                ),
                'MQ' => array(
                    'Name' => 'Martinique',
                    'Alpha2' => 'MQ',
                    'Alpha3' => 'MTQ',
                    'IDC' => '596',
                ),
                'MR' => array(
                    'Name' => 'Mauritania',
                    'Alpha2' => 'MR',
                    'Alpha3' => 'MRT',
                    'IDC' => '222',
                ),
                'MU' => array(
                    'Name' => 'Mauritius',
                    'Alpha2' => 'MU',
                    'Alpha3' => 'MUS',
                    'IDC' => '230',
                ),
                'YT' => array(
                    'Name' => 'Mayotte',
                    'Alpha2' => 'YT',
                    'Alpha3' => 'MYT',
                    'IDC' => '262',
                ),
                'MX' => array(
                    'Name' => 'Mexico',
                    'Alpha2' => 'MX',
                    'Alpha3' => 'MEX',
                    'IDC' => '52',
                ),
                'FM' => array(
                    'Name' => 'Micronesia, Federated States of',
                    'Alpha2' => 'FM',
                    'Alpha3' => 'FSM',
                    'IDC' => '691',
                ),
                'MD' => array(
                    'Name' => 'Moldova, Republic of',
                    'Alpha2' => 'MD',
                    'Alpha3' => 'MDA',
                    'IDC' => '373',
                ),
                'MC' => array(
                    'Name' => 'Monaco',
                    'Alpha2' => 'MC',
                    'Alpha3' => 'MCO',
                    'IDC' => '377',
                ),
                'MN' => array(
                    'Name' => 'Mongolia',
                    'Alpha2' => 'MN',
                    'Alpha3' => 'MNG',
                    'IDC' => '976',
                ),
                'ME' => array(
                    'Name' => 'Montenegro',
                    'Alpha2' => 'ME',
                    'Alpha3' => 'MNE',
                    'IDC' => '382',
                ),
                'MS' => array(
                    'Name' => 'Montserrat',
                    'Alpha2' => 'MS',
                    'Alpha3' => 'MSR',
                    'IDC' => '1664',
                ),
                'MA' => array(
                    'Name' => 'Morocco',
                    'Alpha2' => 'MA',
                    'Alpha3' => 'MAR',
                    'IDC' => '212',
                ),
                'MZ' => array(
                    'Name' => 'Mozambique',
                    'Alpha2' => 'MZ',
                    'Alpha3' => 'MOZ',
                    'IDC' => '258',
                ),
                'MM' => array(
                    'Name' => 'Myanmar',
                    'Alpha2' => 'MM',
                    'Alpha3' => 'MMR',
                    'IDC' => '95',
                ),
                'NA' => array(
                    'Name' => 'Namibia',
                    'Alpha2' => 'NA',
                    'Alpha3' => 'NAM',
                    'IDC' => '264',
                ),
                'NR' => array(
                    'Name' => 'Nauru',
                    'Alpha2' => 'NR',
                    'Alpha3' => 'NRU',
                    'IDC' => '674',
                ),
                'NP' => array(
                    'Name' => 'Nepal',
                    'Alpha2' => 'NP',
                    'Alpha3' => 'NPL',
                    'IDC' => '977',
                ),
                'NL' => array(
                    'Name' => 'Netherlands',
                    'Alpha2' => 'NL',
                    'Alpha3' => 'NLD',
                    'IDC' => '31',
                ),
                'AN' => array(
                    'Name' => 'Netherlands Antilles',
                    'Alpha2' => 'AN',
                    'Alpha3' => 'ANT',
                    'IDC' => '599',
                ),
                'NC' => array(
                    'Name' => 'New Caledonia',
                    'Alpha2' => 'NC',
                    'Alpha3' => 'NCL',
                    'IDC' => '687',
                ),
                'NZ' => array(
                    'Name' => 'New Zealand',
                    'Alpha2' => 'NZ',
                    'Alpha3' => 'NZL',
                    'IDC' => '64',
                ),
                'NI' => array(
                    'Name' => 'Nicaragua',
                    'Alpha2' => 'NI',
                    'Alpha3' => 'NIC',
                    'IDC' => '505',
                ),
                'NE' => array(
                    'Name' => 'Niger',
                    'Alpha2' => 'NE',
                    'Alpha3' => 'NER',
                    'IDC' => '227',
                ),
                'NG' => array(
                    'Name' => 'Nigeria',
                    'Alpha2' => 'NG',
                    'Alpha3' => 'NGA',
                    'IDC' => '234',
                ),
                'NU' => array(
                    'Name' => 'Niue',
                    'Alpha2' => 'NU',
                    'Alpha3' => 'NIU',
                    'IDC' => '683',
                ),
                'NF' => array(
                    'Name' => 'Norfolk Island',
                    'Alpha2' => 'NF',
                    'Alpha3' => 'NFK',
                    'IDC' => '6723',
                ),
                'MP' => array(
                    'Name' => 'Northern Mariana Islands',
                    'Alpha2' => 'MP',
                    'Alpha3' => 'MNP',
                    'IDC' => '1670',
                ),
                'NO' => array(
                    'Name' => 'Norway',
                    'Alpha2' => 'NO',
                    'Alpha3' => 'NOR',
                    'IDC' => '47',
                ),
                'OM' => array(
                    'Name' => 'Oman',
                    'Alpha2' => 'OM',
                    'Alpha3' => 'OMN',
                    'IDC' => '968',
                ),
                'PK' => array(
                    'Name' => 'Pakistan',
                    'Alpha2' => 'PK',
                    'Alpha3' => 'PAK',
                    'IDC' => '92',
                ),
                'PW' => array(
                    'Name' => 'Palau',
                    'Alpha2' => 'PW',
                    'Alpha3' => 'PLW',
                    'IDC' => '680',
                ),
                'PS' => array(
                    'Name' => 'Palestinian Territory, Occupied',
                    'Alpha2' => 'PS',
                    'Alpha3' => 'PSE',
                    'IDC' => '970',
                ),
                'PA' => array(
                    'Name' => 'Panama',
                    'Alpha2' => 'PA',
                    'Alpha3' => 'PAN',
                    'IDC' => '507',
                ),
                'PG' => array(
                    'Name' => 'Papua New Guinea',
                    'Alpha2' => 'PG',
                    'Alpha3' => 'PNG',
                    'IDC' => '675',
                ),
                'PY' => array(
                    'Name' => 'Paraguay',
                    'Alpha2' => 'PY',
                    'Alpha3' => 'PRY',
                    'IDC' => '595',
                ),
                'PE' => array(
                    'Name' => 'Peru',
                    'Alpha2' => 'PE',
                    'Alpha3' => 'PER',
                    'IDC' => '51',
                ),
                'PH' => array(
                    'Name' => 'Philippines',
                    'Alpha2' => 'PH',
                    'Alpha3' => 'PHL',
                    'IDC' => '63',
                ),
                'PN' => array(
                    'Name' => 'Pitcairn',
                    'Alpha2' => 'PN',
                    'Alpha3' => 'PCN',
                    'IDC' => '64',
                ),
                'PL' => array(
                    'Name' => 'Poland',
                    'Alpha2' => 'PL',
                    'Alpha3' => 'POL',
                    'IDC' => '48',
                ),
                'PT' => array(
                    'Name' => 'Portugal',
                    'Alpha2' => 'PT',
                    'Alpha3' => 'PRT',
                    'IDC' => '351',
                ),
                'PR' => array(
                    'Name' => 'Puerto Rico',
                    'Alpha2' => 'PR',
                    'Alpha3' => 'PRI',
                    'IDC' => '1787',
                ),
                'QA' => array(
                    'Name' => 'Qatar',
                    'Alpha2' => 'QA',
                    'Alpha3' => 'QAT',
                    'IDC' => '974',
                ),
                'RE' => array(
                    'Name' => 'Reunion',
                    'Alpha2' => 'RE',
                    'Alpha3' => 'REU',
                    'IDC' => '262',
                ),
                'RO' => array(
                    'Name' => 'Romania',
                    'Alpha2' => 'RO',
                    'Alpha3' => 'ROU',
                    'IDC' => '40',
                ),
                'RU' => array(
                    'Name' => 'Russian Federation',
                    'Alpha2' => 'RU',
                    'Alpha3' => 'RUS',
                    'IDC' => '7',
                ),
                'RW' => array(
                    'Name' => 'Rwanda',
                    'Alpha2' => 'RW',
                    'Alpha3' => 'RWA',
                    'IDC' => '250',
                ),
                'BL' => array(
                    'Name' => 'Saint Barthélemy',
                    'Alpha2' => 'BL',
                    'Alpha3' => 'BLM',
                    'IDC' => '590',
                ),
                'SH' => array(
                    'Name' => 'Saint Helena',
                    'Alpha2' => 'SH',
                    'Alpha3' => 'SHN',
                    'IDC' => '290',
                ),
                'KN' => array(
                    'Name' => 'Saint Kitts and Nevis',
                    'Alpha2' => 'KN',
                    'Alpha3' => 'KNA',
                    'IDC' => '1869',
                ),
                'LC' => array(
                    'Name' => 'Saint Lucia',
                    'Alpha2' => 'LC',
                    'Alpha3' => 'LCA',
                    'IDC' => '1758',
                ),
                'MF' => array(
                    'Name' => 'Saint Martin',
                    'Alpha2' => 'MF',
                    'Alpha3' => 'MAF',
                    'IDC' => '590',
                ),
                'PM' => array(
                    'Name' => 'Saint Pierre and Miquelon',
                    'Alpha2' => 'PM',
                    'Alpha3' => 'SPM',
                    'IDC' => '508',
                ),
                'VC' => array(
                    'Name' => 'Saint Vincent and The Grenadines',
                    'Alpha2' => 'VC',
                    'Alpha3' => 'VCT',
                    'IDC' => '1784',
                ),
                'WS' => array(
                    'Name' => 'Samoa',
                    'Alpha2' => 'WS',
                    'Alpha3' => 'WSM',
                    'IDC' => '685',
                ),
                'SM' => array(
                    'Name' => 'San Marino',
                    'Alpha2' => 'SM',
                    'Alpha3' => 'SMR',
                    'IDC' => '378',
                ),
                'ST' => array(
                    'Name' => 'Sao Tome and Principe',
                    'Alpha2' => 'ST',
                    'Alpha3' => 'STP',
                    'IDC' => '239',
                ),
                'SA' => array(
                    'Name' => 'Saudi Arabia',
                    'Alpha2' => 'SA',
                    'Alpha3' => 'SAU',
                    'IDC' => '966',
                ),
                'SN' => array(
                    'Name' => 'Senegal',
                    'Alpha2' => 'SN',
                    'Alpha3' => 'SEN',
                    'IDC' => '221',
                ),
                'RS' => array(
                    'Name' => 'Serbia',
                    'Alpha2' => 'RS',
                    'Alpha3' => 'SRB',
                    'IDC' => '381',
                ),
                'SC' => array(
                    'Name' => 'Seychelles',
                    'Alpha2' => 'SC',
                    'Alpha3' => 'SYC',
                    'IDC' => '248',
                ),
                'SL' => array(
                    'Name' => 'Sierra Leone',
                    'Alpha2' => 'SL',
                    'Alpha3' => 'SLE',
                    'IDC' => '232',
                ),
                'SG' => array(
                    'Name' => 'Singapore',
                    'Alpha2' => 'SG',
                    'Alpha3' => 'SGP',
                    'IDC' => '65',
                ),
                'SK' => array(
                    'Name' => 'Slovakia',
                    'Alpha2' => 'SK',
                    'Alpha3' => 'SVK',
                    'IDC' => '421',
                ),
                'SI' => array(
                    'Name' => 'Slovenia',
                    'Alpha2' => 'SI',
                    'Alpha3' => 'SVN',
                    'IDC' => '386',
                ),
                'SB' => array(
                    'Name' => 'Solomon Islands',
                    'Alpha2' => 'SB',
                    'Alpha3' => 'SLB',
                    'IDC' => '677',
                ),
                'SO' => array(
                    'Name' => 'Somalia',
                    'Alpha2' => 'SO',
                    'Alpha3' => 'SOM',
                    'IDC' => '252',
                ),
                'ZA' => array(
                    'Name' => 'South Africa',
                    'Alpha2' => 'ZA',
                    'Alpha3' => 'ZAF',
                    'IDC' => '27',
                ),
                'GS' => array(
                    'Name' => 'South Georgia and The South Sandwich Islands',
                    'Alpha2' => 'GS',
                    'Alpha3' => 'SGS',
                    'IDC' => '500',
                ),
                'ES' => array(
                    'Name' => 'Spain',
                    'Alpha2' => 'ES',
                    'Alpha3' => 'ESP',
                    'IDC' => '34',
                ),
                'LK' => array(
                    'Name' => 'Sri Lanka',
                    'Alpha2' => 'LK',
                    'Alpha3' => 'LKA',
                    'IDC' => '94',
                ),
                'SD' => array(
                    'Name' => 'Sudan',
                    'Alpha2' => 'SD',
                    'Alpha3' => 'SDN',
                    'IDC' => '249',
                ),
                'SR' => array(
                    'Name' => 'Suriname',
                    'Alpha2' => 'SR',
                    'Alpha3' => 'SUR',
                    'IDC' => '597',
                ),
                'SJ' => array(
                    'Name' => 'Svalbard and Jan Mayen',
                    'Alpha2' => 'SJ',
                    'Alpha3' => 'SJM',
                    'IDC' => '47',
                ),
                'SZ' => array(
                    'Name' => 'Swaziland',
                    'Alpha2' => 'SZ',
                    'Alpha3' => 'SWZ',
                    'IDC' => '268',
                ),
                'SE' => array(
                    'Name' => 'Sweden',
                    'Alpha2' => 'SE',
                    'Alpha3' => 'SWE',
                    'IDC' => '46',
                ),
                'CH' => array(
                    'Name' => 'Switzerland',
                    'Alpha2' => 'CH',
                    'Alpha3' => 'CHE',
                    'IDC' => '41',
                ),
                'SY' => array(
                    'Name' => 'Syrian Arab Republic',
                    'Alpha2' => 'SY',
                    'Alpha3' => 'SYR',
                    'IDC' => '963',
                ),
                'TW' => array(
                    'Name' => 'Taiwan',
                    'Alpha2' => 'TW',
                    'Alpha3' => 'TWN',
                    'IDC' => '886',
                ),
                'TJ' => array(
                    'Name' => 'Tajikistan',
                    'Alpha2' => 'TJ',
                    'Alpha3' => 'TJK',
                    'IDC' => '992',
                ),
                'TZ' => array(
                    'Name' => 'Tanzania, United Republic of',
                    'Alpha2' => 'TZ',
                    'Alpha3' => 'TZA',
                    'IDC' => '255',
                ),
                'TH' => array(
                    'Name' => 'Thailand',
                    'Alpha2' => 'TH',
                    'Alpha3' => 'THA',
                    'IDC' => '66',
                ),
                'TL' => array(
                    'Name' => 'Timor-Leste',
                    'Alpha2' => 'TL',
                    'Alpha3' => 'TLS',
                    'IDC' => '670',
                ),
                'TG' => array(
                    'Name' => 'Togo',
                    'Alpha2' => 'TG',
                    'Alpha3' => 'TGO',
                    'IDC' => '228',
                ),
                'TK' => array(
                    'Name' => 'Tokelau',
                    'Alpha2' => 'TK',
                    'Alpha3' => 'TKL',
                    'IDC' => '690',
                ),
                'TO' => array(
                    'Name' => 'Tonga',
                    'Alpha2' => 'TO',
                    'Alpha3' => 'TON',
                    'IDC' => '676',
                ),
                'TT' => array(
                    'Name' => 'Trinidad and Tobago',
                    'Alpha2' => 'TT',
                    'Alpha3' => 'TTO',
                    'IDC' => '1868',
                ),
                'TN' => array(
                    'Name' => 'Tunisia',
                    'Alpha2' => 'TN',
                    'Alpha3' => 'TUN',
                    'IDC' => '216',
                ),
                'TR' => array(
                    'Name' => 'Turkey',
                    'Alpha2' => 'TR',
                    'Alpha3' => 'TUR',
                    'IDC' => '90',
                ),
                'TM' => array(
                    'Name' => 'Turkmenistan',
                    'Alpha2' => 'TM',
                    'Alpha3' => 'TKM',
                    'IDC' => '993',
                ),
                'TC' => array(
                    'Name' => 'Turks and Caicos Islands',
                    'Alpha2' => 'TC',
                    'Alpha3' => 'TCA',
                    'IDC' => '1649',
                ),
                'TV' => array(
                    'Name' => 'Tuvalu',
                    'Alpha2' => 'TV',
                    'Alpha3' => 'TUV',
                    'IDC' => '688',
                ),
                'UG' => array(
                    'Name' => 'Uganda',
                    'Alpha2' => 'UG',
                    'Alpha3' => 'UGA',
                    'IDC' => '256',
                ),
                'UA' => array(
                    'Name' => 'Ukraine',
                    'Alpha2' => 'UA',
                    'Alpha3' => 'UKR',
                    'IDC' => '380',
                ),
                'AE' => array(
                    'Name' => 'United Arab Emirates',
                    'Alpha2' => 'AE',
                    'Alpha3' => 'ARE',
                    'IDC' => '971',
                ),
                'GB' => array(
                    'Name' => 'United Kingdom',
                    'Alpha2' => 'GB',
                    'Alpha3' => 'GBR',
                    'IDC' => '44',
                ),
                'UM' => array(
                    'Name' => 'United States Minor Outlying Islands',
                    'Alpha2' => 'UM',
                    'Alpha3' => 'UMI',
                    'IDC' => '1',
                ),
                'US' => array(
                    'Name' => 'United States of America',
                    'Alpha2' => 'US',
                    'Alpha3' => 'USA',
                    'IDC' => '1',
                ),
                'UY' => array(
                    'Name' => 'Uruguay',
                    'Alpha2' => 'UY',
                    'Alpha3' => 'URY',
                    'IDC' => '598',
                ),
                'UZ' => array(
                    'Name' => 'Uzbekistan',
                    'Alpha2' => 'UZ',
                    'Alpha3' => 'UZB',
                    'IDC' => '998',
                ),
                'VU' => array(
                    'Name' => 'Vanuatu',
                    'Alpha2' => 'VU',
                    'Alpha3' => 'VUT',
                    'IDC' => '678',
                ),
                'VA' => array(
                    'Name' => 'Holy See (Vatican City State)',
                    'Alpha2' => 'VA',
                    'Alpha3' => 'VAT',
                    'IDC' => '3906',
                ),
                'VE' => array(
                    'Name' => 'Venezuela',
                    'Alpha2' => 'VE',
                    'Alpha3' => 'VEN',
                    'IDC' => '58',
                ),
                'VN' => array(
                    'Name' => 'Viet Nam',
                    'Alpha2' => 'VN',
                    'Alpha3' => 'VNM',
                    'IDC' => '84',
                ),
                'VG' => array(
                    'Name' => 'Virgin Islands, British',
                    'Alpha2' => 'VG',
                    'Alpha3' => 'VGB',
                    'IDC' => '1284',
                ),
                'VI' => array(
                    'Name' => 'Virgin Islands, U.S.',
                    'Alpha2' => 'VI',
                    'Alpha3' => 'VIR',
                    'IDC' => '1340',
                ),
                'WF' => array(
                    'Name' => 'Wallis and Futuna',
                    'Alpha2' => 'WF',
                    'Alpha3' => 'WLF',
                    'IDC' => '681',
                ),
                'EH' => array(
                    'Name' => 'Western Sahara',
                    'Alpha2' => 'EH',
                    'Alpha3' => 'ESH',
                    'IDC' => '212',
                ),
                'YE' => array(
                    'Name' => 'Yemen',
                    'Alpha2' => 'YE',
                    'Alpha3' => 'YEM',
                    'IDC' => '967',
                ),
                'ZM' => array(
                    'Name' => 'Zambia',
                    'Alpha2' => 'ZM',
                    'Alpha3' => 'ZMB',
                    'IDC' => '260',
                ),
                'ZW' => array(
                    'Name' => 'Zimbabwe',
                    'Alpha2' => 'ZW',
                    'Alpha3' => 'ZWE',
                    'IDC' => '263',
                ),
            ),
            'ezpublish.fieldtype.eznull.class' => 'eZ\\Publish\\Core\\FieldType\\Null\\Type',
            'ezpublish.fieldtype.ezrichtext.class' => 'eZ\\Publish\\Core\\FieldType\\RichText\\Type',
            'ezpublish.api.role.limitation_type.blocking.class' => 'eZ\\Publish\\Core\\Limitation\\BlockingLimitationType',
            'ezpublish.api.role.limitation_type.content_type.class' => 'eZ\\Publish\\Core\\Limitation\\ContentTypeLimitationType',
            'ezpublish.api.role.limitation_type.language.class' => 'eZ\\Publish\\Core\\Limitation\\LanguageLimitationType',
            'ezpublish.api.role.limitation_type.location.class' => 'eZ\\Publish\\Core\\Limitation\\LocationLimitationType',
            'ezpublish.api.role.limitation_type.owner.class' => 'eZ\\Publish\\Core\\Limitation\\OwnerLimitationType',
            'ezpublish.api.role.limitation_type.parent_content_type.class' => 'eZ\\Publish\\Core\\Limitation\\ParentContentTypeLimitationType',
            'ezpublish.api.role.limitation_type.parent_depth.class' => 'eZ\\Publish\\Core\\Limitation\\ParentDepthLimitationType',
            'ezpublish.api.role.limitation_type.parent_owner.class' => 'eZ\\Publish\\Core\\Limitation\\ParentOwnerLimitationType',
            'ezpublish.api.role.limitation_type.parent_group.class' => 'eZ\\Publish\\Core\\Limitation\\ParentUserGroupLimitationType',
            'ezpublish.api.role.limitation_type.section.class' => 'eZ\\Publish\\Core\\Limitation\\SectionLimitationType',
            'ezpublish.api.role.limitation_type.new_section.class' => 'eZ\\Publish\\Core\\Limitation\\NewSectionLimitationType',
            'ezpublish.api.role.limitation_type.siteaccess.class' => 'eZ\\Publish\\Core\\Limitation\\SiteAccessLimitationType',
            'ezpublish.api.role.limitation_type.state.class' => 'eZ\\Publish\\Core\\Limitation\\ObjectStateLimitationType',
            'ezpublish.api.role.limitation_type.new_state.class' => 'eZ\\Publish\\Core\\Limitation\\NewObjectStateLimitationType',
            'ezpublish.api.role.limitation_type.subtree.class' => 'eZ\\Publish\\Core\\Limitation\\SubtreeLimitationType',
            'ezpublish.api.role.limitation_type.user_group.class' => 'eZ\\Publish\\Core\\Limitation\\UserGroupLimitationType',
            'ezpublish.api.role.limitation_type.status.class' => 'eZ\\Publish\\Core\\Limitation\\StatusLimitationType',
            'ezpublish.persistence.field_type_registry.factory.class' => 'eZ\\Publish\\Core\\Base\\Container\\ApiLoader\\Storage\\FieldTypeRegistryFactory',
            'ezpublish.persistence.field_type_registry.class' => 'eZ\\Publish\\Core\\Persistence\\FieldTypeRegistry',
            'ezpublish.persistence.external_storage_registry.factory.class' => 'eZ\\Publish\\Core\\Base\\Container\\ApiLoader\\Storage\\ExternalStorageRegistryFactory',
            'ezpublish.persistence.external_storage_registry.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\StorageRegistry',
            'ezpublish.persistence.slug_converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\UrlAlias\\SlugConverter',
            'ezpublish.api.storage_engine.pcre_compiler.class' => 'eZ\\Publish\\Core\\Persistence\\TransformationProcessor\\PcreCompiler',
            'ezpublish.api.storage_engine.transformation_converter.class' => 'eZ\\Publish\\Core\\Persistence\\Utf8Converter',
            'ezpublish.api.storage_engine.transformation_parser.class' => 'eZ\\Publish\\Core\\Persistence\\TransformationProcessor\\DefinitionBased\\Parser',
            'ezpublish.api.storage_engine.transformation_rules.resources' => array(
                0 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/ascii.tr',
                1 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/basic.tr',
                2 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/cyrillic.tr',
                3 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/greek.tr',
                4 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/hebrew.tr',
                5 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/latin.tr',
                6 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/search.tr',
            ),
            'ezpublish.api.storage_engine.transformation_processor.class' => 'eZ\\Publish\\Core\\Persistence\\TransformationProcessor\\PreprocessedBased',
            'ezpublish.api.storage_engine.preprocessed_transformation_rules.resources' => array(
                0 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/ascii.tr.result',
                1 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/basic.tr.result',
                2 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/cyrillic.tr.result',
                3 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/greek.tr.result',
                4 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/hebrew.tr.result',
                5 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/latin.tr.result',
                6 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/Persistence/Tests/TransformationProcessor/_fixtures/transformations/search.tr.result',
            ),
            'ezpublish.cache_pool.class' => 'Stash\\Pool',
            'ezpublish.cache_pool.spi.cache.decorator.class' => 'eZ\\Publish\\Core\\Persistence\\Cache\\CacheServiceDecorator',
            'ezpublish.spi.persistence.cache.class' => 'eZ\\Publish\\Core\\Persistence\\Cache\\Handler',
            'ezpublish.spi.persistence.cache.abstracthandler.class' => 'eZ\\Publish\\Core\\Persistence\\Cache\\AbstractHandler',
            'ezpublish.spi.persistence.cache.sectionhandler.class' => 'eZ\\Publish\\Core\\Persistence\\Cache\\SectionHandler',
            'ezpublish.spi.persistence.cache.locationhandler.class' => 'eZ\\Publish\\Core\\Persistence\\Cache\\LocationHandler',
            'ezpublish.spi.persistence.cache.contenthandler.class' => 'eZ\\Publish\\Core\\Persistence\\Cache\\ContentHandler',
            'ezpublish.spi.persistence.cache.contentlanguagehandler.class' => 'eZ\\Publish\\Core\\Persistence\\Cache\\ContentLanguageHandler',
            'ezpublish.spi.persistence.cache.contenttypehandler.class' => 'eZ\\Publish\\Core\\Persistence\\Cache\\ContentTypeHandler',
            'ezpublish.spi.persistence.cache.userhandler.class' => 'eZ\\Publish\\Core\\Persistence\\Cache\\UserHandler',
            'ezpublish.spi.persistence.cache.searchhandler.class' => 'eZ\\Publish\\Core\\Persistence\\Cache\\SearchHandler',
            'ezpublish.spi.persistence.cache.transactionhandler.class' => 'eZ\\Publish\\Core\\Persistence\\Cache\\TransactionHandler',
            'ezpublish.spi.persistence.cache.trashhandler.class' => 'eZ\\Publish\\Core\\Persistence\\Cache\\TrashHandler',
            'ezpublish.spi.persistence.cache.locationsearchhandler.class' => 'eZ\\Publish\\Core\\Persistence\\Cache\\LocationSearchHandler',
            'ezpublish.spi.persistence.cache.urlaliashandler.class' => 'eZ\\Publish\\Core\\Persistence\\Cache\\UrlAliasHandler',
            'ezpublish.spi.persistence.cache.objectstatehandler.class' => 'eZ\\Publish\\Core\\Persistence\\Cache\\ObjectStateHandler',
            'ezpublish.spi.persistence.cache.persistencelogger.class' => 'eZ\\Publish\\Core\\Persistence\\Cache\\PersistenceLogger',
            'ezpublish.spi.persistence.cache.persistencelogger.enablecalllogging' => false,
            'ezpublish.spi.persistence.legacy.content.handler.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Handler',
            'ezpublish.persistence.legacy.content.query_builder.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Gateway\\DoctrineDatabase\\QueryBuilder',
            'ezpublish.persistence.legacy.content.gateway.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Gateway\\DoctrineDatabase',
            'ezpublish.persistence.legacy.content.gateway.exception_conversion.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Gateway\\ExceptionConversion',
            'ezpublish.persistence.legacy.content.mapper.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Mapper',
            'ezpublish.persistence.legacy.field_handler.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldHandler',
            'ezpublish.persistence.legacy.tree_handler.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\TreeHandler',
            'ezpublish.spi.persistence.legacy.content_type.handler.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Type\\Handler',
            'ezpublish.spi.persistence.legacy.content_type.handler.caching.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Type\\MemoryCachingHandler',
            'ezpublish.persistence.legacy.content_type.gateway.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Type\\Gateway\\DoctrineDatabase',
            'ezpublish.persistence.legacy.content_type.gateway.exception_conversion.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Type\\Gateway\\ExceptionConversion',
            'ezpublish.persistence.legacy.content_type.mapper.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Type\\Mapper',
            'ezpublish.persistence.legacy.content_type.update_handler.base.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Type\\Update\\Handler',
            'ezpublish.persistence.legacy.content_type.update_handler.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Type\\Update\\Handler\\DoctrineDatabase',
            'ezpublish.persistence.legacy.content_type.update_handler.deferred.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Type\\Update\\Handler\\DeferredLegacy',
            'ezpublish.persistence.legacy.content_type.content_updater.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Type\\ContentUpdater',
            'ezpublish.persistence.legacy.external_storage_handler.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\StorageHandler',
            'ezpublish.fieldtype.ezbinaryfile.storage_gateway.class' => 'eZ\\Publish\\Core\\FieldType\\BinaryFile\\BinaryFileStorage\\Gateway\\LegacyStorage',
            'ezpublish.fieldtype.ezgmaplocation.storage_gateway.class' => 'eZ\\Publish\\Core\\FieldType\\MapLocation\\MapLocationStorage\\Gateway\\LegacyStorage',
            'ezpublish.fieldtype.ezimage.storage_gateway.class' => 'eZ\\Publish\\Core\\FieldType\\Image\\ImageStorage\\Gateway\\LegacyStorage',
            'ezpublish.fieldtype.ezkeyword.storage_gateway.class' => 'eZ\\Publish\\Core\\FieldType\\Keyword\\KeywordStorage\\Gateway\\LegacyStorage',
            'ezpublish.fieldtype.ezmedia.storage_gateway.class' => 'eZ\\Publish\\Core\\FieldType\\Media\\MediaStorage\\Gateway\\LegacyStorage',
            'ezpublish.fieldtype.ezrichtext.storage_gateway.class' => 'eZ\\Publish\\Core\\FieldType\\RichText\\RichTextStorage\\Gateway\\LegacyStorage',
            'ezpublish.fieldtype.ezxmltext.storage_gateway.class' => 'eZ\\Publish\\Core\\FieldType\\XmlText\\XmlTextStorage\\Gateway\\LegacyStorage',
            'ezpublish.fieldtype.ezurl.storage_gateway.class' => 'eZ\\Publish\\Core\\FieldType\\Url\\UrlStorage\\Gateway\\LegacyStorage',
            'ezpublish.fieldtype.ezuser.storage_gateway.class' => 'eZ\\Publish\\Core\\FieldType\\User\\UserStorage\\Gateway\\LegacyStorage',
            'ezpublish.fieldtype.ezpage.storage_gateway.class' => 'eZ\\Publish\\Core\\FieldType\\Page\\PageStorage\\Gateway\\LegacyStorage',
            'ezpublish.persistence.legacy.field_value_converter.registry.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\ConverterRegistry',
            'ezpublish.fieldtype.ezauthor.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Author',
            'ezpublish.fieldtype.ezbinaryfile.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\BinaryFile',
            'ezpublish.fieldtype.ezboolean.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Checkbox',
            'ezpublish.fieldtype.ezcountry.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Country',
            'ezpublish.fieldtype.ezdatetime.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\DateAndTime',
            'ezpublish.fieldtype.ezdate.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Date',
            'ezpublish.fieldtype.eztime.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Time',
            'ezpublish.fieldtype.ezemail.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\EmailAddress',
            'ezpublish.fieldtype.ezfloat.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Float',
            'ezpublish.fieldtype.ezgmaplocation.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\MapLocation',
            'ezpublish.fieldtype.ezinteger.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Integer',
            'ezpublish.fieldtype.ezimage.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Image',
            'ezpublish.fieldtype.ezisbn.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\ISBN',
            'ezpublish.fieldtype.ezkeyword.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Keyword',
            'ezpublish.fieldtype.ezmedia.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Media',
            'ezpublish.fieldtype.ezobjectrelation.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Relation',
            'ezpublish.fieldtype.ezobjectrelationlist.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\RelationList',
            'ezpublish.fieldtype.ezselection.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Selection',
            'ezpublish.fieldtype.ezstring.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\TextLine',
            'ezpublish.fieldtype.eztext.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\TextBlock',
            'ezpublish.fieldtype.ezrichtext.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\RichText',
            'ezpublish.fieldtype.ezxmltext.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\XmlText',
            'ezpublish.fieldtype.ezsrrating.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Rating',
            'ezpublish.fieldtype.ezurl.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Url',
            'ezpublish.fieldtype.ezuser.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null',
            'ezpublish.fieldtype.ezpage.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Page',
            'ezpublish.fieldtype.eznull.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\FieldValue\\Converter\\Null',
            'ezpublish.spi.persistence.legacy.language.handler.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Language\\Handler',
            'ezpublish.spi.persistence.legacy.language.handler.caching.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Language\\CachingHandler',
            'ezpublish.persistence.legacy.language.cache.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Language\\Cache',
            'ezpublish.persistence.legacy.language.mapper.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Language\\Mapper',
            'ezpublish.persistence.legacy.language.gateway.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Language\\Gateway\\DoctrineDatabase',
            'ezpublish.persistence.legacy.language.gateway.exception_conversion.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Language\\Gateway\\ExceptionConversion',
            'ezpublish.persistence.legacy.language.mask_generator.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Language\\MaskGenerator',
            'ezpublish.spi.persistence.legacy.location.handler.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Location\\Handler',
            'ezpublish.persistence.legacy.location.gateway.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Location\\Gateway\\DoctrineDatabase',
            'ezpublish.persistence.legacy.location.gateway.exception_conversion.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Location\\Gateway\\ExceptionConversion',
            'ezpublish.persistence.legacy.location.mapper.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Location\\Mapper',
            'ezpublish.spi.persistence.legacy.object_state.handler.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\ObjectState\\Handler',
            'ezpublish.persistence.legacy.object_state.mapper.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\ObjectState\\Mapper',
            'ezpublish.persistence.legacy.object_state.gateway.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\ObjectState\\Gateway\\DoctrineDatabase',
            'ezpublish.persistence.legacy.object_state.gateway.exception_conversion.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\ObjectState\\Gateway\\ExceptionConversion',
            'ezpublish.spi.persistence.legacy.search.handler.content.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Handler',
            'ezpublish.spi.persistence.legacy.search.handler.location.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Handler',
            'ezpublish.persistence.legacy.search.gateway.content.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Gateway\\DoctrineDatabase',
            'ezpublish.persistence.legacy.search.gateway.content.exception_conversion.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Gateway\\ExceptionConversion',
            'ezpublish.persistence.legacy.search.gateway.location.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Gateway\\DoctrineDatabase',
            'ezpublish.persistence.legacy.search.gateway.location.exception_conversion.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Gateway\\ExceptionConversion',
            'ezpublish.persistence.legacy.search.gateway.criteria_converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriteriaConverter',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_id.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\ContentId',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_type_group_id.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\ContentTypeGroupId',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_type_id.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\ContentTypeId',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.content_type_identifier.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\ContentTypeIdentifier',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.date_metadata.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\DateMetadata',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.field.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\Field',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.full_text.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\FullText',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.language_code.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\LanguageCode',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.logical_and.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\LogicalAnd',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.logical_not.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\LogicalNot',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.logical_or.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\LogicalOr',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.map_location_distance.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\MapLocationDistance',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.match_all.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\MatchAll',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.match_none.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\MatchNone',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.object_state_id.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\ObjectStateId',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.field_relation.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\FieldRelation',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.remote_id.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\RemoteId',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.section_id.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\SectionId',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.common.user_metadata.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\UserMetadata',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.content.depth.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Gateway\\CriterionHandler\\Depth',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.content.location_id.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Gateway\\CriterionHandler\\LocationId',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.content.location_priority.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Gateway\\CriterionHandler\\LocationPriority',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.content.location_remote_id.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Gateway\\CriterionHandler\\LocationRemoteId',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.content.parent_location_id.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Gateway\\CriterionHandler\\ParentLocationId',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.content.subtree.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Gateway\\CriterionHandler\\Subtree',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.content.permission_subtree.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Gateway\\CriterionHandler\\PermissionSubtree',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.content.visibility.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Gateway\\CriterionHandler\\Visibility',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.location.depth.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Gateway\\CriterionHandler\\Location\\Depth',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.location.location_id.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Gateway\\CriterionHandler\\LocationId',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.location.is_main_location.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Gateway\\CriterionHandler\\Location\\IsMainLocation',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.location.parent_location_id.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Gateway\\CriterionHandler\\ParentLocationId',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.location.priority.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Gateway\\CriterionHandler\\Location\\Priority',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.location.location_remote_id.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Gateway\\CriterionHandler\\LocationRemoteId',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.location.subtree.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Gateway\\CriterionHandler\\Subtree',
            'ezpublish.persistence.legacy.search.gateway.criterion_handler.location.visibility.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Gateway\\CriterionHandler\\Visibility',
            'ezpublish.persistence.legacy.search.gateway.criterion_field_value_converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\FieldValue\\Converter',
            'ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.registry.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\FieldValue\\HandlerRegistry',
            'ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.collection.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\FieldValue\\Handler\\Collection',
            'ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.composite.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\FieldValue\\Handler\\Composite',
            'ezpublish.persistence.legacy.search.gateway.criterion_field_value_handler.simple.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\CriterionHandler\\FieldValue\\Handler\\Simple',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\SortClauseConverter',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.content_id.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\SortClauseHandler\\ContentId',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.content_name.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\SortClauseHandler\\ContentName',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.date_modified.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\SortClauseHandler\\DateModified',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.date_published.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\SortClauseHandler\\DatePublished',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.field.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\SortClauseHandler\\Field',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.map_location_distance.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\SortClauseHandler\\MapLocationDistance',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.section_identifier.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\SortClauseHandler\\SectionIdentifier',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.common.section_name.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Common\\Gateway\\SortClauseHandler\\SectionName',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.content.location_depth.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Gateway\\SortClauseHandler\\LocationDepth',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.content.location_path_string.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Gateway\\SortClauseHandler\\LocationPathString',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.content.location_priority.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Gateway\\SortClauseHandler\\LocationPriority',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.id.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Gateway\\SortClauseHandler\\Location\\Id',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.depth.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Gateway\\SortClauseHandler\\Location\\Depth',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.path.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Gateway\\SortClauseHandler\\Location\\Path',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.is_main_location.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Gateway\\SortClauseHandler\\Location\\IsMainLocation',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.priority.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Gateway\\SortClauseHandler\\Location\\Priority',
            'ezpublish.persistence.legacy.search.gateway.sort_clause_handler.location.visibility.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Search\\Location\\Gateway\\SortClauseHandler\\Location\\Visibility',
            'ezpublish.spi.persistence.legacy.section.handler.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Section\\Handler',
            'ezpublish.persistence.legacy.section.gateway.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Section\\Gateway\\DoctrineDatabase',
            'ezpublish.persistence.legacy.section.gateway.exception_conversion.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Section\\Gateway\\ExceptionConversion',
            'ezpublish.spi.persistence.legacy.trash.handler.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\Location\\Trash\\Handler',
            'ezpublish.spi.persistence.legacy.url_alias.handler.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\UrlAlias\\Handler',
            'ezpublish.persistence.legacy.url_alias.mapper.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\UrlAlias\\Mapper',
            'ezpublish.persistence.legacy.url_alias.gateway.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\UrlAlias\\Gateway\\DoctrineDatabase',
            'ezpublish.persistence.legacy.url_alias.gateway.exception_conversion.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\UrlAlias\\Gateway\\ExceptionConversion',
            'ezpublish.spi.persistence.legacy.url_wildcard.handler.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\UrlWildcard\\Handler',
            'ezpublish.persistence.legacy.url_wildcard.mapper.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\UrlWildcard\\Mapper',
            'ezpublish.persistence.legacy.url_wildcard.gateway.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\UrlWildcard\\Gateway\\DoctrineDatabase',
            'ezpublish.persistence.legacy.url_wildcard.gateway.exception_conversion.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Content\\UrlWildcard\\Gateway\\ExceptionConversion',
            'ezpublish.spi.persistence.legacy.user.handler.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\User\\Handler',
            'ezpublish.persistence.legacy.user.mapper.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\User\\Mapper',
            'ezpublish.persistence.legacy.user.gateway.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\User\\Gateway\\DoctrineDatabase',
            'ezpublish.persistence.legacy.user.gateway.exception_conversion.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\User\\Gateway\\ExceptionConversion',
            'ezpublish.persistence.legacy.role.gateway.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\User\\Role\\Gateway\\DoctrineDatabase',
            'ezpublish.persistence.legacy.role.gateway.exception_conversion.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\User\\Role\\Gateway\\ExceptionConversion',
            'ezpublish.persistence.legacy.role.limitation.handler.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\User\\Role\\LimitationHandler',
            'ezpublish.persistence.legacy.role.limitation.handler.object_state.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\User\\Role\\LimitationHandler\\ObjectStateHandler',
            'ezpublish.persistence.legacy.role.limitation.converter.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\User\\Role\\LimitationConverter',
            'ezpublish.spi.persistence.legacy.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\Handler',
            'ezpublish.api.storage_engine.legacy.dbhandler.class' => 'eZ\\Publish\\Core\\Persistence\\Doctrine\\ConnectionHandler',
            'ezpublish.persistence.connection.class' => 'Doctrine\\DBAL\\Driver\\Connection',
            'ezpublish.spi.persistence.legacy.transactionhandler.class' => 'eZ\\Publish\\Core\\Persistence\\Legacy\\TransactionHandler',
            'ezpublish.utils.deprecation_warner.class' => 'eZ\\Publish\\Core\\Base\\Utils\\DeprecationWarner',
            'ezpublish.core.io.service.class' => 'eZ\\Publish\\Core\\IO\\IOService',
            'ezpublish.core.io.tolerant_service.class' => 'eZ\\Publish\\Core\\IO\\TolerantIOService',
            'ezpublish.core.io.metadatahandler.imagesize.class' => 'eZ\\Publish\\Core\\IO\\MetadataHandler\\ImageSize',
            'ezpublish.core.io.mimetypedetector.fileinfo.class' => 'eZ\\Publish\\Core\\IO\\MimeTypeDetector\\FileInfo',
            'ezpublish.core.io.binarydata_handler.flysystem.class' => 'eZ\\Publish\\Core\\IO\\IOBinarydataHandler\\Flysystem',
            'ezpublish.core.io.metadata_handler.flysystem.class' => 'eZ\\Publish\\Core\\IO\\IOMetadataHandler\\Flysystem',
            'ezpublish.core.io.url_decorator.prefix.class' => 'eZ\\Publish\\Core\\IO\\UrlDecorator\\Prefix',
            'ezpublish.core.io.url_decorator.absolute_prefix.class' => 'eZ\\Publish\\Core\\IO\\UrlDecorator\\AbsolutePrefix',
            'ezpublish.core.io.image_fieldtype.legacy_url_redecorator.class' => 'eZ\\Publish\\Core\\IO\\UrlRedecorator',
            'ezpublish.kernel.root_dir' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel',
            'ezpublish.api.repository.lazy_factory.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\ApiLoader\\LazyRepositoryFactory',
            'ezpublish.api.storage_engine.factory.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\ApiLoader\\StorageEngineFactory',
            'ezpublish.signalslot.event_converter_slot.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\SignalSlot\\Slot\\SymfonyEventConverterSlot',
            'ezpublish.api.storage_engine.default' => 'legacy',
            'ezpublish.api.content.class' => 'eZ\\Publish\\Core\\Repository\\Values\\Content\\Content',
            'ezpublish.api.location.class' => 'eZ\\Publish\\Core\\Repository\\Values\\Content\\Location',
            'ezpublish.fieldtype.parameterproviderregistry.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\FieldType\\View\\ParameterProviderRegistry',
            'ezpublish.fieldtype.ezpage.parameterprovider.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\FieldType\\Page\\ParameterProvider',
            'ezpublish.fieldtype.locale.parameterprovider.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\FieldType\\View\\ParameterProvider\\LocaleParameterProvider',
            'ezpublish.fieldtype.ezpage.pageservice.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\FieldType\\Page\\PageService',
            'ezpublish.fieldtype.ezpage.pageservice.factory.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\FieldType\\Page\\PageServiceFactory',
            'ezpublish.fieldtype.ezpage.block.class' => 'eZ\\Publish\\Core\\FieldType\\Page\\Parts\\Block',
            'ezpublish.fieldtype.ezpage.zone.class' => 'eZ\\Publish\\Core\\FieldType\\Page\\Parts\\Zone',
            'ezpublish.fieldtype.ezpage.hashconverter.class' => 'eZ\\Publish\\Core\\FieldType\\Page\\HashConverter',
            'ezpublish.fieldtype.ezxmltext.converter.html5.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\FieldType\\XmlText\\Converter\\Html5',
            'ezpublish.fieldtype.ezxmltext.converter.html5.resources' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/XmlText/Input/Resources/stylesheets/eZXml2Html5.xsl',
            'ezpublish.fieldtype.ezxmltext.converter.embedtohtml5.class' => 'eZ\\Publish\\Core\\FieldType\\XmlText\\Converter\\EmbedToHtml5',
            'ezpublish.fieldtype.ezxmltext.converter.embedtohtml5.excludedattributes' => array(
                0 => 'view',
                1 => 'node_id',
                2 => 'object_id',
            ),
            'ezpublish.fieldtype.ezxmltext.converter.ezlinktohtml5.class' => 'eZ\\Publish\\Core\\FieldType\\XmlText\\Converter\\EzLinkToHtml5',
            'ezpublish.fieldtype.ezxmltext.converter.customtags.class' => 'eZ\\Publish\\Core\\FieldType\\XmlText\\Converter\\CustomTags',
            'ezpublish.fieldtype.ezrichtext.converter.xslt.class' => 'eZ\\Publish\\Core\\FieldType\\RichText\\Converter\\Xslt',
            'ezpublish.fieldtype.ezrichtext.converter.aggregate.class' => 'eZ\\Publish\\Core\\FieldType\\RichText\\Converter\\Aggregate',
            'ezpublish.fieldtype.ezrichtext.converter.output.html5.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\FieldType\\RichText\\Converter\\Html5',
            'ezpublish.fieldtype.ezrichtext.converter.edit.html5.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\FieldType\\RichText\\Converter\\Html5Edit',
            'ezpublish.fieldtype.ezrichtext.converter.input.html5.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\FieldType\\RichText\\Converter\\Html5Input',
            'ezpublish.fieldtype.ezrichtext.converter.link.class' => 'eZ\\Publish\\Core\\FieldType\\RichText\\Converter\\Link',
            'ezpublish.fieldtype.ezrichtext.converter.embed.class' => 'eZ\\Publish\\Core\\FieldType\\RichText\\Converter\\Render\\Embed',
            'ezpublish.fieldtype.ezrichtext.converter.template.class' => 'eZ\\Publish\\Core\\FieldType\\RichText\\Converter\\Render\\Template',
            'ezpublish.fieldtype.ezrichtext.embed_renderer.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\FieldType\\RichText\\EmbedRenderer',
            'ezpublish.fieldtype.ezrichtext.renderer.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\FieldType\\RichText\\Renderer',
            'ezpublish.fieldtype.ezrichtext.tag.namespace' => 'fieldtypes.ezrichtext.tags',
            'ezpublish.fieldtype.ezrichtext.embed.namespace' => 'fieldtypes.ezrichtext.embed',
            'ezpublish.fieldtype.ezrichtext.converter.dispatcher.class' => 'eZ\\Publish\\Core\\FieldType\\RichText\\ConverterDispatcher',
            'ezpublish.fieldtype.ezrichtext.validator.xml.class' => 'eZ\\Publish\\Core\\FieldType\\RichText\\Validator',
            'ezpublish.fieldtype.ezrichtext.validator.dispatcher.class' => 'eZ\\Publish\\Core\\FieldType\\RichText\\ValidatorDispatcher',
            'ezpublish.fieldtype.ezrichtext.resources' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources',
            'ezpublish.fieldtype.ezrichtext.converter.input.ezxml.resources' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/ezxml/docbook/core.xsl',
            'ezpublish.fieldtype.ezrichtext.converter.input.xhtml5.resources' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/xhtml5/edit/docbook.xsl',
            'ezpublish.fieldtype.ezrichtext.converter.output.xhtml5.resources' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/docbook/xhtml5/output/xhtml5.xsl',
            'ezpublish.fieldtype.ezrichtext.converter.output.xhtml5.fragment.resources' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/xhtml5/output/fragment.xsl',
            'ezpublish.fieldtype.ezrichtext.validator.docbook.resources' => array(
                0 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/schemas/docbook/ezpublish.rng',
                1 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/schemas/docbook/docbook.iso.sch.xsl',
            ),
            'ezpublish.fieldtype.ezrichtext.validator.input.ezxhtml5.resources' => array(
                0 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/schemas/ezxhtml5/edit/ezxhtml5.xsd',
            ),
            'ezpublish.fieldtype.ezrichtext.validator.output.ezxhtml5.resources' => array(
                0 => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/schemas/ezxhtml5/output/ezxhtml5.xsd',
            ),
            'ezpublish.fieldtype.ezimage.pathgenerator.class' => 'eZ\\Publish\\Core\\FieldType\\Image\\PathGenerator\\LegacyPathGenerator',
            'ezpublish.fieldtype.ezimage.io_service.options_provider.class' => 'eZ\\Publish\\Core\\FieldType\\Image\\IO\\OptionsProvider',
            'ezpublish.fieldtype.ezimage.io_legacy.class' => 'eZ\\Publish\\Core\\FieldType\\Image\\IO\\Legacy',
            'ezpublish.fieldtype.ezbinaryfile.pathgenerator.class' => 'eZ\\Publish\\Core\\FieldType\\BinaryBase\\PathGenerator\\LegacyPathGenerator',
            'ezpublish.persistence.connection.factory.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\ApiLoader\\StorageConnectionFactory',
            'ezpublish.api.storage_repository_provider.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\ApiLoader\\StorageRepositoryProvider',
            'twig.loader.string.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Templating\\Twig\\LoaderString',
            'twig.extension.intl.class' => 'Twig_Extensions_Extension_Intl',
            'ezpublish.twig.extension.content.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Templating\\Twig\\Extension\\ContentExtension',
            'ezpublish.view_manager.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\View\\Manager',
            'ezpublish.content_view.matcher_factory.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Matcher\\ContentMatcherFactory',
            'ezpublish.location_view.matcher_factory.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Matcher\\LocationMatcherFactory',
            'ezpublish.block_view.matcher_factory.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Matcher\\BlockMatcherFactory',
            'ezpublish.content_view_provider.configured.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\View\\Provider\\ContentConfigured',
            'ezpublish.location_view_provider.configured.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\View\\Provider\\LocationConfigured',
            'ezpublish.block_view_provider.configured.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\View\\Provider\\BlockConfigured',
            'ezpublish.content_view.viewbase_layout' => 'EzPublishCoreBundle::viewbase_layout.html.twig',
            'ezpublish.content_view.content_block_name' => 'content',
            'ezpublish.templating.global_helper.core.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Templating\\GlobalHelper',
            'ezpublish.twig.extension.core.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Templating\\Twig\\Extension\\CoreExtension',
            'ezpublish.twig.extension.filesize.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Templating\\Twig\\Extension\\FileSizeExtension',
            'ezpublish.twig.extension.filesize.suffixes' => array(
                0 => 'B',
                1 => 'kB',
                2 => 'MB',
                3 => 'GB',
                4 => 'TB',
                5 => 'PB',
                6 => 'EB',
            ),
            'ezpublish.templating.extension.routing.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Templating\\Twig\\Extension\\RoutingExtension',
            'ezpublish.session_set_dynamic_name_listener.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\SessionSetDynamicNameListener',
            'ezpublish.session_init_by_post_listener.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\SessionInitByPostListener',
            'ezpublish.session.attribute_bag.storage_key' => '_ezpublish',
            'ezpublish.cache_pool.factory.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\ApiLoader\\CacheFactory',
            'ezpublish.http_cache.purger.instant.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Cache\\Http\\InstantCachePurger',
            'ezpublish.http_cache.purge_client.local.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Cache\\Http\\LocalPurgeClient',
            'ezpublish.http_cache.store.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Cache\\Http\\LocationAwareStore',
            'ezpublish.http_cache.store.root' => '/var/www/ayaville/ezpublish/cache/prod/http_cache',
            'ezpublish.http_cache.cache_manager.class' => 'FOS\\HttpCacheBundle\\CacheManager',
            'ezpublish.http_cache.proxy_client.varnish.factory.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Cache\\Http\\VarnishProxyClientFactory',
            'ezpublish.http_cache.purge_client.fos.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Cache\\Http\\FOSPurgeClient',
            'ezpublish.locale.conversion_map' => array(
                'ara-SA' => 'ar_SA',
                'cat-ES' => 'ca_ES',
                'chi-CN' => 'zh_CN',
                'chi-HK' => 'zh_HK',
                'chi-TW' => 'zh_TW',
                'cro-HR' => 'hr_HR',
                'cze-CZ' => 'cs_CZ',
                'dan-DK' => 'da_DK',
                'dut-NL' => 'nl_NL',
                'ell-GR' => 'el_GR',
                'eng-AU' => 'en_AU',
                'eng-CA' => 'en_CA',
                'eng-GB' => 'en_GB',
                'eng-NZ' => 'en_NZ',
                'eng-US' => 'en_US',
                'epo-EO' => 'eo',
                'esl-ES' => 'es_ES',
                'esl-MX' => 'es_MX',
                'fin-FI' => 'fi_FI',
                'fre-BE' => 'fr_BE',
                'fre-CA' => 'fr_CA',
                'fre-FR' => 'fr_FR',
                'ger-DE' => 'de_DE',
                'heb-IL' => 'he_IL',
                'hin-IN' => 'hi_IN',
                'hun-HU' => 'hu_HU',
                'ind-ID' => 'id_ID',
                'ita-IT' => 'it_IT',
                'jpn-JP' => 'ja_JP',
                'kor-KR' => 'ko_KR',
                'nno-NO' => 'nn_NO',
                'nor-NO' => 'no_NO',
                'pol-PL' => 'pl_PL',
                'por-BR' => 'pt_BR',
                'por-MZ' => 'pt_MZ',
                'por-PT' => 'pt_PT',
                'rus-RU' => 'ru_RI',
                'ser-SR' => 'sr_RS',
                'slk-SK' => 'sk_SK',
                'srp-RS' => 'sr_RS',
                'swe-SE' => 'sv_SE',
                'tur-TR' => 'tr_TR',
                'ukr-UA' => 'uk_UA',
            ),
            'ezpublish.locale.converter.class' => 'eZ\\Publish\\Core\\MVC\\Symfony\\Locale\\LocaleConverter',
            'ezpublish.translation_helper.class' => 'eZ\\Publish\\Core\\Helper\\TranslationHelper',
            'ezpublish.field_helper.class' => 'eZ\\Publish\\Core\\Helper\\FieldHelper',
            'ezpublish.content_preview_helper.class' => 'eZ\\Publish\\Core\\Helper\\ContentPreviewHelper',
            'ezpublish.config_scope_listener.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\ConfigScopeListener',
            'ezpublish.dynamic_settings_listener.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\EventListener\\DynamicSettingsListener',
            'ezpublish.config_resolver.resettable_services' => array(
                0 => 'ezpublish.core.io.flysystem.default_adapter',
                1 => 'ezpublish.core.io.metadata_handler',
                2 => 'ezpublish.core.io.binarydata_handler',
                3 => 'ezpublish.core.io.service',
                4 => 'ezpublish.core.io.flysystem.default_filesystem',
            ),
            'ezpublish.config_resolver.dynamic_settings_services' => array(
                0 => 'ezpublish.config_resolver.fake.io.root_dir__',
                1 => 'ezpublish.config_resolver.fake.io.url_prefix__',
                2 => 'ezpublish.config_resolver.fake.io.legacy_url_prefix__',
                3 => 'ezpublish.config_resolver.fake.var_dir__',
                4 => 'ezpublish.config_resolver.fake.storage_dir__',
                5 => 'ezpublish.config_resolver.fake.image.versioned_images_dir__',
                6 => 'ezpublish.config_resolver.fake.image.published_images_dir__',
                9 => 'ezpublish.config_resolver.fake.binary_dir__',
                10 => 'ezpublish.config_resolver.fake.io.metadata_handler__',
                11 => 'ezpublish.config_resolver.fake.io.binarydata_handler__',
            ),
            'ezpublish.image_alias.imagine.binary_loader.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\BinaryLoader',
            'ezpublish.image_alias.imagine.cache_resolver.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\IORepositoryResolver',
            'ezpublish.image_alias.imagine.alias_generator.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\AliasGenerator',
            'ezpublish.image_alias.imagine.alias_cleaner.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\AliasCleaner',
            'ezpublish.image_alias.imagine.filter.loader.scaledownonly.width_height.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Loader\\ScaleDownOnlyFilterLoader',
            'ezpublish.image_alias.imagine.filter.loader.scaledownonly.width.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Loader\\ScaleWidthDownOnlyFilterLoader',
            'ezpublish.image_alias.imagine.filter.loader.scaledownonly.height.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Loader\\ScaleHeightDownOnlyFilterLoader',
            'ezpublish.image_alias.imagine.filter.loader.scalewidth.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Loader\\ScaleWidthFilterLoader',
            'ezpublish.image_alias.imagine.filter.loader.scaleheight.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Loader\\ScaleHeightFilterLoader',
            'ezpublish.image_alias.imagine.filter.loader.scale.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Loader\\ScaleFilterLoader',
            'ezpublish.image_alias.imagine.filter.loader.scale_exact.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Loader\\ScaleExactFilterLoader',
            'ezpublish.image_alias.imagine.filter.loader.scale_percent.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Loader\\ScalePercentFilterLoader',
            'ezpublish.image_alias.imagine.filter.loader.crop.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Loader\\CropFilterLoader',
            'ezpublish.image_alias.imagine.filter.loader.border.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Loader\\BorderFilterLoader',
            'ezpublish.image_alias.imagine.filter.loader.reduce_noise.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Loader\\ReduceNoiseFilterLoader',
            'ezpublish.image_alias.imagine.filter.loader.grayscale.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Loader\\GrayscaleFilterLoader',
            'ezpublish.image_alias.imagine.filter.loader.swirl.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Loader\\SwirlFilterLoader',
            'ezpublish.image_alias.imagine.filter.unsupported.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\UnsupportedFilter',
            'ezpublish.image_alias.imagine.filter.reduce_noise.imagick.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Imagick\\ReduceNoiseFilter',
            'ezpublish.image_alias.imagine.filter.reduce_noise.gmagick.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Gmagick\\ReduceNoiseFilter',
            'ezpublish.image_alias.imagine.filter.swirl.imagick.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Imagick\\SwirlFilter',
            'ezpublish.image_alias.imagine.filter.swirl.gmagick.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Imagine\\Filter\\Gmagick\\SwirlFilter',
            'ezsettings.ezdemo.location_view' => array(
                'gallery_viewer' => array(
                    'image' => array(
                        'template' => 'eZDemoBundle:gallery_viewer:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'image',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'gallery_item' => array(
                    'image' => array(
                        'template' => 'eZDemoBundle:gallery_item:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'image',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'block_item_campaign' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:block_item_campaign:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'article',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'block_item' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:block_item:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'article',
                        ),
                        'params' => array(
                        ),
                    ),
                    'image' => array(
                        'template' => 'eZDemoBundle:block_item:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'image',
                        ),
                        'params' => array(
                        ),
                    ),
                    'video' => array(
                        'template' => 'eZDemoBundle:block_item:video.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'video',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'block_item_highlighted' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:block_item_highlighted:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'article',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'full' => array(
                    'article' => array(
                        'controller' => 'eZDemoBundle:Demo:showArticle',
                        'template' => 'eZDemoBundle:full:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'article',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'blog' => array(
                        'controller' => 'eZDemoBundle:Demo:listBlogPosts',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'blog',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'blog_post' => array(
                        'controller' => 'eZDemoBundle:Demo:showBlogPost',
                        'template' => 'eZDemoBundle:full:blog_post.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'blog_post',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'frontpage' => array(
                        'template' => 'eZDemoBundle:full:landing_page.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'landing_page',
                        ),
                        'params' => array(
                        ),
                    ),
                    'place_list' => array(
                        'template' => 'eZDemoBundle:full:place_list.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'place_list',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'place' => array(
                        'template' => 'eZDemoBundle:full:place.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'place',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'feedback_form' => array(
                        'controller' => 'eZDemoBundle:FeedbackForm:showFeedbackForm',
                        'template' => 'eZDemoBundle:full:feedback_form.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'feedback_form',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'line' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:line:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'article',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'blog_post' => array(
                        'controller' => 'eZDemoBundle:Demo:showBlogPost',
                        'template' => 'eZDemoBundle:line:blog_post.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'blog_post',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'place' => array(
                        'template' => 'eZDemoBundle:line:place.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'place',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                ),
            ),
            'ezsettings.eng.location_view' => array(
                'gallery_viewer' => array(
                    'image' => array(
                        'template' => 'eZDemoBundle:gallery_viewer:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'image',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'gallery_item' => array(
                    'image' => array(
                        'template' => 'eZDemoBundle:gallery_item:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'image',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'block_item_campaign' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:block_item_campaign:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'article',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'block_item' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:block_item:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'article',
                        ),
                        'params' => array(
                        ),
                    ),
                    'image' => array(
                        'template' => 'eZDemoBundle:block_item:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'image',
                        ),
                        'params' => array(
                        ),
                    ),
                    'video' => array(
                        'template' => 'eZDemoBundle:block_item:video.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'video',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'block_item_highlighted' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:block_item_highlighted:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'article',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'full' => array(
                    'article' => array(
                        'controller' => 'eZDemoBundle:Demo:showArticle',
                        'template' => 'eZDemoBundle:full:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'article',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'blog' => array(
                        'controller' => 'eZDemoBundle:Demo:listBlogPosts',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'blog',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'blog_post' => array(
                        'controller' => 'eZDemoBundle:Demo:showBlogPost',
                        'template' => 'eZDemoBundle:full:blog_post.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'blog_post',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'frontpage' => array(
                        'template' => 'eZDemoBundle:full:landing_page.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'landing_page',
                        ),
                        'params' => array(
                        ),
                    ),
                    'place_list' => array(
                        'template' => 'eZDemoBundle:full:place_list.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'place_list',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'place' => array(
                        'template' => 'eZDemoBundle:full:place.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'place',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'feedback_form' => array(
                        'controller' => 'eZDemoBundle:FeedbackForm:showFeedbackForm',
                        'template' => 'eZDemoBundle:full:feedback_form.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'feedback_form',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'line' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:line:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'article',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'blog_post' => array(
                        'controller' => 'eZDemoBundle:Demo:showBlogPost',
                        'template' => 'eZDemoBundle:line:blog_post.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'blog_post',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'place' => array(
                        'template' => 'eZDemoBundle:line:place.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'place',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                ),
            ),
            'ezsettings.fre.location_view' => array(
                'gallery_viewer' => array(
                    'image' => array(
                        'template' => 'eZDemoBundle:gallery_viewer:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'image',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'gallery_item' => array(
                    'image' => array(
                        'template' => 'eZDemoBundle:gallery_item:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'image',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'block_item_campaign' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:block_item_campaign:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'article',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'block_item' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:block_item:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'article',
                        ),
                        'params' => array(
                        ),
                    ),
                    'image' => array(
                        'template' => 'eZDemoBundle:block_item:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'image',
                        ),
                        'params' => array(
                        ),
                    ),
                    'video' => array(
                        'template' => 'eZDemoBundle:block_item:video.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'video',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'block_item_highlighted' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:block_item_highlighted:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'article',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'full' => array(
                    'article' => array(
                        'controller' => 'eZDemoBundle:Demo:showArticle',
                        'template' => 'eZDemoBundle:full:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'article',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'blog' => array(
                        'controller' => 'eZDemoBundle:Demo:listBlogPosts',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'blog',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'blog_post' => array(
                        'controller' => 'eZDemoBundle:Demo:showBlogPost',
                        'template' => 'eZDemoBundle:full:blog_post.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'blog_post',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'frontpage' => array(
                        'template' => 'eZDemoBundle:full:landing_page.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'landing_page',
                        ),
                        'params' => array(
                        ),
                    ),
                    'place_list' => array(
                        'template' => 'eZDemoBundle:full:place_list.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'place_list',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'place' => array(
                        'template' => 'eZDemoBundle:full:place.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'place',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'feedback_form' => array(
                        'controller' => 'eZDemoBundle:FeedbackForm:showFeedbackForm',
                        'template' => 'eZDemoBundle:full:feedback_form.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'feedback_form',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'line' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:line:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'article',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'blog_post' => array(
                        'controller' => 'eZDemoBundle:Demo:showBlogPost',
                        'template' => 'eZDemoBundle:line:blog_post.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'blog_post',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'place' => array(
                        'template' => 'eZDemoBundle:line:place.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'place',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                ),
            ),
            'ezsettings.ezdemo_admin.location_view' => array(
                'gallery_viewer' => array(
                    'image' => array(
                        'template' => 'eZDemoBundle:gallery_viewer:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'image',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'gallery_item' => array(
                    'image' => array(
                        'template' => 'eZDemoBundle:gallery_item:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'image',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'block_item_campaign' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:block_item_campaign:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'article',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'block_item' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:block_item:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'article',
                        ),
                        'params' => array(
                        ),
                    ),
                    'image' => array(
                        'template' => 'eZDemoBundle:block_item:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'image',
                        ),
                        'params' => array(
                        ),
                    ),
                    'video' => array(
                        'template' => 'eZDemoBundle:block_item:video.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'video',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'block_item_highlighted' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:block_item_highlighted:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'article',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'full' => array(
                    'article' => array(
                        'controller' => 'eZDemoBundle:Demo:showArticle',
                        'template' => 'eZDemoBundle:full:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'article',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'blog' => array(
                        'controller' => 'eZDemoBundle:Demo:listBlogPosts',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'blog',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'blog_post' => array(
                        'controller' => 'eZDemoBundle:Demo:showBlogPost',
                        'template' => 'eZDemoBundle:full:blog_post.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'blog_post',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'frontpage' => array(
                        'template' => 'eZDemoBundle:full:landing_page.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'landing_page',
                        ),
                        'params' => array(
                        ),
                    ),
                    'place_list' => array(
                        'template' => 'eZDemoBundle:full:place_list.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'place_list',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'place' => array(
                        'template' => 'eZDemoBundle:full:place.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'place',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'feedback_form' => array(
                        'controller' => 'eZDemoBundle:FeedbackForm:showFeedbackForm',
                        'template' => 'eZDemoBundle:full:feedback_form.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => 'feedback_form',
                        ),
                        'params' => array(
                        ),
                    ),
                ),
                'line' => array(
                    'article' => array(
                        'template' => 'eZDemoBundle:line:article.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'article',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'blog_post' => array(
                        'controller' => 'eZDemoBundle:Demo:showBlogPost',
                        'template' => 'eZDemoBundle:line:blog_post.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'blog_post',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                    'place' => array(
                        'template' => 'eZDemoBundle:line:place.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'place',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                ),
            ),
            'ezsettings.ezdemo.content_view' => array(
                'embed' => array(
                    'image' => array(
                        'template' => 'eZDemoBundle:embed:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'image',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                ),
            ),
            'ezsettings.eng.content_view' => array(
                'embed' => array(
                    'image' => array(
                        'template' => 'eZDemoBundle:embed:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'image',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                ),
            ),
            'ezsettings.fre.content_view' => array(
                'embed' => array(
                    'image' => array(
                        'template' => 'eZDemoBundle:embed:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'image',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                ),
            ),
            'ezsettings.ezdemo_admin.content_view' => array(
                'embed' => array(
                    'image' => array(
                        'template' => 'eZDemoBundle:embed:image.html.twig',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'image',
                            ),
                        ),
                        'params' => array(
                        ),
                    ),
                ),
            ),
            'ezsettings.ezdemo.block_view' => array(
                'block' => array(
                    'campaign' => array(
                        'template' => 'eZDemoBundle:block:campaign.html.twig',
                        'match' => array(
                            'Type' => 'Campaign',
                        ),
                    ),
                    'content_grid_2cols_2_rows' => array(
                        'template' => 'eZDemoBundle:block:content_grid_2cols_2rows.html.twig',
                        'match' => array(
                            'Type' => 'ContentGrid',
                            'View' => '2_columns_2_rows',
                        ),
                    ),
                    'content_grid_1col_2rows' => array(
                        'template' => 'eZDemoBundle:block:content_grid_1col_2rows.html.twig',
                        'match' => array(
                            'Type' => 'ContentGrid',
                            'View' => 'default',
                        ),
                    ),
                    'content_grid_1col_4rows' => array(
                        'template' => 'eZDemoBundle:block:content_grid_1col_4rows.html.twig',
                        'match' => array(
                            'Type' => 'ContentGrid',
                            'View' => '1_column_4_rows',
                        ),
                    ),
                    'gallery' => array(
                        'template' => 'eZDemoBundle:block:gallery.html.twig',
                        'match' => array(
                            'Type' => 'Gallery',
                            'View' => 'default',
                        ),
                    ),
                    'highlighted_item' => array(
                        'template' => 'eZDemoBundle:block:highlighted_item.html.twig',
                        'match' => array(
                            'Type' => 'HighlightedItem',
                            'View' => 'default',
                        ),
                    ),
                    'feed_reader' => array(
                        'template' => 'eZDemoBundle:block:feed_reader.html.twig',
                        'match' => array(
                            'Type' => 'FeedReader',
                            'View' => 'default',
                        ),
                    ),
                    'video' => array(
                        'template' => 'eZDemoBundle:block:video.html.twig',
                        'match' => array(
                            'Type' => 'Video',
                            'view' => 'default',
                        ),
                    ),
                ),
            ),
            'ezsettings.eng.block_view' => array(
                'block' => array(
                    'campaign' => array(
                        'template' => 'eZDemoBundle:block:campaign.html.twig',
                        'match' => array(
                            'Type' => 'Campaign',
                        ),
                    ),
                    'content_grid_2cols_2_rows' => array(
                        'template' => 'eZDemoBundle:block:content_grid_2cols_2rows.html.twig',
                        'match' => array(
                            'Type' => 'ContentGrid',
                            'View' => '2_columns_2_rows',
                        ),
                    ),
                    'content_grid_1col_2rows' => array(
                        'template' => 'eZDemoBundle:block:content_grid_1col_2rows.html.twig',
                        'match' => array(
                            'Type' => 'ContentGrid',
                            'View' => 'default',
                        ),
                    ),
                    'content_grid_1col_4rows' => array(
                        'template' => 'eZDemoBundle:block:content_grid_1col_4rows.html.twig',
                        'match' => array(
                            'Type' => 'ContentGrid',
                            'View' => '1_column_4_rows',
                        ),
                    ),
                    'gallery' => array(
                        'template' => 'eZDemoBundle:block:gallery.html.twig',
                        'match' => array(
                            'Type' => 'Gallery',
                            'View' => 'default',
                        ),
                    ),
                    'highlighted_item' => array(
                        'template' => 'eZDemoBundle:block:highlighted_item.html.twig',
                        'match' => array(
                            'Type' => 'HighlightedItem',
                            'View' => 'default',
                        ),
                    ),
                    'feed_reader' => array(
                        'template' => 'eZDemoBundle:block:feed_reader.html.twig',
                        'match' => array(
                            'Type' => 'FeedReader',
                            'View' => 'default',
                        ),
                    ),
                    'video' => array(
                        'template' => 'eZDemoBundle:block:video.html.twig',
                        'match' => array(
                            'Type' => 'Video',
                            'view' => 'default',
                        ),
                    ),
                ),
            ),
            'ezsettings.fre.block_view' => array(
                'block' => array(
                    'campaign' => array(
                        'template' => 'eZDemoBundle:block:campaign.html.twig',
                        'match' => array(
                            'Type' => 'Campaign',
                        ),
                    ),
                    'content_grid_2cols_2_rows' => array(
                        'template' => 'eZDemoBundle:block:content_grid_2cols_2rows.html.twig',
                        'match' => array(
                            'Type' => 'ContentGrid',
                            'View' => '2_columns_2_rows',
                        ),
                    ),
                    'content_grid_1col_2rows' => array(
                        'template' => 'eZDemoBundle:block:content_grid_1col_2rows.html.twig',
                        'match' => array(
                            'Type' => 'ContentGrid',
                            'View' => 'default',
                        ),
                    ),
                    'content_grid_1col_4rows' => array(
                        'template' => 'eZDemoBundle:block:content_grid_1col_4rows.html.twig',
                        'match' => array(
                            'Type' => 'ContentGrid',
                            'View' => '1_column_4_rows',
                        ),
                    ),
                    'gallery' => array(
                        'template' => 'eZDemoBundle:block:gallery.html.twig',
                        'match' => array(
                            'Type' => 'Gallery',
                            'View' => 'default',
                        ),
                    ),
                    'highlighted_item' => array(
                        'template' => 'eZDemoBundle:block:highlighted_item.html.twig',
                        'match' => array(
                            'Type' => 'HighlightedItem',
                            'View' => 'default',
                        ),
                    ),
                    'feed_reader' => array(
                        'template' => 'eZDemoBundle:block:feed_reader.html.twig',
                        'match' => array(
                            'Type' => 'FeedReader',
                            'View' => 'default',
                        ),
                    ),
                    'video' => array(
                        'template' => 'eZDemoBundle:block:video.html.twig',
                        'match' => array(
                            'Type' => 'Video',
                            'view' => 'default',
                        ),
                    ),
                ),
            ),
            'ezsettings.ezdemo_admin.block_view' => array(
                'block' => array(
                    'campaign' => array(
                        'template' => 'eZDemoBundle:block:campaign.html.twig',
                        'match' => array(
                            'Type' => 'Campaign',
                        ),
                    ),
                    'content_grid_2cols_2_rows' => array(
                        'template' => 'eZDemoBundle:block:content_grid_2cols_2rows.html.twig',
                        'match' => array(
                            'Type' => 'ContentGrid',
                            'View' => '2_columns_2_rows',
                        ),
                    ),
                    'content_grid_1col_2rows' => array(
                        'template' => 'eZDemoBundle:block:content_grid_1col_2rows.html.twig',
                        'match' => array(
                            'Type' => 'ContentGrid',
                            'View' => 'default',
                        ),
                    ),
                    'content_grid_1col_4rows' => array(
                        'template' => 'eZDemoBundle:block:content_grid_1col_4rows.html.twig',
                        'match' => array(
                            'Type' => 'ContentGrid',
                            'View' => '1_column_4_rows',
                        ),
                    ),
                    'gallery' => array(
                        'template' => 'eZDemoBundle:block:gallery.html.twig',
                        'match' => array(
                            'Type' => 'Gallery',
                            'View' => 'default',
                        ),
                    ),
                    'highlighted_item' => array(
                        'template' => 'eZDemoBundle:block:highlighted_item.html.twig',
                        'match' => array(
                            'Type' => 'HighlightedItem',
                            'View' => 'default',
                        ),
                    ),
                    'feed_reader' => array(
                        'template' => 'eZDemoBundle:block:feed_reader.html.twig',
                        'match' => array(
                            'Type' => 'FeedReader',
                            'View' => 'default',
                        ),
                    ),
                    'video' => array(
                        'template' => 'eZDemoBundle:block:video.html.twig',
                        'match' => array(
                            'Type' => 'Video',
                            'view' => 'default',
                        ),
                    ),
                ),
            ),
            'ezsettings.ezdemo.session' => array(
                'name' => 'eZSESSID',
            ),
            'ezsettings.eng.session' => array(
                'name' => 'eZSESSID',
            ),
            'ezsettings.fre.session' => array(
                'name' => 'eZSESSID',
            ),
            'ezsettings.ezdemo_admin.session' => array(
                'name' => 'eZSESSID{siteaccess_hash}',
            ),
            'ezsettings.ezdemo_site_group.field_templates' => array(
            ),
            'ezsettings.ezdemo.field_templates' => array(
                0 => array(
                    'template' => 'EzPublishCoreBundle::content_fields.html.twig',
                    'priority' => 0,
                ),
                1 => array(
                    'template' => 'eZDemoBundle::content_fields.html.twig',
                    'priority' => 10,
                ),
            ),
            'ezsettings.eng.field_templates' => array(
                0 => array(
                    'template' => 'EzPublishCoreBundle::content_fields.html.twig',
                    'priority' => 0,
                ),
                1 => array(
                    'template' => 'eZDemoBundle::content_fields.html.twig',
                    'priority' => 10,
                ),
            ),
            'ezsettings.fre.field_templates' => array(
                0 => array(
                    'template' => 'EzPublishCoreBundle::content_fields.html.twig',
                    'priority' => 0,
                ),
                1 => array(
                    'template' => 'eZDemoBundle::content_fields.html.twig',
                    'priority' => 10,
                ),
            ),
            'ezsettings.ezdemo_admin.field_templates' => array(
                0 => array(
                    'template' => 'EzPublishCoreBundle::content_fields.html.twig',
                    'priority' => 0,
                ),
                1 => array(
                    'template' => 'eZDemoBundle::content_fields.html.twig',
                    'priority' => 10,
                ),
            ),
            'ezsettings.ezdemo_site_group.fielddefinition_settings_templates' => array(
            ),
            'ezsettings.ezdemo.fielddefinition_settings_templates' => array(
                0 => array(
                    'template' => 'EzPublishCoreBundle::fielddefinition_settings.html.twig',
                    'priority' => 0,
                ),
            ),
            'ezsettings.eng.fielddefinition_settings_templates' => array(
                0 => array(
                    'template' => 'EzPublishCoreBundle::fielddefinition_settings.html.twig',
                    'priority' => 0,
                ),
            ),
            'ezsettings.fre.fielddefinition_settings_templates' => array(
                0 => array(
                    'template' => 'EzPublishCoreBundle::fielddefinition_settings.html.twig',
                    'priority' => 0,
                ),
            ),
            'ezsettings.ezdemo_admin.fielddefinition_settings_templates' => array(
                0 => array(
                    'template' => 'EzPublishCoreBundle::fielddefinition_settings.html.twig',
                    'priority' => 0,
                ),
            ),
            'ezsettings.ezdemo.image_variations' => array(
                'reference' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 600,
                            1 => 600,
                        ),
                    ),
                ),
                'small' => array(
                    'reference' => 'reference',
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 100,
                            1 => 100,
                        ),
                    ),
                ),
                'tiny' => array(
                    'reference' => 'reference',
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 30,
                            1 => 30,
                        ),
                    ),
                ),
                'medium' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 200,
                            1 => 290,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'large' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 360,
                            1 => 440,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'rss' => array(
                    'reference' => 'reference',
                    'filters' => array(
                        'geometry/scale' => array(
                            0 => 88,
                            1 => 31,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'campaign' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 770,
                            1 => 390,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'backgroundimage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 770,
                            1 => 390,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'highlighted' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 300,
                        ),
                        'geometry/crop' => array(
                            0 => 300,
                            1 => 300,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'galleryfull' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'contentgrid' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 370,
                            1 => 160,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'gallery' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 770,
                            1 => 390,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'imagefull' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'listitem' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 130,
                            1 => 190,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'articleimage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'articlethumbnail' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 170,
                            1 => 220,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'gallerythumbnail' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 105,
                            1 => 100,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'galleryline' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 70,
                            1 => 150,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'imagelarge' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 448,
                            1 => 622,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'logo' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaleheight' => array(
                            0 => 36,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'infoboximage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 75,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'billboard' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 764,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'productthumbnail' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 170,
                            1 => 220,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'productimage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownwidthonly' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'mainstory1' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 468,
                        ),
                        'geometry/crop' => array(
                            0 => 468,
                            1 => 396,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'mainstory2' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 439,
                        ),
                        'geometry/crop' => array(
                            0 => 439,
                            1 => 233,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'mainstory3' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 201,
                        ),
                        'geometry/crop' => array(
                            0 => 201,
                            1 => 239,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'block2items1' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 195,
                        ),
                        'geometry/crop' => array(
                            0 => 195,
                            1 => 98,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'block2items2' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 195,
                        ),
                        'geometry/crop' => array(
                            0 => 195,
                            1 => 98,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'block3items3' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 195,
                        ),
                        'geometry/crop' => array(
                            0 => 195,
                            1 => 98,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'blockgallery1' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 126,
                        ),
                        'geometry/crop' => array(
                            0 => 126,
                            1 => 84,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'imageplacesize' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 370,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
            ),
            'ezsettings.eng.image_variations' => array(
                'reference' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 600,
                            1 => 600,
                        ),
                    ),
                ),
                'small' => array(
                    'reference' => 'reference',
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 100,
                            1 => 100,
                        ),
                    ),
                ),
                'tiny' => array(
                    'reference' => 'reference',
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 30,
                            1 => 30,
                        ),
                    ),
                ),
                'medium' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 200,
                            1 => 290,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'large' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 360,
                            1 => 440,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'rss' => array(
                    'reference' => 'reference',
                    'filters' => array(
                        'geometry/scale' => array(
                            0 => 88,
                            1 => 31,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'campaign' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 770,
                            1 => 390,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'backgroundimage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 770,
                            1 => 390,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'highlighted' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 300,
                        ),
                        'geometry/crop' => array(
                            0 => 300,
                            1 => 300,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'galleryfull' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'contentgrid' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 370,
                            1 => 160,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'gallery' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 770,
                            1 => 390,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'imagefull' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'listitem' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 130,
                            1 => 190,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'articleimage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'articlethumbnail' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 170,
                            1 => 220,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'gallerythumbnail' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 105,
                            1 => 100,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'galleryline' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 70,
                            1 => 150,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'imagelarge' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 448,
                            1 => 622,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'logo' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaleheight' => array(
                            0 => 36,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'infoboximage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 75,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'billboard' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 764,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'productthumbnail' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 170,
                            1 => 220,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'productimage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownwidthonly' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'mainstory1' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 468,
                        ),
                        'geometry/crop' => array(
                            0 => 468,
                            1 => 396,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'mainstory2' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 439,
                        ),
                        'geometry/crop' => array(
                            0 => 439,
                            1 => 233,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'mainstory3' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 201,
                        ),
                        'geometry/crop' => array(
                            0 => 201,
                            1 => 239,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'block2items1' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 195,
                        ),
                        'geometry/crop' => array(
                            0 => 195,
                            1 => 98,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'block2items2' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 195,
                        ),
                        'geometry/crop' => array(
                            0 => 195,
                            1 => 98,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'block3items3' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 195,
                        ),
                        'geometry/crop' => array(
                            0 => 195,
                            1 => 98,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'blockgallery1' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 126,
                        ),
                        'geometry/crop' => array(
                            0 => 126,
                            1 => 84,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'imageplacesize' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 370,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
            ),
            'ezsettings.fre.image_variations' => array(
                'reference' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 600,
                            1 => 600,
                        ),
                    ),
                ),
                'small' => array(
                    'reference' => 'reference',
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 100,
                            1 => 100,
                        ),
                    ),
                ),
                'tiny' => array(
                    'reference' => 'reference',
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 30,
                            1 => 30,
                        ),
                    ),
                ),
                'medium' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 200,
                            1 => 290,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'large' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 360,
                            1 => 440,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'rss' => array(
                    'reference' => 'reference',
                    'filters' => array(
                        'geometry/scale' => array(
                            0 => 88,
                            1 => 31,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'campaign' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 770,
                            1 => 390,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'backgroundimage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 770,
                            1 => 390,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'highlighted' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 300,
                        ),
                        'geometry/crop' => array(
                            0 => 300,
                            1 => 300,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'galleryfull' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'contentgrid' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 370,
                            1 => 160,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'gallery' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 770,
                            1 => 390,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'imagefull' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'listitem' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 130,
                            1 => 190,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'articleimage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'articlethumbnail' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 170,
                            1 => 220,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'gallerythumbnail' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 105,
                            1 => 100,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'galleryline' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 70,
                            1 => 150,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'imagelarge' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 448,
                            1 => 622,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'logo' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaleheight' => array(
                            0 => 36,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'infoboximage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 75,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'billboard' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 764,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'productthumbnail' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 170,
                            1 => 220,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'productimage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownwidthonly' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'mainstory1' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 468,
                        ),
                        'geometry/crop' => array(
                            0 => 468,
                            1 => 396,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'mainstory2' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 439,
                        ),
                        'geometry/crop' => array(
                            0 => 439,
                            1 => 233,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'mainstory3' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 201,
                        ),
                        'geometry/crop' => array(
                            0 => 201,
                            1 => 239,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'block2items1' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 195,
                        ),
                        'geometry/crop' => array(
                            0 => 195,
                            1 => 98,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'block2items2' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 195,
                        ),
                        'geometry/crop' => array(
                            0 => 195,
                            1 => 98,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'block3items3' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 195,
                        ),
                        'geometry/crop' => array(
                            0 => 195,
                            1 => 98,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'blockgallery1' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 126,
                        ),
                        'geometry/crop' => array(
                            0 => 126,
                            1 => 84,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'imageplacesize' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 370,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
            ),
            'ezsettings.ezdemo_admin.image_variations' => array(
                'reference' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 600,
                            1 => 600,
                        ),
                    ),
                ),
                'small' => array(
                    'reference' => 'reference',
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 100,
                            1 => 100,
                        ),
                    ),
                ),
                'tiny' => array(
                    'reference' => 'reference',
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 30,
                            1 => 30,
                        ),
                    ),
                ),
                'medium' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 200,
                            1 => 290,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'large' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 360,
                            1 => 440,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'rss' => array(
                    'reference' => 'reference',
                    'filters' => array(
                        'geometry/scale' => array(
                            0 => 88,
                            1 => 31,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'campaign' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 770,
                            1 => 390,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'backgroundimage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 770,
                            1 => 390,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'highlighted' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 300,
                        ),
                        'geometry/crop' => array(
                            0 => 300,
                            1 => 300,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'galleryfull' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'contentgrid' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 370,
                            1 => 160,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'gallery' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                        'geometry/crop' => array(
                            0 => 770,
                            1 => 390,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'imagefull' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'listitem' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 130,
                            1 => 190,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'articleimage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'articlethumbnail' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 170,
                            1 => 220,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'gallerythumbnail' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 105,
                            1 => 100,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'galleryline' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 70,
                            1 => 150,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'imagelarge' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 448,
                            1 => 622,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'logo' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaleheight' => array(
                            0 => 36,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'infoboximage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 75,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'billboard' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 764,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'productthumbnail' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownonly' => array(
                            0 => 170,
                            1 => 220,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'productimage' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scaledownwidthonly' => array(
                            0 => 770,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'mainstory1' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 468,
                        ),
                        'geometry/crop' => array(
                            0 => 468,
                            1 => 396,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'mainstory2' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 439,
                        ),
                        'geometry/crop' => array(
                            0 => 439,
                            1 => 233,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'mainstory3' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 201,
                        ),
                        'geometry/crop' => array(
                            0 => 201,
                            1 => 239,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'block2items1' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 195,
                        ),
                        'geometry/crop' => array(
                            0 => 195,
                            1 => 98,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'block2items2' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 195,
                        ),
                        'geometry/crop' => array(
                            0 => 195,
                            1 => 98,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'block3items3' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 195,
                        ),
                        'geometry/crop' => array(
                            0 => 195,
                            1 => 98,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'blockgallery1' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidth' => array(
                            0 => 126,
                        ),
                        'geometry/crop' => array(
                            0 => 126,
                            1 => 84,
                            2 => 0,
                            3 => 0,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
                'imageplacesize' => array(
                    'reference' => NULL,
                    'filters' => array(
                        'geometry/scalewidthdownonly' => array(
                            0 => 370,
                        ),
                    ),
                    'post_processors' => array(
                    ),
                ),
            ),
            'ezsettings.default.ezpage' => array(
                'layouts' => array(
                    'GlobalZoneLayout' => array(
                        'name' => 'Global zone layout',
                        'template' => 'eZDemoBundle:zone:globalzonelayout.html.twig',
                    ),
                    '2ZonesLayout1' => array(
                        'name' => '2 zones (layout 1)',
                        'template' => 'eZDemoBundle:zone:2zoneslayout1.html.twig',
                    ),
                    '2ZonesLayout2' => array(
                        'name' => '2 zones (layout 2)',
                        'template' => 'eZDemoBundle:zone:2zoneslayout2.html.twig',
                    ),
                    '2ZonesLayout3' => array(
                        'name' => '2 zones (layout 3)',
                        'template' => 'eZDemoBundle:zone:2zoneslayout3.html.twig',
                    ),
                    '3ZonesLayout1' => array(
                        'name' => '3 zones (layout 1)',
                        'template' => 'eZDemoBundle:zone:3zoneslayout1.html.twig',
                    ),
                    '3ZonesLayout2' => array(
                        'name' => '3 zones (layout 2)',
                        'template' => 'eZDemoBundle:zone:3zoneslayout2.html.twig',
                    ),
                    'CallForActionLayout' => array(
                        'name' => 'Call For Action zone layout',
                        'template' => 'callforactionlayout.tpl',
                    ),
                ),
                'blocks' => array(
                    'Campaign' => array(
                        'name' => 'Campaign',
                    ),
                    'MainStory' => array(
                        'name' => 'Main story',
                    ),
                    'ContentGrid' => array(
                        'name' => 'Content Grid',
                    ),
                    'Gallery' => array(
                        'name' => 'Gallery',
                    ),
                    'Banner' => array(
                        'name' => 'Banner',
                    ),
                    'Video' => array(
                        'name' => 'Video',
                    ),
                    'TagCloud' => array(
                        'name' => 'Tag cloud',
                    ),
                    'Poll' => array(
                        'name' => 'Poll',
                    ),
                    'ItemList' => array(
                        'name' => 'Item list',
                    ),
                    'FeedReader' => array(
                        'name' => 'Feed reader',
                    ),
                    'FeedbackForm' => array(
                        'name' => 'Feedback Form',
                    ),
                    'HighlightedItem' => array(
                        'name' => 'Highlighted Item',
                    ),
                    'DemoBlock' => array(
                        'name' => 'Demo Block',
                    ),
                    'Manual2Items' => array(
                        'name' => '2 items (Manual)',
                    ),
                    'Manual3Items' => array(
                        'name' => '3 items (Manual)',
                    ),
                    'Manual4Items' => array(
                        'name' => '4 items (Manual)',
                    ),
                    'Manual5Items' => array(
                        'name' => '5 items (Manual)',
                    ),
                    'Dynamic3Items' => array(
                        'name' => '3 items (Dynamic)',
                    ),
                    'FlashRecorder' => array(
                        'name' => 'Flash Recorder',
                    ),
                    'Keyword' => array(
                        'name' => 'Keyword',
                    ),
                    'GMap' => array(
                        'name' => 'Google Map',
                    ),
                    'OnlineUsers' => array(
                        'name' => 'Online Users',
                    ),
                    'MultimediaCarousel' => array(
                        'name' => 'Multimedia carousel',
                    ),
                    'Search' => array(
                        'name' => 'Search',
                    ),
                    'Ads' => array(
                        'name' => 'Advertisement',
                    ),
                    'LatestContent' => array(
                        'name' => 'Latest content',
                    ),
                    'TopRated' => array(
                        'name' => 'Top Rated',
                    ),
                    'GMapItems' => array(
                        'name' => 'Google Map Items',
                    ),
                ),
                'enabledLayouts' => array(
                    0 => 'GlobalZoneLayout',
                    1 => '2ZonesLayout1',
                    2 => '2ZonesLayout2',
                    3 => '2ZonesLayout3',
                    4 => '3ZonesLayout1',
                    5 => '3ZonesLayout2',
                ),
                'enabledBlocks' => array(
                    0 => 'Campaign',
                    1 => 'MainStory',
                    2 => 'ContentGrid',
                    3 => 'Gallery',
                    4 => 'Banner',
                    5 => 'Video',
                    6 => 'TagCloud',
                    7 => 'Poll',
                    8 => 'ItemList',
                    9 => 'FeedReader',
                    10 => 'FeedbackForm',
                    11 => 'HighlightedItem',
                ),
            ),
            'ezsettings.ezdemo.ezpage' => array(
                'layouts' => array(
                    'GlobalZoneLayout' => array(
                        'name' => 'Global zone layout',
                        'template' => 'eZDemoBundle:zone:globalzonelayout.html.twig',
                    ),
                    '2ZonesLayout1' => array(
                        'name' => '2 zones (layout 1)',
                        'template' => 'eZDemoBundle:zone:2zoneslayout1.html.twig',
                    ),
                    '2ZonesLayout2' => array(
                        'name' => '2 zones (layout 2)',
                        'template' => 'eZDemoBundle:zone:2zoneslayout2.html.twig',
                    ),
                    '2ZonesLayout3' => array(
                        'name' => '2 zones (layout 3)',
                        'template' => 'eZDemoBundle:zone:2zoneslayout3.html.twig',
                    ),
                    '3ZonesLayout1' => array(
                        'name' => '3 zones (layout 1)',
                        'template' => 'eZDemoBundle:zone:3zoneslayout1.html.twig',
                    ),
                    '3ZonesLayout2' => array(
                        'name' => '3 zones (layout 2)',
                        'template' => 'eZDemoBundle:zone:3zoneslayout2.html.twig',
                    ),
                ),
                'blocks' => array(
                    'Campaign' => array(
                        'name' => 'Campaign',
                    ),
                    'MainStory' => array(
                        'name' => 'Main story',
                    ),
                    'ContentGrid' => array(
                        'name' => 'Content Grid',
                    ),
                    'Gallery' => array(
                        'name' => 'Gallery',
                    ),
                    'Banner' => array(
                        'name' => 'Banner',
                    ),
                    'Video' => array(
                        'name' => 'Video',
                    ),
                    'TagCloud' => array(
                        'name' => 'Tag cloud',
                    ),
                    'Poll' => array(
                        'name' => 'Poll',
                    ),
                    'ItemList' => array(
                        'name' => 'Item list',
                    ),
                    'FeedReader' => array(
                        'name' => 'Feed reader',
                    ),
                    'FeedbackForm' => array(
                        'name' => 'Feedback Form',
                    ),
                    'HighlightedItem' => array(
                        'name' => 'Highlighted Item',
                    ),
                ),
                'enabledLayouts' => array(
                    0 => 'GlobalZoneLayout',
                    1 => '2ZonesLayout1',
                    2 => '2ZonesLayout2',
                    3 => '2ZonesLayout3',
                    4 => '3ZonesLayout1',
                    5 => '3ZonesLayout2',
                ),
                'enabledBlocks' => array(
                    0 => 'Campaign',
                    1 => 'MainStory',
                    2 => 'ContentGrid',
                    3 => 'Gallery',
                    4 => 'Banner',
                    5 => 'Video',
                    6 => 'TagCloud',
                    7 => 'Poll',
                    8 => 'ItemList',
                    9 => 'FeedReader',
                    10 => 'FeedbackForm',
                    11 => 'HighlightedItem',
                ),
            ),
            'ezsettings.eng.ezpage' => array(
                'layouts' => array(
                    'GlobalZoneLayout' => array(
                        'name' => 'Global zone layout',
                        'template' => 'eZDemoBundle:zone:globalzonelayout.html.twig',
                    ),
                    '2ZonesLayout1' => array(
                        'name' => '2 zones (layout 1)',
                        'template' => 'eZDemoBundle:zone:2zoneslayout1.html.twig',
                    ),
                    '2ZonesLayout2' => array(
                        'name' => '2 zones (layout 2)',
                        'template' => 'eZDemoBundle:zone:2zoneslayout2.html.twig',
                    ),
                    '2ZonesLayout3' => array(
                        'name' => '2 zones (layout 3)',
                        'template' => 'eZDemoBundle:zone:2zoneslayout3.html.twig',
                    ),
                    '3ZonesLayout1' => array(
                        'name' => '3 zones (layout 1)',
                        'template' => 'eZDemoBundle:zone:3zoneslayout1.html.twig',
                    ),
                    '3ZonesLayout2' => array(
                        'name' => '3 zones (layout 2)',
                        'template' => 'eZDemoBundle:zone:3zoneslayout2.html.twig',
                    ),
                ),
                'blocks' => array(
                    'Campaign' => array(
                        'name' => 'Campaign',
                    ),
                    'MainStory' => array(
                        'name' => 'Main story',
                    ),
                    'ContentGrid' => array(
                        'name' => 'Content Grid',
                    ),
                    'Gallery' => array(
                        'name' => 'Gallery',
                    ),
                    'Banner' => array(
                        'name' => 'Banner',
                    ),
                    'Video' => array(
                        'name' => 'Video',
                    ),
                    'TagCloud' => array(
                        'name' => 'Tag cloud',
                    ),
                    'Poll' => array(
                        'name' => 'Poll',
                    ),
                    'ItemList' => array(
                        'name' => 'Item list',
                    ),
                    'FeedReader' => array(
                        'name' => 'Feed reader',
                    ),
                    'FeedbackForm' => array(
                        'name' => 'Feedback Form',
                    ),
                    'HighlightedItem' => array(
                        'name' => 'Highlighted Item',
                    ),
                ),
                'enabledLayouts' => array(
                    0 => 'GlobalZoneLayout',
                    1 => '2ZonesLayout1',
                    2 => '2ZonesLayout2',
                    3 => '2ZonesLayout3',
                    4 => '3ZonesLayout1',
                    5 => '3ZonesLayout2',
                ),
                'enabledBlocks' => array(
                    0 => 'Campaign',
                    1 => 'MainStory',
                    2 => 'ContentGrid',
                    3 => 'Gallery',
                    4 => 'Banner',
                    5 => 'Video',
                    6 => 'TagCloud',
                    7 => 'Poll',
                    8 => 'ItemList',
                    9 => 'FeedReader',
                    10 => 'FeedbackForm',
                    11 => 'HighlightedItem',
                ),
            ),
            'ezsettings.fre.ezpage' => array(
                'layouts' => array(
                    'GlobalZoneLayout' => array(
                        'name' => 'Global zone layout',
                        'template' => 'eZDemoBundle:zone:globalzonelayout.html.twig',
                    ),
                    '2ZonesLayout1' => array(
                        'name' => '2 zones (layout 1)',
                        'template' => 'eZDemoBundle:zone:2zoneslayout1.html.twig',
                    ),
                    '2ZonesLayout2' => array(
                        'name' => '2 zones (layout 2)',
                        'template' => 'eZDemoBundle:zone:2zoneslayout2.html.twig',
                    ),
                    '2ZonesLayout3' => array(
                        'name' => '2 zones (layout 3)',
                        'template' => 'eZDemoBundle:zone:2zoneslayout3.html.twig',
                    ),
                    '3ZonesLayout1' => array(
                        'name' => '3 zones (layout 1)',
                        'template' => 'eZDemoBundle:zone:3zoneslayout1.html.twig',
                    ),
                    '3ZonesLayout2' => array(
                        'name' => '3 zones (layout 2)',
                        'template' => 'eZDemoBundle:zone:3zoneslayout2.html.twig',
                    ),
                ),
                'blocks' => array(
                    'Campaign' => array(
                        'name' => 'Campaign',
                    ),
                    'MainStory' => array(
                        'name' => 'Main story',
                    ),
                    'ContentGrid' => array(
                        'name' => 'Content Grid',
                    ),
                    'Gallery' => array(
                        'name' => 'Gallery',
                    ),
                    'Banner' => array(
                        'name' => 'Banner',
                    ),
                    'Video' => array(
                        'name' => 'Video',
                    ),
                    'TagCloud' => array(
                        'name' => 'Tag cloud',
                    ),
                    'Poll' => array(
                        'name' => 'Poll',
                    ),
                    'ItemList' => array(
                        'name' => 'Item list',
                    ),
                    'FeedReader' => array(
                        'name' => 'Feed reader',
                    ),
                    'FeedbackForm' => array(
                        'name' => 'Feedback Form',
                    ),
                    'HighlightedItem' => array(
                        'name' => 'Highlighted Item',
                    ),
                ),
                'enabledLayouts' => array(
                    0 => 'GlobalZoneLayout',
                    1 => '2ZonesLayout1',
                    2 => '2ZonesLayout2',
                    3 => '2ZonesLayout3',
                    4 => '3ZonesLayout1',
                    5 => '3ZonesLayout2',
                ),
                'enabledBlocks' => array(
                    0 => 'Campaign',
                    1 => 'MainStory',
                    2 => 'ContentGrid',
                    3 => 'Gallery',
                    4 => 'Banner',
                    5 => 'Video',
                    6 => 'TagCloud',
                    7 => 'Poll',
                    8 => 'ItemList',
                    9 => 'FeedReader',
                    10 => 'FeedbackForm',
                    11 => 'HighlightedItem',
                ),
            ),
            'ezsettings.ezdemo_admin.ezpage' => array(
                'layouts' => array(
                    'GlobalZoneLayout' => array(
                        'name' => 'Global zone layout',
                        'template' => 'eZDemoBundle:zone:globalzonelayout.html.twig',
                    ),
                    '2ZonesLayout1' => array(
                        'name' => '2 zones (layout 1)',
                        'template' => 'eZDemoBundle:zone:2zoneslayout1.html.twig',
                    ),
                    '2ZonesLayout2' => array(
                        'name' => '2 zones (layout 2)',
                        'template' => 'eZDemoBundle:zone:2zoneslayout2.html.twig',
                    ),
                    '2ZonesLayout3' => array(
                        'name' => '2 zones (layout 3)',
                        'template' => 'eZDemoBundle:zone:2zoneslayout3.html.twig',
                    ),
                    '3ZonesLayout1' => array(
                        'name' => '3 zones (layout 1)',
                        'template' => 'eZDemoBundle:zone:3zoneslayout1.html.twig',
                    ),
                    '3ZonesLayout2' => array(
                        'name' => '3 zones (layout 2)',
                        'template' => 'eZDemoBundle:zone:3zoneslayout2.html.twig',
                    ),
                ),
                'blocks' => array(
                    'Campaign' => array(
                        'name' => 'Campaign',
                    ),
                    'MainStory' => array(
                        'name' => 'Main story',
                    ),
                    'ContentGrid' => array(
                        'name' => 'Content Grid',
                    ),
                    'Gallery' => array(
                        'name' => 'Gallery',
                    ),
                    'Banner' => array(
                        'name' => 'Banner',
                    ),
                    'Video' => array(
                        'name' => 'Video',
                    ),
                    'TagCloud' => array(
                        'name' => 'Tag cloud',
                    ),
                    'Poll' => array(
                        'name' => 'Poll',
                    ),
                    'ItemList' => array(
                        'name' => 'Item list',
                    ),
                    'FeedReader' => array(
                        'name' => 'Feed reader',
                    ),
                    'FeedbackForm' => array(
                        'name' => 'Feedback Form',
                    ),
                    'HighlightedItem' => array(
                        'name' => 'Highlighted Item',
                    ),
                ),
                'enabledLayouts' => array(
                    0 => 'GlobalZoneLayout',
                    1 => '2ZonesLayout1',
                    2 => '2ZonesLayout2',
                    3 => '2ZonesLayout3',
                    4 => '3ZonesLayout1',
                    5 => '3ZonesLayout2',
                ),
                'enabledBlocks' => array(
                    0 => 'Campaign',
                    1 => 'MainStory',
                    2 => 'ContentGrid',
                    3 => 'Gallery',
                    4 => 'Banner',
                    5 => 'Video',
                    6 => 'TagCloud',
                    7 => 'Poll',
                    8 => 'ItemList',
                    9 => 'FeedReader',
                    10 => 'FeedbackForm',
                    11 => 'HighlightedItem',
                ),
            ),
            'ezsettings.ezdemo.languages' => array(
                0 => 'eng-GB',
                1 => 'fre-FR',
            ),
            'ezsettings.eng.languages' => array(
                0 => 'eng-GB',
            ),
            'ezsettings.fre.languages' => array(
                0 => 'fre-FR',
                1 => 'eng-GB',
            ),
            'ezsettings.ezdemo_admin.languages' => array(
                0 => 'eng-GB',
                1 => 'fre-FR',
            ),
            'ezsettings.ezdemo.translation_siteaccesses' => array(
            ),
            'ezsettings.eng.translation_siteaccesses' => array(
            ),
            'ezsettings.fre.translation_siteaccesses' => array(
            ),
            'ezsettings.ezdemo_admin.translation_siteaccesses' => array(
            ),
            'ezsettings.ezdemo_site_group.repository' => 'eng_repository',
            'ezsettings.ezdemo_site_group.var_dir' => 'var/ezdemo_site',
            'ezsettings.eng.session_name' => 'eZSESSID',
            'ezsettings.ezdemo_admin.legacy_mode' => true,
            'ezsettings.ezdemo_admin.url_alias_router' => false,
            'ezsettings.ezdemo_admin.session_name' => 'eZSESSID{siteaccess_hash}',
            'ezsettings.ezdemo.session_name' => 'eZSESSID',
            'ezsettings.fre.session_name' => 'eZSESSID',
            'ezsettings.ezdemo.fieldtypes.ezrichtext.output_custom_xsl' => array(
                0 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/docbook/xhtml5/output/core.xsl',
                    'priority' => 0,
                ),
            ),
            'ezsettings.eng.fieldtypes.ezrichtext.output_custom_xsl' => array(
                0 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/docbook/xhtml5/output/core.xsl',
                    'priority' => 0,
                ),
            ),
            'ezsettings.fre.fieldtypes.ezrichtext.output_custom_xsl' => array(
                0 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/docbook/xhtml5/output/core.xsl',
                    'priority' => 0,
                ),
            ),
            'ezsettings.ezdemo_admin.fieldtypes.ezrichtext.output_custom_xsl' => array(
                0 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/docbook/xhtml5/output/core.xsl',
                    'priority' => 0,
                ),
            ),
            'ezsettings.ezdemo.fieldtypes.ezrichtext.edit_custom_xsl' => array(
                0 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/docbook/xhtml5/edit/core.xsl',
                    'priority' => 0,
                ),
            ),
            'ezsettings.eng.fieldtypes.ezrichtext.edit_custom_xsl' => array(
                0 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/docbook/xhtml5/edit/core.xsl',
                    'priority' => 0,
                ),
            ),
            'ezsettings.fre.fieldtypes.ezrichtext.edit_custom_xsl' => array(
                0 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/docbook/xhtml5/edit/core.xsl',
                    'priority' => 0,
                ),
            ),
            'ezsettings.ezdemo_admin.fieldtypes.ezrichtext.edit_custom_xsl' => array(
                0 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/RichText/Resources/stylesheets/docbook/xhtml5/edit/core.xsl',
                    'priority' => 0,
                ),
            ),
            'ezsettings.ezdemo.fieldtypes.ezrichtext.input_custom_xsl' => array(
            ),
            'ezsettings.eng.fieldtypes.ezrichtext.input_custom_xsl' => array(
            ),
            'ezsettings.fre.fieldtypes.ezrichtext.input_custom_xsl' => array(
            ),
            'ezsettings.ezdemo_admin.fieldtypes.ezrichtext.input_custom_xsl' => array(
            ),
            'ezsettings.ezdemo.fieldtypes.ezxml.custom_xsl' => array(
                0 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/XmlText/Input/Resources/stylesheets/eZXml2Html5_core.xsl',
                    'priority' => 0,
                ),
                1 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/XmlText/Input/Resources/stylesheets/eZXml2Html5_custom.xsl',
                    'priority' => 0,
                ),
            ),
            'ezsettings.eng.fieldtypes.ezxml.custom_xsl' => array(
                0 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/XmlText/Input/Resources/stylesheets/eZXml2Html5_core.xsl',
                    'priority' => 0,
                ),
                1 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/XmlText/Input/Resources/stylesheets/eZXml2Html5_custom.xsl',
                    'priority' => 0,
                ),
            ),
            'ezsettings.fre.fieldtypes.ezxml.custom_xsl' => array(
                0 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/XmlText/Input/Resources/stylesheets/eZXml2Html5_core.xsl',
                    'priority' => 0,
                ),
                1 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/XmlText/Input/Resources/stylesheets/eZXml2Html5_custom.xsl',
                    'priority' => 0,
                ),
            ),
            'ezsettings.ezdemo_admin.fieldtypes.ezxml.custom_xsl' => array(
                0 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/XmlText/Input/Resources/stylesheets/eZXml2Html5_core.xsl',
                    'priority' => 0,
                ),
                1 => array(
                    'path' => '/var/www/ayaville/ezpublish/../vendor/ezsystems/ezpublish-kernel/eZ/Publish/Core/FieldType/XmlText/Input/Resources/stylesheets/eZXml2Html5_custom.xsl',
                    'priority' => 0,
                ),
            ),
            'ezsettings.ezdemo_site_group.io.url_prefix' => 'var/ezdemo_site/storage',
            'ezsettings.ezdemo_site_group.io.legacy_url_prefix' => 'var/ezdemo_site/storage',
            'ezsettings.ezdemo_site_group.io.root_dir' => '/var/www/ayaville/ezpublish/../ezpublish_legacy/var/ezdemo_site/storage',
            'ezsettings.ezdemo.io.url_prefix' => 'var/ezdemo_site/storage',
            'ezsettings.ezdemo.io.legacy_url_prefix' => 'var/ezdemo_site/storage',
            'ezsettings.ezdemo.io.root_dir' => '/var/www/ayaville/ezpublish/../ezpublish_legacy/var/ezdemo_site/storage',
            'ezsettings.eng.io.url_prefix' => 'var/ezdemo_site/storage',
            'ezsettings.eng.io.legacy_url_prefix' => 'var/ezdemo_site/storage',
            'ezsettings.eng.io.root_dir' => '/var/www/ayaville/ezpublish/../ezpublish_legacy/var/ezdemo_site/storage',
            'ezsettings.fre.io.url_prefix' => 'var/ezdemo_site/storage',
            'ezsettings.fre.io.legacy_url_prefix' => 'var/ezdemo_site/storage',
            'ezsettings.fre.io.root_dir' => '/var/www/ayaville/ezpublish/../ezpublish_legacy/var/ezdemo_site/storage',
            'ezsettings.ezdemo_admin.io.url_prefix' => 'var/ezdemo_site/storage',
            'ezsettings.ezdemo_admin.io.legacy_url_prefix' => 'var/ezdemo_site/storage',
            'ezsettings.ezdemo_admin.io.root_dir' => '/var/www/ayaville/ezpublish/../ezpublish_legacy/var/ezdemo_site/storage',
            'ezsettings.ezdemo.related_siteaccesses' => array(
                0 => 'ezdemo',
                1 => 'eng',
                2 => 'fre',
            ),
            'ezsettings.eng.related_siteaccesses' => array(
                0 => 'ezdemo',
                1 => 'eng',
                2 => 'fre',
            ),
            'ezsettings.fre.related_siteaccesses' => array(
                0 => 'ezdemo',
                1 => 'eng',
                2 => 'fre',
            ),
            'ezpublish_legacy.enabled' => true,
            'ezpublish_legacy.kernel.lazy_loader.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Kernel\\Loader',
            'ezpublish_legacy.kernel_handler.class' => 'ezpKernelHandler',
            'ezpublish_legacy.kernel_handler.web.class' => 'ezpKernelWeb',
            'ezpublish_legacy.kernel_handler.treemenu.class' => 'ezpKernelTreeMenu',
            'ezpublish_legacy.controller.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\Controller\\LegacyKernelController',
            'ezpublish_legacy.response_manager.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\LegacyResponse\\LegacyResponseManager',
            'ezpublish_legacy.treemenu.controller.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\Controller\\LegacyTreeMenuController',
            'ezpublish_legacy.treemenu.controller.options' => array(
            ),
            'ezpublish_legacy.setup.controller.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\Controller\\LegacySetupController',
            'ezpublish_legacy.preview.controller.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\Controller\\PreviewController',
            'ezpublish_legacy.website_toolbar.controller.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\Controller\\WebsiteToolbarController',
            'ezpublish_legacy.kernel_handler.cli.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Kernel\\CLIHandler',
            'ezpublish_legacy.kernel_handler.cli.options' => array(
            ),
            'ezpublish_legacy.webconfigurator.factory.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\SetupWizard\\ConfiguratorFactory',
            'ezpublish_legacy.webconfigurator.class' => 'Sensio\\Bundle\\DistributionBundle\\Configurator\\Configurator',
            'ezpublish_legacy.router.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\Routing\\FallbackRouter',
            'ezpublish_legacy.uri_helper.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Kernel\\URIHelper',
            'ezpublish_legacy.url_generator.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\Routing\\UrlGenerator',
            'ezpublish_legacy.siteaccess_mapper.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\LegacyMapper\\SiteAccess',
            'ezpublish_legacy.siteaccess_mapper.options' => array(
                'fragment_path' => '/_fragment',
            ),
            'ezpublish_legacy.session_mapper.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\LegacyMapper\\Session',
            'ezpublish_legacy.configuration_mapper.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\LegacyMapper\\Configuration',
            'ezpublish_legacy.configuration_mapper.options' => array(
                'imagemagick_enabled' => false,
                'imagemagick_executable_path' => NULL,
                'imagemagick_executable' => 'convert',
                'imagemagick_filters' => array(
                    'geometry/scale' => '-geometry {1}x{2}',
                    'geometry/scalewidth' => '-geometry {1}',
                    'geometry/scaleheight' => '-geometry x{1}',
                    'geometry/scaledownonly' => '-geometry {1}x{2}>',
                    'geometry/scalewidthdownonly' => '-geometry {1}>',
                    'geometry/scaleheightdownonly' => '-geometry x{1}>',
                    'geometry/scaleexact' => '-geometry {1}x{2}!',
                    'geometry/scalepercent' => '-geometry {1}x{2}%',
                    'geometry/crop' => '-crop {1}x{2}+{3}+{4}',
                    'filter/noise' => '-noise {1}',
                    'filter/swirl' => '-swirl {1}',
                    'colorspace/gray' => '-colorspace GRAY',
                    'colorspace/transparent' => '-colorspace Transparent',
                    'colorspace' => '-colorspace {1}',
                    'border' => '-border {1}x{2}',
                    'border/color' => '-bordercolor rgb({1},{2},{3})',
                    'border/width' => '-borderwidth {1}',
                    'flatten' => '-flatten',
                    'resize' => '-resize {1}',
                    'optimize' => '-strip',
                ),
            ),
            'ezpublish_legacy.legacy_bundles_mapper.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\LegacyMapper\\LegacyBundles',
            'ezpublish_legacy.content_exception_handler.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\EventListener\\APIContentExceptionListener',
            'ezpublish_legacy.config.resolver.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\DependencyInjection\\Configuration\\LegacyConfigResolver',
            'ezpublish_legacy.config.default_scope' => 'site',
            'ezpublish_legacy.setup_wizard.configuration_converter.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\SetupWizard\\ConfigurationConverter',
            'ezpublish_legacy.setup_wizard.configuration_dumper.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\SetupWizard\\ConfigurationDumper',
            'ezpublish_legacy.setup_wizard.configuration_dumper.environments' => array(
                0 => 'dev',
                1 => 'prod',
            ),
            'ezpublish_legacy.setup_wizard.supported_packages' => array(
                0 => 'ezdemo_site',
                1 => 'ezdemo_site_clean',
            ),
            'ezpublish_legacy.fieldtype.ezimage.variation_service.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Image\\AliasGenerator',
            'ezpublish_legacy.persistence_cache_purger.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\Cache\\PersistenceCachePurger',
            'ezpublish_legacy.legacy_cache_purger.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\Cache\\LegacyCachePurger',
            'ezpublish_legacy.rest_listener.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\EventListener\\RestListener',
            'ezpublish_legacy.request_listener.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\EventListener\\RequestListener',
            'ezpublish_legacy.response_listener.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\EventListener\\CsrfTokenResponseListener',
            'ezpublish_legacy.config_scope_listener.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\EventListener\\ConfigScopeListener',
            'ezpublish_legacy.legacy_kernel_listener.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\EventListener\\LegacyKernelListener',
            'ezpublish_legacy.legacy_bundles.extension_locator.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\LegacyBundles\\LegacyExtensionsLocator',
            'ezpublish_legacy.security.login_cleanup_listener.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Security\\Firewall\\LoginCleanupListener',
            'ezpublish_legacy.security_mapper.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\LegacyMapper\\Security',
            'ezpublish_legacy.security.sso_firewall_listener.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Security\\Firewall\\SSOListener',
            'ezpublish_legacy.root_dir' => '/var/www/ayaville/ezpublish/../ezpublish_legacy',
            'ezpublish_legacy.twig.extension.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Templating\\Twig\\Extension\\LegacyExtension',
            'ezpublish_legacy.twig.extension.template.js' => 'EzPublishLegacyBundle::ez_legacy_render_js.html.twig',
            'ezpublish_legacy.twig.extension.template.css' => 'EzPublishLegacyBundle::ez_legacy_render_css.html.twig',
            'ezpublish_legacy.templating.api_content_converter.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Templating\\Converter\\ApiContentConverter',
            'ezpublish_legacy.templating.pageparts_converter.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Templating\\Converter\\PagePartsConverter',
            'ezpublish_legacy.templating.delegating_converter.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Templating\\Converter\\DelegatingConverter',
            'ezpublish_legacy.templating.generic_converter.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Templating\\Converter\\GenericConverter',
            'ezpublish.templating.global_helper.legacy.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Templating\\GlobalHelper',
            'ezpublish_legacy.templating.legacy_helper.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Templating\\LegacyHelper',
            'templating.engine.eztpl.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Templating\\LegacyEngine',
            'assetic.eztpl_formula_loader.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Templating\\LegacyFormulaLoader',
            'ezpublish_legacy.view_provider.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\View\\Provider',
            'ezpublish_legacy.content_view_provider.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\View\\Provider\\Content',
            'ezpublish_legacy.location_view_provider.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\View\\Provider\\Location',
            'ezpublish_legacy.block_view_provider.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\View\\Provider\\Block',
            'ezpublish_legacy.view_decorator.twig.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\View\\TwigContentViewLayoutDecorator',
            'ezpublish_legacy.view_decorator.options' => array(
                'viewbaseLayout' => 'EzPublishCoreBundle::viewbase_layout.html.twig',
                'contentBlockName' => 'content',
            ),
            'ezpublish.fieldtype.ezimage.io_legacy.factory.class' => 'eZ\\Bundle\\EzPublishLegacyBundle\\FieldType\\Image\\IO\\IOServiceFactory',
            'ezpublish_legacy.image_alias.cleaner.class' => 'eZ\\Publish\\Core\\MVC\\Legacy\\Image\\AliasCleaner',
            'ezpublish_legacy.signalslot.assign_section.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyAssignSectionSlot',
            'ezpublish_legacy.signalslot.copy_content.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyCopyContentSlot',
            'ezpublish_legacy.signalslot.create_location.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyCreateLocationSlot',
            'ezpublish_legacy.signalslot.delete_content.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyDeleteContentSlot',
            'ezpublish_legacy.signalslot.delete_location.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyDeleteLocationSlot',
            'ezpublish_legacy.signalslot.delete_version.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyDeleteVersionSlot',
            'ezpublish_legacy.signalslot.hide_location.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyHideLocationSlot',
            'ezpublish_legacy.signalslot.move_subtree.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyMoveSubtreeSlot',
            'ezpublish_legacy.signalslot.publish_version.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyPublishVersionSlot',
            'ezpublish_legacy.signalslot.set_content_state.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacySetContentStateSlot',
            'ezpublish_legacy.signalslot.create_object_state.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyCreateObjectStateSlot',
            'ezpublish_legacy.signalslot.create_object_state_group.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyCreateObjectStateGroupSlot',
            'ezpublish_legacy.signalslot.delete_object_state.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyDeleteObjectStateSlot',
            'ezpublish_legacy.signalslot.delete_object_state_group.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyDeleteObjectStateGroupSlot',
            'ezpublish_legacy.signalslot.set_priority_of_object_state.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacySetPriorityOfObjectStateSlot',
            'ezpublish_legacy.signalslot.update_object_state.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyUpdateObjectStateSlot',
            'ezpublish_legacy.signalslot.update_object_state_group.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyUpdateObjectStateGroupSlot',
            'ezpublish_legacy.signalslot.swap_location.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacySwapLocationSlot',
            'ezpublish_legacy.signalslot.unhide_location.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyUnhideLocationSlot',
            'ezpublish_legacy.signalslot.update_location.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyUpdateLocationSlot',
            'ezpublish_legacy.signalslot.publish_content_type_draft.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyPublishContentTypeDraftSlot',
            'ezpublish_legacy.signalslot.create_language.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyCreateLanguageSlot',
            'ezpublish_legacy.signalslot.delete_language.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyDeleteLanguageSlot',
            'ezpublish_legacy.signalslot.disable_language.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyDisableLanguageSlot',
            'ezpublish_legacy.signalslot.enable_language.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyEnableLanguageSlot',
            'ezpublish_legacy.signalslot.update_language_name.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyUpdateLanguageNameSlot',
            'ezpublish_legacy.signalslot.update_user.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyUpdateUserSlot',
            'ezpublish_legacy.signalslot.assign_user_to_user_group.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyAssignUserToUserGroupSlot',
            'ezpublish_legacy.signalslot.unassign_user_from_user_group.class' => 'eZ\\Publish\\Core\\SignalSlot\\Slot\\LegacyUnassignUserFromUserGroupSlot',
            'ezpublish_legacy.default.module_default_layout' => 'eZDemoBundle::pagelayout_legacy.html.twig',
            'ezpublish_legacy.default.view_default_layout' => 'eZDemoBundle::pagelayout.html.twig',
            'ezpublish.core.io.stream_file_listener.class' => 'eZ\\Bundle\\EzPublishIOBundle\\EventListener\\StreamFileListener',
            'ezpublish.core.io.flysystem.default_adapter.class' => 'League\\Flysystem\\Adapter\\Local',
            'ez_io.metadata_handlers' => array(
            ),
            'ez_io.binarydata_handlers' => array(
            ),
            'ezdemo.criteria_helper.class' => 'EzSystems\\DemoBundle\\Helper\\CriteriaHelper',
            'ezdemo.menu_helper.class' => 'EzSystems\\DemoBundle\\Helper\\MenuHelper',
            'ezdemo.place_helper.class' => 'EzSystems\\DemoBundle\\Helper\\PlaceHelper',
            'ezdemo.search_helper.class' => 'EzSystems\\DemoBundle\\Helper\\SearchHelper',
            'ezdemo.email_helper.class' => 'EzSystems\\DemoBundle\\Helper\\EmailHelper',
            'ezdemo.form.type.feedback.class' => 'EzSystems\\DemoBundle\\Form\\Type\\FeedbackType',
            'ezdemo.form.type.simple_search.class' => 'EzSystems\\DemoBundle\\Form\\Type\\SimpleSearchType',
            'ezdemo.menu_helper.default_limit' => 10,
            'ezdemo.footer.latest_content.limit' => 7,
            'ezdemo.footer.content_id' => 58,
            'ezdemo.footer.latest_content.content_types' => array(
                0 => 'article',
            ),
            'ezdemo.blog.blog_post_list.limit' => 10,
            'ezdemo.article.full_view.show_summary' => true,
            'ezdemo.article.full_view.show_image' => true,
            'ezdemo.places.place_list.min' => 0,
            'ezdemo.places.place_list.max' => 20000,
            'ezdemo.places.place_list.content_types' => array(
                0 => 'place',
            ),
            'ezdemo.cache.feed_reader_ttl' => 3600,
            'ezdemo.feedback_form.email_to' => 'root@localhost',
            'ezdemo.feedback_form.email_from' => 'noreply@ezdemobundle.test',
            'ezdemo.search.list.limit' => 10,
            'ezpublish_rest.routing.options_loader.class' => 'eZ\\Bundle\\EzPublishRestBundle\\Routing\\OptionsLoader',
            'ezpublish_rest.routing.options_loader.route_collection_mapper.class' => 'eZ\\Bundle\\EzPublishRestBundle\\Routing\\OptionsLoader\\RouteCollectionMapper',
            'ezpublish_rest.routing.options_loader.mapper.class' => 'eZ\\Bundle\\EzPublishRestBundle\\Routing\\OptionsLoader\\Mapper',
            'ezpublish_rest.cors_options_provider.class' => 'eZ\\Bundle\\EzPublishRestBundle\\CorsOptions\\RestProvider',
            'ezpublish_rest.controller.base.class' => 'eZ\\Publish\\Core\\REST\\Server\\Controller',
            'ezpublish_rest.controller.binary_content.class' => 'eZ\\Publish\\Core\\REST\\Server\\Controller\\BinaryContent',
            'ezpublish_rest.controller.content.class' => 'eZ\\Publish\\Core\\REST\\Server\\Controller\\Content',
            'ezpublish_rest.controller.content_type.class' => 'eZ\\Publish\\Core\\REST\\Server\\Controller\\ContentType',
            'ezpublish_rest.controller.location.class' => 'eZ\\Publish\\Core\\REST\\Server\\Controller\\Location',
            'ezpublish_rest.controller.object_state.class' => 'eZ\\Publish\\Core\\REST\\Server\\Controller\\ObjectState',
            'ezpublish_rest.controller.role.class' => 'eZ\\Publish\\Core\\REST\\Server\\Controller\\Role',
            'ezpublish_rest.controller.root.class' => 'eZ\\Publish\\Core\\REST\\Server\\Controller\\Root',
            'ezpublish_rest.controller.section.class' => 'eZ\\Publish\\Core\\REST\\Server\\Controller\\Section',
            'ezpublish_rest.controller.trash.class' => 'eZ\\Publish\\Core\\REST\\Server\\Controller\\Trash',
            'ezpublish_rest.controller.user.class' => 'eZ\\Publish\\Core\\REST\\Server\\Controller\\User',
            'ezpublish_rest.controller.url_wildcard.class' => 'eZ\\Publish\\Core\\REST\\Server\\Controller\\URLWildcard',
            'ezpublish_rest.controller.url_alias.class' => 'eZ\\Publish\\Core\\REST\\Server\\Controller\\URLAlias',
            'ezpublish_rest.controller.options.class' => 'eZ\\Publish\\Core\\REST\\Server\\Controller\\Options',
            'ezpublish_rest.controller.services.class' => 'eZ\\Publish\\Core\\REST\\Server\\Controller\\Services',
            'ezpublish_rest.factory.class' => 'eZ\\Bundle\\EzPublishRestBundle\\ApiLoader\\Factory',
            'ezpublish_rest.request_parser.class' => 'eZ\\Bundle\\EzPublishRestBundle\\RequestParser\\Router',
            'ezpublish_rest.parser_tools.class' => 'eZ\\Publish\\Core\\REST\\Common\\Input\\ParserTools',
            'ezpublish_rest.field_type_parser.class' => 'eZ\\Publish\\Core\\REST\\Common\\Input\\FieldTypeParser',
            'ezpublish_rest.field_type_serializer.class' => 'eZ\\Publish\\Core\\REST\\Common\\Output\\FieldTypeSerializer',
            'ezpublish_rest.request_listener.class' => 'eZ\\Bundle\\EzPublishRestBundle\\EventListener\\RequestListener',
            'ezpublish_rest.csrf_listener.class' => 'eZ\\Bundle\\EzPublishRestBundle\\EventListener\\CsrfListener',
            'ezpublish_rest.response_listener.class' => 'eZ\\Bundle\\EzPublishRestBundle\\EventListener\\ResponseListener',
            'ezpublish_rest.field_type_processor_registry.class' => 'eZ\\Publish\\Core\\REST\\Common\\FieldTypeProcessorRegistry',
            'ezpublish_rest.field_type_processor.ezimage.class' => 'eZ\\Publish\\Core\\REST\\Common\\FieldTypeProcessor\\ImageProcessor',
            'ezpublish_rest.field_type_processor.ezdatetime.class' => 'eZ\\Publish\\Core\\REST\\Common\\FieldTypeProcessor\\DateAndTimeProcessor',
            'ezpublish_rest.field_type_processor.ezdate.class' => 'eZ\\Publish\\Core\\REST\\Common\\FieldTypeProcessor\\DateProcessor',
            'ezpublish_rest.field_type_processor.ezmedia.class' => 'eZ\\Publish\\Core\\REST\\Common\\FieldTypeProcessor\\MediaProcessor',
            'ezpublish_rest.field_type_processor.ezobjectrelationlist.class' => 'eZ\\Publish\\Core\\REST\\Common\\FieldTypeProcessor\\RelationListProcessor',
            'ezpublish_rest.field_type_processor.ezobjectrelation.class' => 'eZ\\Publish\\Core\\REST\\Common\\FieldTypeProcessor\\RelationProcessor',
            'ezpublish_rest.field_type_processor.eztime.class' => 'eZ\\Publish\\Core\\REST\\Common\\FieldTypeProcessor\\TimeProcessor',
            'ezpublish_rest.field_type_processor.ezrichtext.class' => 'eZ\\Publish\\Core\\REST\\Common\\FieldTypeProcessor\\RichTextProcessor',
            'ezpublish_rest.field_type_processor.ezxmltext.class' => 'eZ\\Publish\\Core\\REST\\Common\\FieldTypeProcessor\\XmlTextProcessor',
            'ezpublish_rest.field_type_processor.ezbinaryfile.class' => 'eZ\\Publish\\Core\\REST\\Common\\FieldTypeProcessor\\BinaryProcessor',
            'ezpublish_rest.field_type_processor.ezpage.class' => 'eZ\\Publish\\Core\\REST\\Common\\FieldTypeProcessor\\PageProcessor',
            'ezpublish_rest.output.visitor.dispatcher.class' => 'eZ\\Publish\\Core\\REST\\Server\\View\\AcceptHeaderVisitorDispatcher',
            'ezpublish_rest.output.visitor.class' => 'eZ\\Publish\\Core\\REST\\Common\\Output\\Visitor',
            'ezpublish_rest.output.generator.json.class' => 'eZ\\Publish\\Core\\REST\\Common\\Output\\Generator\\Json',
            'ezpublish_rest.output.generator.json.field_type_hash_generator.class' => 'eZ\\Publish\\Core\\REST\\Common\\Output\\Generator\\Json\\FieldTypeHashGenerator',
            'ezpublish_rest.output.generator.xml.class' => 'eZ\\Publish\\Core\\REST\\Common\\Output\\Generator\\Xml',
            'ezpublish_rest.output.generator.xml.field_type_hash_generator.class' => 'eZ\\Publish\\Core\\REST\\Common\\Output\\Generator\\Xml\\FieldTypeHashGenerator',
            'ezpublish_rest.output.visitor.json.regexps' => array(
                0 => '(^application/vnd\\.ez\\.api\\.[A-Za-z]+\\+json$)',
                1 => '(^application/json$)',
            ),
            'ezpublish_rest.output.visitor.xml.regexps' => array(
                0 => '(^application/vnd\\.ez\\.api\\.[A-Za-z]+\\+xml$)',
                1 => '(^application/xml$)',
                2 => '(^.*/.*$)',
            ),
            'ezpublish_rest.output.value_object_visitor.dispatcher.class' => 'eZ\\Publish\\Core\\REST\\Common\\Output\\ValueObjectVisitorDispatcher',
            'ezpublish_rest.output.value_object_visitor.exception.invalidargumentexception.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\InvalidArgumentException',
            'ezpublish_rest.input.dispatcher.class' => 'eZ\\Publish\\Core\\REST\\Common\\Input\\Dispatcher',
            'ezpublish_rest.input.parsing_dispatcher.class' => 'eZ\\Publish\\Core\\REST\\Common\\Input\\ParsingDispatcher',
            'ezpublish_rest.input.handler.json.class' => 'eZ\\Publish\\Core\\REST\\Common\\Input\\Handler\\Json',
            'ezpublish_rest.input.handler.xml.class' => 'eZ\\Publish\\Core\\REST\\Common\\Input\\Handler\\Xml',
            'ezpublish_rest.templated_router.class' => 'eZ\\Bundle\\EzPublishCoreBundle\\Routing\\DefaultRouter',
            'ezpublish_rest.output.value_object_visitor.base.class' => 'eZ\\Publish\\Core\\REST\\Common\\Output\\ValueObjectVisitor',
            'ezpublish_rest.output.value_object_visitor.contentobjectstates.class' => 'eZ\\Publish\\Core\\REST\\Common\\Output\\ValueObjectVisitor\\ContentObjectStates',
            'ezpublish_rest.output.value_object_visitor.invalidargumentexception.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\InvalidArgumentException',
            'ezpublish_rest.output.value_object_visitor.notfoundexception.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\NotFoundException',
            'ezpublish_rest.output.value_object_visitor.unauthorizedexception.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\UnauthorizedException',
            'ezpublish_rest.output.value_object_visitor.badstateexception.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\BadStateException',
            'ezpublish_rest.output.value_object_visitor.badrequestexception.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\BadRequestException',
            'ezpublish_rest.output.value_object_visitor.forbiddenexception.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\ForbiddenException',
            'ezpublish_rest.output.value_object_visitor.exception.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\Exception',
            'ezpublish_rest.output.value_object_visitor.notimplementedexception.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\NotImplementedException',
            'ezpublish_rest.output.value_object_visitor.sectionlist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\SectionList',
            'ezpublish_rest.output.value_object_visitor.createdsection.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CreatedSection',
            'ezpublish_rest.output.value_object_visitor.section.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\Section',
            'ezpublish_rest.output.value_object_visitor.sectioncreatestruct.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\SectionCreateStruct',
            'ezpublish_rest.output.value_object_visitor.sectionupdatestruct.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\SectionUpdateStruct',
            'ezpublish_rest.output.value_object_visitor.urlwildcardlist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\URLWildcardList',
            'ezpublish_rest.output.value_object_visitor.urlwildcard.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\URLWildcard',
            'ezpublish_rest.output.value_object_visitor.createdurlwildcard.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CreatedURLWildcard',
            'ezpublish_rest.output.value_object_visitor.urlaliaslist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\URLAliasList',
            'ezpublish_rest.output.value_object_visitor.urlaliasreflist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\URLAliasRefList',
            'ezpublish_rest.output.value_object_visitor.urlalias.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\URLAlias',
            'ezpublish_rest.output.value_object_visitor.createdurlalias.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CreatedURLAlias',
            'ezpublish_rest.output.value_object_visitor.contentlist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\ContentList',
            'ezpublish_rest.output.value_object_visitor.restcontent.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\RestContent',
            'ezpublish_rest.output.value_object_visitor.createdcontent.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CreatedContent',
            'ezpublish_rest.output.value_object_visitor.versionlist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\VersionList',
            'ezpublish_rest.output.value_object_visitor.createdversion.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CreatedVersion',
            'ezpublish_rest.output.value_object_visitor.versioninfo.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\VersionInfo',
            'ezpublish_rest.output.value_object_visitor.imagevariation.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\ImageVariation',
            'ezpublish_rest.output.value_object_visitor.version.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\Version',
            'ezpublish_rest.output.value_object_visitor.restusergroup.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\RestUserGroup',
            'ezpublish_rest.output.value_object_visitor.createdusergroup.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CreatedUserGroup',
            'ezpublish_rest.output.value_object_visitor.usergrouplist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\UserGroupList',
            'ezpublish_rest.output.value_object_visitor.usergroupreflist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\UserGroupRefList',
            'ezpublish_rest.output.value_object_visitor.userlist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\UserList',
            'ezpublish_rest.output.value_object_visitor.userreflist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\UserRefList',
            'ezpublish_rest.output.value_object_visitor.createduser.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CreatedUser',
            'ezpublish_rest.output.value_object_visitor.restuser.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\RestUser',
            'ezpublish_rest.output.value_object_visitor.usersession.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\UserSession',
            'ezpublish_rest.output.value_object_visitor.usersessiondeleted.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\DeletedUserSession',
            'ezpublish_rest.output.value_object_visitor.restcontenttype.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\RestContentType',
            'ezpublish_rest.output.value_object_visitor.createdcontenttype.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CreatedContentType',
            'ezpublish_rest.output.value_object_visitor.contenttypecreatestruct.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\ContentTypeCreateStruct',
            'ezpublish_rest.output.value_object_visitor.objectstatelist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\ObjectStateList',
            'ezpublish_rest.output.value_object_visitor.createdobjectstate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CreatedObjectState',
            'ezpublish_rest.output.value_object_visitor.restobjectstate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\RestObjectState',
            'ezpublish_rest.output.value_object_visitor.objectstategrouplist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\ObjectStateGroupList',
            'ezpublish_rest.output.value_object_visitor.createdobjectstategroup.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CreatedObjectStateGroup',
            'ezpublish_rest.output.value_object_visitor.objectstategroup.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\ObjectStateGroup',
            'ezpublish_rest.output.value_object_visitor.objectstatecreatestruct.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\ObjectStateCreateStruct',
            'ezpublish_rest.output.value_object_visitor.objectstateupdatestruct.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\ObjectStateUpdateStruct',
            'ezpublish_rest.output.value_object_visitor.objectstategroupcreatestruct.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\ObjectStateGroupCreateStruct',
            'ezpublish_rest.output.value_object_visitor.objectstategroupupdatestruct.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\ObjectStateGroupUpdateStruct',
            'ezpublish_rest.output.value_object_visitor.restexecutedview.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\RestExecutedView',
            'ezpublish_rest.output.value_object_visitor.resttrashitem.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\RestTrashItem',
            'ezpublish_rest.output.value_object_visitor.trash.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\Trash',
            'ezpublish_rest.output.value_object_visitor.locationlist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\LocationList',
            'ezpublish_rest.output.value_object_visitor.restlocation.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\RestLocation',
            'ezpublish_rest.output.value_object_visitor.createdlocation.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CreatedLocation',
            'ezpublish_rest.output.value_object_visitor.locationcreatestruct.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\LocationCreateStruct',
            'ezpublish_rest.output.value_object_visitor.locationupdatestruct.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\LocationUpdateStruct',
            'ezpublish_rest.output.value_object_visitor.restusergrouproleassignment.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\RestUserGroupRoleAssignment',
            'ezpublish_rest.output.value_object_visitor.restuserroleassignment.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\RestUserRoleAssignment',
            'ezpublish_rest.output.value_object_visitor.roleassignmentlist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\RoleAssignmentList',
            'ezpublish_rest.output.value_object_visitor.policylist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\PolicyList',
            'ezpublish_rest.output.value_object_visitor.createdpolicy.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CreatedPolicy',
            'ezpublish_rest.output.value_object_visitor.policy.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\Policy',
            'ezpublish_rest.output.value_object_visitor.role.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\Role',
            'ezpublish_rest.output.value_object_visitor.createdrole.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CreatedRole',
            'ezpublish_rest.output.value_object_visitor.rolelist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\RoleList',
            'ezpublish_rest.output.value_object_visitor.rolecreatestruct.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\RoleCreateStruct',
            'ezpublish_rest.output.value_object_visitor.roleupdatestruct.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\RoleUpdateStruct',
            'ezpublish_rest.output.value_object_visitor.roleassignment.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\RoleAssignment',
            'ezpublish_rest.output.value_object_visitor.policycreatestruct.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\PolicyCreateStruct',
            'ezpublish_rest.output.value_object_visitor.policyupdatestruct.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\PolicyUpdateStruct',
            'ezpublish_rest.output.value_object_visitor.createdrelation.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CreatedRelation',
            'ezpublish_rest.output.value_object_visitor.restrelation.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\RestRelation',
            'ezpublish_rest.output.value_object_visitor.relationlist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\RelationList',
            'ezpublish_rest.output.value_object_visitor.restfielddefinition.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\RestFieldDefinition',
            'ezpublish_rest.output.value_object_visitor.createdfielddefinition.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CreatedFieldDefinition',
            'ezpublish_rest.output.value_object_visitor.fielddefinitionlist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\FieldDefinitionList',
            'ezpublish_rest.output.value_object_visitor.fielddefinitioncreatestruct.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\FieldDefinitionCreateStruct',
            'ezpublish_rest.output.value_object_visitor.contenttypegrouplist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\ContentTypeGroupList',
            'ezpublish_rest.output.value_object_visitor.createdcontenttypegroup.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CreatedContentTypeGroup',
            'ezpublish_rest.output.value_object_visitor.contenttypegroup.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\ContentTypeGroup',
            'ezpublish_rest.output.value_object_visitor.contenttypeinfolist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\ContentTypeInfoList',
            'ezpublish_rest.output.value_object_visitor.contenttypelist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\ContentTypeList',
            'ezpublish_rest.output.value_object_visitor.contenttypegroupreflist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\ContentTypeGroupRefList',
            'ezpublish_rest.output.value_object_visitor.contenttypegroupcreatestruct.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\ContentTypeGroupCreateStruct',
            'ezpublish_rest.output.value_object_visitor.contenttypegroupupdatestruct.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\ContentTypeGroupUpdateStruct',
            'ezpublish_rest.output.value_object_visitor.conflict.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\Conflict',
            'ezpublish_rest.output.value_object_visitor.seeother.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\SeeOther',
            'ezpublish_rest.output.value_object_visitor.root.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\Root',
            'ezpublish_rest.output.value_object_visitor.nocontent.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\NoContent',
            'ezpublish_rest.output.value_object_visitor.resourcecreated.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\ResourceCreated',
            'ezpublish_rest.output.value_object_visitor.permanentredirect.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\PermanentRedirect',
            'ezpublish_rest.output.value_object_visitor.temporaryredirect.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\TemporaryRedirect',
            'ezpublish_rest.output.value_object_visitor.options.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\Options',
            'ezpublish_rest.output.value_object_visitor.cached_value.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CachedValue',
            'ezpublish_rest.output.value_object_visitor.countrylist.class' => 'eZ\\Publish\\Core\\REST\\Server\\Output\\ValueObjectVisitor\\CountryList',
            'ezpublish_rest.output.value_object_visitor.limitation.class' => 'eZ\\Publish\\Core\\REST\\Client\\Output\\ValueObjectVisitor\\Limitation',
            'ezpublish_rest.input.parser.class' => 'eZ\\Publish\\Core\\REST\\Server\\Common\\Parser',
            'ezpublish_rest.input.parser.contentobjectstates.class' => 'eZ\\Publish\\Core\\REST\\Common\\Input\\Parser\\ContentObjectStates',
            'ezpublish_rest.input.parser.contentcreate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\ContentCreate',
            'ezpublish_rest.input.parser.contentupdate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\ContentUpdate',
            'ezpublish_rest.input.parser.contenttypegroupinput.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\ContentTypeGroupInput',
            'ezpublish_rest.input.parser.contenttypecreate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\ContentTypeCreate',
            'ezpublish_rest.input.parser.contenttypeupdate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\ContentTypeUpdate',
            'ezpublish_rest.input.parser.fielddefinitioncreate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\FieldDefinitionCreate',
            'ezpublish_rest.input.parser.fielddefinitionupdate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\FieldDefinitionUpdate',
            'ezpublish_rest.input.parser.locationcreate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\LocationCreate',
            'ezpublish_rest.input.parser.locationupdate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\LocationUpdate',
            'ezpublish_rest.input.parser.objectstatecreate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\ObjectStateCreate',
            'ezpublish_rest.input.parser.objectstategroupcreate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\ObjectStateGroupCreate',
            'ezpublish_rest.input.parser.objectstategroupupdate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\ObjectStateGroupUpdate',
            'ezpublish_rest.input.parser.objectstateupdate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\ObjectStateUpdate',
            'ezpublish_rest.input.parser.policycreate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\PolicyCreate',
            'ezpublish_rest.input.parser.policyupdate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\PolicyUpdate',
            'ezpublish_rest.input.parser.relationcreate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\RelationCreate',
            'ezpublish_rest.input.parser.roleassigninput.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\RoleAssignInput',
            'ezpublish_rest.input.parser.roleinput.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\RoleInput',
            'ezpublish_rest.input.parser.sectioninput.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\SectionInput',
            'ezpublish_rest.input.parser.usergroupupdate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\UserGroupUpdate',
            'ezpublish_rest.input.parser.userupdate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\UserUpdate',
            'ezpublish_rest.input.parser.urlwildcardcreate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\URLWildcardCreate',
            'ezpublish_rest.input.parser.urlaliascreate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\URLAliasCreate',
            'ezpublish_rest.input.parser.usercreate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\UserCreate',
            'ezpublish_rest.input.parser.usergroupcreate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\UserGroupCreate',
            'ezpublish_rest.input.parser.sessioninput.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\SessionInput',
            'ezpublish_rest.input.parser.versionupdate.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\VersionUpdate',
            'ezpublish_rest.input.parser.viewinput.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\ViewInput',
            'ezpublish_rest.input.parser.internal.criterion.contentid.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\ContentId',
            'ezpublish_rest.input.parser.internal.criterion.contentremoteid.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\ContentRemoteId',
            'ezpublish_rest.input.parser.internal.criterion.contenttypegroupid.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\ContentTypeGroupId',
            'ezpublish_rest.input.parser.internal.criterion.contenttypeid.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\ContentTypeId',
            'ezpublish_rest.input.parser.internal.criterion.contenttypeidentifier.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\ContentTypeIdentifier',
            'ezpublish_rest.input.parser.internal.criterion.datemetadata.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\DateMetadata',
            'ezpublish_rest.input.parser.internal.criterion.field.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\Field',
            'ezpublish_rest.input.parser.internal.criterion.fulltext.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\FullText',
            'ezpublish_rest.input.parser.internal.criterion.languagecode.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\LanguageCode',
            'ezpublish_rest.input.parser.internal.criterion.locationid.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\LocationId',
            'ezpublish_rest.input.parser.internal.criterion.locationremoteid.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\LocationRemoteId',
            'ezpublish_rest.input.parser.internal.criterion.logicaland.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\LogicalAnd',
            'ezpublish_rest.input.parser.internal.criterion.logicalnot.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\LogicalNot',
            'ezpublish_rest.input.parser.internal.criterion.logicaloperator.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\LogicalOperator',
            'ezpublish_rest.input.parser.internal.criterion.logicalor.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\LogicalOr',
            'ezpublish_rest.input.parser.internal.criterion.morelikethis.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\MoreLikeThis',
            'ezpublish_rest.input.parser.internal.criterion.objectstateid.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\ObjectStateId',
            'ezpublish_rest.input.parser.internal.criterion.operator.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\Operator',
            'ezpublish_rest.input.parser.internal.criterion.parentlocationid.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\ParentLocationId',
            'ezpublish_rest.input.parser.internal.criterion.parentlocationremoteid.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\ParentLocationRemoteId',
            'ezpublish_rest.input.parser.internal.criterion.sectionidentifier.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\SectionIdentifier',
            'ezpublish_rest.input.parser.internal.criterion.sectionid.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\SectionId',
            'ezpublish_rest.input.parser.internal.criterion.subtree.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\Subtree',
            'ezpublish_rest.input.parser.internal.criterion.usermetadata.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\UserMetadata',
            'ezpublish_rest.input.parser.internal.criterion.visibility.class' => 'eZ\\Publish\\Core\\REST\\Server\\Input\\Parser\\Criterion\\Visibility',
            'ezpublish_rest.input.parser.content.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\Content',
            'ezpublish_rest.input.parser.contentinfo.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\ContentInfo',
            'ezpublish_rest.input.parser.contentlist.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\ContentList',
            'ezpublish_rest.input.parser.contenttype.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\ContentType',
            'ezpublish_rest.input.parser.contenttypegroup.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\ContentTypeGroup',
            'ezpublish_rest.input.parser.contenttypegrouplist.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\ContentTypeGroupList',
            'ezpublish_rest.input.parser.contenttypegroupreflist.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\ContentTypeGroupRefList',
            'ezpublish_rest.input.parser.contenttypelist.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\ContentTypeList',
            'ezpublish_rest.input.parser.errormessage.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\ErrorMessage',
            'ezpublish_rest.input.parser.fielddefinition.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\FieldDefinition',
            'ezpublish_rest.input.parser.fielddefinitionlist.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\FieldDefinitionList',
            'ezpublish_rest.input.parser.limitation.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\Limitation',
            'ezpublish_rest.input.parser.location.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\Location',
            'ezpublish_rest.input.parser.objectstate.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\ObjectState',
            'ezpublish_rest.input.parser.objectstatelist.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\ObjectStateList',
            'ezpublish_rest.input.parser.objectstategroup.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\ObjectStateGroup',
            'ezpublish_rest.input.parser.objectstategrouplist.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\ObjectStateGroupList',
            'ezpublish_rest.input.parser.policy.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\Policy',
            'ezpublish_rest.input.parser.policylist.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\PolicyList',
            'ezpublish_rest.input.parser.relation.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\Relation',
            'ezpublish_rest.input.parser.relationlist.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\RelationList',
            'ezpublish_rest.input.parser.role.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\Role',
            'ezpublish_rest.input.parser.rolelist.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\RoleList',
            'ezpublish_rest.input.parser.roleassignment.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\RoleAssignment',
            'ezpublish_rest.input.parser.roleassignmentlist.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\RoleAssignmentList',
            'ezpublish_rest.input.parser.section.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\Section',
            'ezpublish_rest.input.parser.sectionlist.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\SectionList',
            'ezpublish_rest.input.parser.versioninfo.class' => 'eZ\\Publish\\Core\\REST\\Client\\Input\\Parser\\VersionInfo',
            'ezpublish_rest.security.authentication.listener.session.class' => 'eZ\\Publish\\Core\\REST\\Server\\Security\\RestAuthenticator',
            'ezpublish_rest.security.authentication.logout_handler.class' => 'eZ\\Publish\\Core\\REST\\Server\\Security\\RestLogoutHandler',
            'ezpublish_rest.csrf_token_intention' => 'rest',
            'ezpublish_rest.path_prefix' => '/api/ezp/v2',
            'ez_comments.renderer.lazy.class' => 'EzSystems\\CommentsBundle\\Comments\\CommentsRenderer',
            'ez_comments.twig.extension.class' => 'EzSystems\\CommentsBundle\\Twig\\Extension\\CommentsExtension',
            'ez_comments.content_matcher_factory.class' => 'EzSystems\\CommentsBundle\\Matcher\\ContentMatcherFactory',
            'ez_comments.provider.factory.class' => 'EzSystems\\CommentsBundle\\Comments\\Provider\\SiteAccessAwareFactory',
            'ez_comments.provider.null.class' => 'EzSystems\\CommentsBundle\\Comments\\Provider\\Null',
            'ez_comments.provider.disqus.class' => 'EzSystems\\CommentsBundle\\Comments\\Provider\\Disqus',
            'ez_comments.provider.facebook.class' => 'EzSystems\\CommentsBundle\\Comments\\Provider\\Facebook',
            'ez_comments.controller.comments_renderer.class' => 'EzSystems\\CommentsBundle\\Controller\\CommentsRendererController',
            'ez_comments.default.default_provider' => 'no_comments',
            'ez_comments.default.content_comments' => array(
            ),
            'ez_comments.default.disqus.default_template' => 'EzSystemsCommentsBundle::disqus.html.twig',
            'ez_comments.default.facebook.default_template' => 'EzSystemsCommentsBundle::facebook.html.twig',
            'ez_comments.default.facebook.width' => 470,
            'ez_comments.default.facebook.num_posts' => 10,
            'ez_comments.default.facebook.color_scheme' => 'light',
            'ez_comments.default.facebook.include_sdk' => true,
            'ez_comments.ezdemo_site_group.default_provider' => 'no_comments',
            'ez_comments.ezdemo_site_group.disqus.shortname' => 'ezpublishplatformdemo',
            'ez_comments.ezdemo.content_comments' => array(
                'comments' => array(
                    'blog_post' => array(
                        'enabled' => true,
                        'provider' => 'disqus',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'article',
                                1 => 'blog_post',
                            ),
                        ),
                        'options' => array(
                        ),
                    ),
                ),
            ),
            'ez_comments.eng.content_comments' => array(
                'comments' => array(
                    'blog_post' => array(
                        'enabled' => true,
                        'provider' => 'disqus',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'article',
                                1 => 'blog_post',
                            ),
                        ),
                        'options' => array(
                        ),
                    ),
                ),
            ),
            'ez_comments.fre.content_comments' => array(
                'comments' => array(
                    'blog_post' => array(
                        'enabled' => true,
                        'provider' => 'disqus',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'article',
                                1 => 'blog_post',
                            ),
                        ),
                        'options' => array(
                        ),
                    ),
                ),
            ),
            'ez_comments.ezdemo_admin.content_comments' => array(
                'comments' => array(
                    'blog_post' => array(
                        'enabled' => true,
                        'provider' => 'disqus',
                        'match' => array(
                            'Identifier\\ContentType' => array(
                                0 => 'article',
                                1 => 'blog_post',
                            ),
                        ),
                        'options' => array(
                        ),
                    ),
                ),
            ),
            'white_october_pagerfanta.default_view' => 'default',
            'white_october_pagerfanta.view_factory.class' => 'Pagerfanta\\View\\ViewFactory',
            'white_october_breadcrumbs.options' => array(
                'separator' => '/',
                'separatorClass' => 'separator',
                'listId' => 'wo-breadcrumbs',
                'listClass' => 'breadcrumb',
                'itemClass' => '',
                'linkRel' => '',
                'locale' => NULL,
                'translation_domain' => NULL,
                'viewTemplate' => 'WhiteOctoberBreadcrumbsBundle::breadcrumbs.html.twig',
            ),
            'nelmio_cors.defaults' => array(
                'allow_origin' => array(
                ),
                'allow_credentials' => false,
                'allow_headers' => array(
                ),
                'expose_headers' => array(
                ),
                'allow_methods' => array(
                ),
                'max_age' => 0,
                'hosts' => array(
                ),
            ),
            'nelmio_cors.map' => array(
                '^/api/ezp/v2/' => array(
                    'max_age' => 60,
                    'allow_credentials' => true,
                    'allow_headers' => array(
                        0 => 'authorization',
                        1 => 'accept',
                        2 => 'content-type',
                        3 => 'x-csrf-token',
                        4 => 'destination',
                        5 => 'x-siteaccess',
                    ),
                ),
            ),
            'nelmio_cors.cors_listener.class' => 'Nelmio\\CorsBundle\\EventListener\\CorsListener',
            'nelmio_cors.options_resolver.class' => 'Nelmio\\CorsBundle\\Options\\Resolver',
            'nelmio_cors.options_provider.config.class' => 'Nelmio\\CorsBundle\\Options\\ConfigProvider',
            'knp_menu.factory.class' => 'Knp\\Menu\\Silex\\RouterAwareFactory',
            'knp_menu.helper.class' => 'Knp\\Menu\\Twig\\Helper',
            'knp_menu.menu_provider.chain.class' => 'Knp\\Menu\\Provider\\ChainProvider',
            'knp_menu.menu_provider.container_aware.class' => 'Knp\\Bundle\\MenuBundle\\Provider\\ContainerAwareProvider',
            'knp_menu.menu_provider.builder_alias.class' => 'Knp\\Bundle\\MenuBundle\\Provider\\BuilderAliasProvider',
            'knp_menu.renderer_provider.class' => 'Knp\\Bundle\\MenuBundle\\Renderer\\ContainerAwareProvider',
            'knp_menu.renderer.list.class' => 'Knp\\Menu\\Renderer\\ListRenderer',
            'knp_menu.renderer.list.options' => array(
            ),
            'knp_menu.twig.extension.class' => 'Knp\\Menu\\Twig\\MenuExtension',
            'knp_menu.renderer.twig.class' => 'Knp\\Menu\\Renderer\\TwigRenderer',
            'knp_menu.renderer.twig.options' => array(
            ),
            'knp_menu.renderer.twig.template' => 'knp_menu.html.twig',
            'knp_menu.default_renderer' => 'twig',
            'console.command.ids' => array(
                0 => 'fos_http_cache.command.invalidate_path',
                1 => 'fos_http_cache.command.invalidate_regex',
                2 => 'fos_http_cache.command.invalidate_tag',
                3 => 'fos_http_cache.command.refresh_path',
            ),
            'ezpublish_legacy.legacy_bundles_extensions' => array(
                0 => 'ezcommentsbundle',
                1 => 'ngsymfonytools',
            ),
        );
    }
}
class eZBundleEzPublishCoreBundleDependencyInjectionConfigurationConfigResolver_000000002343a9a9000000006a1c264a extends \eZ\Bundle\EzPublishCoreBundle\DependencyInjection\Configuration\ConfigResolver implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874a919c7995982007 = null;
    private $initializer5527874a91a95559068357 = null;
    private static $publicProperties5527874a90607095958588 = array();
    public function setSiteAccess(\eZ\Publish\Core\MVC\Symfony\SiteAccess $siteAccess = null)
    {
        $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, 'setSiteAccess', array('siteAccess' => $siteAccess), $this->initializer5527874a91a95559068357);
        return $this->valueHolder5527874a919c7995982007->setSiteAccess($siteAccess);
    }
    public function setUndefinedStrategy($undefinedStrategy)
    {
        $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, 'setUndefinedStrategy', array('undefinedStrategy' => $undefinedStrategy), $this->initializer5527874a91a95559068357);
        return $this->valueHolder5527874a919c7995982007->setUndefinedStrategy($undefinedStrategy);
    }
    public function getUndefinedStrategy()
    {
        $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, 'getUndefinedStrategy', array(), $this->initializer5527874a91a95559068357);
        return $this->valueHolder5527874a919c7995982007->getUndefinedStrategy();
    }
    public function hasParameter($paramName, $namespace = null, $scope = null)
    {
        $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, 'hasParameter', array('paramName' => $paramName, 'namespace' => $namespace, 'scope' => $scope), $this->initializer5527874a91a95559068357);
        return $this->valueHolder5527874a919c7995982007->hasParameter($paramName, $namespace, $scope);
    }
    public function getParameter($paramName, $namespace = null, $scope = null)
    {
        $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, 'getParameter', array('paramName' => $paramName, 'namespace' => $namespace, 'scope' => $scope), $this->initializer5527874a91a95559068357);
        return $this->valueHolder5527874a919c7995982007->getParameter($paramName, $namespace, $scope);
    }
    public function setDefaultNamespace($defaultNamespace)
    {
        $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, 'setDefaultNamespace', array('defaultNamespace' => $defaultNamespace), $this->initializer5527874a91a95559068357);
        return $this->valueHolder5527874a919c7995982007->setDefaultNamespace($defaultNamespace);
    }
    public function getDefaultNamespace()
    {
        $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, 'getDefaultNamespace', array(), $this->initializer5527874a91a95559068357);
        return $this->valueHolder5527874a919c7995982007->getDefaultNamespace();
    }
    public function getDefaultScope()
    {
        $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, 'getDefaultScope', array(), $this->initializer5527874a91a95559068357);
        return $this->valueHolder5527874a919c7995982007->getDefaultScope();
    }
    public function setDefaultScope($scope)
    {
        $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, 'setDefaultScope', array('scope' => $scope), $this->initializer5527874a91a95559068357);
        return $this->valueHolder5527874a919c7995982007->setDefaultScope($scope);
    }
    public function setContainer(\Symfony\Component\DependencyInjection\ContainerInterface $container = null)
    {
        $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, 'setContainer', array('container' => $container), $this->initializer5527874a91a95559068357);
        return $this->valueHolder5527874a919c7995982007->setContainer($container);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874a91a95559068357 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, '__get', array('name' => $name), $this->initializer5527874a91a95559068357);
        if (isset(self::$publicProperties5527874a90607095958588[$name])) {
            return $this->valueHolder5527874a919c7995982007->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874a919c7995982007;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874a919c7995982007;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874a91a95559068357);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874a919c7995982007;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874a919c7995982007;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, '__isset', array('name' => $name), $this->initializer5527874a91a95559068357);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874a919c7995982007;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874a919c7995982007;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, '__unset', array('name' => $name), $this->initializer5527874a91a95559068357);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874a919c7995982007;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874a919c7995982007;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, '__clone', array(), $this->initializer5527874a91a95559068357);
        $this->valueHolder5527874a919c7995982007 = clone $this->valueHolder5527874a919c7995982007;
    }
    public function __sleep()
    {
        $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, '__sleep', array(), $this->initializer5527874a91a95559068357);
        return array('valueHolder5527874a919c7995982007');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874a91a95559068357 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874a91a95559068357;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874a91a95559068357 && $this->initializer5527874a91a95559068357->__invoke($this->valueHolder5527874a919c7995982007, $this, 'initializeProxy', array(), $this->initializer5527874a91a95559068357);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874a919c7995982007;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874a919c7995982007;
    }
}
class eZPublishCoreRepositoryRepository_000000002343a9d1000000006a1c264a extends \eZ\Publish\Core\Repository\Repository implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874a96c50646766176 = null;
    private $initializer5527874a96c77807880591 = null;
    private static $publicProperties5527874a96bfd558403443 = array();
    public function getCurrentUser()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'getCurrentUser', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->getCurrentUser();
    }
    public function setCurrentUser(\eZ\Publish\API\Repository\Values\User\User $user)
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'setCurrentUser', array('user' => $user), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->setCurrentUser($user);
    }
    public function sudo(\Closure $callback)
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'sudo', array('callback' => $callback), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->sudo($callback);
    }
    public function hasAccess($module, $function, \eZ\Publish\API\Repository\Values\User\User $user = null)
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'hasAccess', array('module' => $module, 'function' => $function, 'user' => $user), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->hasAccess($module, $function, $user);
    }
    public function canUser($module, $function, \eZ\Publish\API\Repository\Values\ValueObject $object, $targets = null)
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'canUser', array('module' => $module, 'function' => $function, 'object' => $object, 'targets' => $targets), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->canUser($module, $function, $object, $targets);
    }
    public function getContentService()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'getContentService', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->getContentService();
    }
    public function getContentLanguageService()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'getContentLanguageService', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->getContentLanguageService();
    }
    public function getContentTypeService()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'getContentTypeService', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->getContentTypeService();
    }
    public function getLocationService()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'getLocationService', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->getLocationService();
    }
    public function getTrashService()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'getTrashService', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->getTrashService();
    }
    public function getSectionService()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'getSectionService', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->getSectionService();
    }
    public function getUserService()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'getUserService', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->getUserService();
    }
    public function getURLAliasService()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'getURLAliasService', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->getURLAliasService();
    }
    public function getURLWildcardService()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'getURLWildcardService', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->getURLWildcardService();
    }
    public function getObjectStateService()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'getObjectStateService', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->getObjectStateService();
    }
    public function getRoleService()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'getRoleService', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->getRoleService();
    }
    public function getSearchService()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'getSearchService', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->getSearchService();
    }
    public function getFieldTypeService()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'getFieldTypeService', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->getFieldTypeService();
    }
    public function beginTransaction()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'beginTransaction', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->beginTransaction();
    }
    public function commit()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'commit', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->commit();
    }
    public function rollback()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'rollback', array(), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->rollback();
    }
    public function commitEvent($event)
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'commitEvent', array('event' => $event), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->commitEvent($event);
    }
    public function createDateTime($timestamp = null)
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'createDateTime', array('timestamp' => $timestamp), $this->initializer5527874a96c77807880591);
        return $this->valueHolder5527874a96c50646766176->createDateTime($timestamp);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874a96c77807880591 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, '__get', array('name' => $name), $this->initializer5527874a96c77807880591);
        if (isset(self::$publicProperties5527874a96bfd558403443[$name])) {
            return $this->valueHolder5527874a96c50646766176->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874a96c50646766176;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874a96c50646766176;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874a96c77807880591);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874a96c50646766176;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874a96c50646766176;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, '__isset', array('name' => $name), $this->initializer5527874a96c77807880591);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874a96c50646766176;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874a96c50646766176;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, '__unset', array('name' => $name), $this->initializer5527874a96c77807880591);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874a96c50646766176;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874a96c50646766176;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, '__clone', array(), $this->initializer5527874a96c77807880591);
        $this->valueHolder5527874a96c50646766176 = clone $this->valueHolder5527874a96c50646766176;
    }
    public function __sleep()
    {
        $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, '__sleep', array(), $this->initializer5527874a96c77807880591);
        return array('valueHolder5527874a96c50646766176');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874a96c77807880591 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874a96c77807880591;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874a96c77807880591 && $this->initializer5527874a96c77807880591->__invoke($this->valueHolder5527874a96c50646766176, $this, 'initializeProxy', array(), $this->initializer5527874a96c77807880591);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874a96c50646766176;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874a96c50646766176;
    }
}
class eZPublishCoreRepositoryContentService_000000002343a9d0000000006a1c264a extends \eZ\Publish\Core\Repository\ContentService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874a9fc59006406963 = null;
    private $initializer5527874a9fc7c228735788 = null;
    private static $publicProperties5527874a9fbfa882614790 = array();
    public function loadContentInfo($contentId)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'loadContentInfo', array('contentId' => $contentId), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->loadContentInfo($contentId);
    }
    public function internalLoadContentInfo($id, $isRemoteId = false)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'internalLoadContentInfo', array('id' => $id, 'isRemoteId' => $isRemoteId), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->internalLoadContentInfo($id, $isRemoteId);
    }
    public function loadContentInfoByRemoteId($remoteId)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'loadContentInfoByRemoteId', array('remoteId' => $remoteId), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->loadContentInfoByRemoteId($remoteId);
    }
    public function loadVersionInfo(\eZ\Publish\API\Repository\Values\Content\ContentInfo $contentInfo, $versionNo = null)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'loadVersionInfo', array('contentInfo' => $contentInfo, 'versionNo' => $versionNo), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->loadVersionInfo($contentInfo, $versionNo);
    }
    public function loadVersionInfoById($contentId, $versionNo = null)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'loadVersionInfoById', array('contentId' => $contentId, 'versionNo' => $versionNo), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->loadVersionInfoById($contentId, $versionNo);
    }
    public function loadContentByContentInfo(\eZ\Publish\API\Repository\Values\Content\ContentInfo $contentInfo, array $languages = null, $versionNo = null, $useAlwaysAvailable = true)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'loadContentByContentInfo', array('contentInfo' => $contentInfo, 'languages' => $languages, 'versionNo' => $versionNo, 'useAlwaysAvailable' => $useAlwaysAvailable), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->loadContentByContentInfo($contentInfo, $languages, $versionNo, $useAlwaysAvailable);
    }
    public function loadContentByVersionInfo(\eZ\Publish\API\Repository\Values\Content\VersionInfo $versionInfo, array $languages = null, $useAlwaysAvailable = true)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'loadContentByVersionInfo', array('versionInfo' => $versionInfo, 'languages' => $languages, 'useAlwaysAvailable' => $useAlwaysAvailable), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->loadContentByVersionInfo($versionInfo, $languages, $useAlwaysAvailable);
    }
    public function loadContent($contentId, array $languages = null, $versionNo = null, $useAlwaysAvailable = true)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'loadContent', array('contentId' => $contentId, 'languages' => $languages, 'versionNo' => $versionNo, 'useAlwaysAvailable' => $useAlwaysAvailable), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->loadContent($contentId, $languages, $versionNo, $useAlwaysAvailable);
    }
    public function internalLoadContent($id, array $languages = null, $versionNo = null, $isRemoteId = false, $useAlwaysAvailable = true)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'internalLoadContent', array('id' => $id, 'languages' => $languages, 'versionNo' => $versionNo, 'isRemoteId' => $isRemoteId, 'useAlwaysAvailable' => $useAlwaysAvailable), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->internalLoadContent($id, $languages, $versionNo, $isRemoteId, $useAlwaysAvailable);
    }
    public function loadContentByRemoteId($remoteId, array $languages = null, $versionNo = null, $useAlwaysAvailable = true)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'loadContentByRemoteId', array('remoteId' => $remoteId, 'languages' => $languages, 'versionNo' => $versionNo, 'useAlwaysAvailable' => $useAlwaysAvailable), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->loadContentByRemoteId($remoteId, $languages, $versionNo, $useAlwaysAvailable);
    }
    public function createContent(\eZ\Publish\API\Repository\Values\Content\ContentCreateStruct $contentCreateStruct, array $locationCreateStructs = array())
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'createContent', array('contentCreateStruct' => $contentCreateStruct, 'locationCreateStructs' => $locationCreateStructs), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->createContent($contentCreateStruct, $locationCreateStructs);
    }
    public function updateContentMetadata(\eZ\Publish\API\Repository\Values\Content\ContentInfo $contentInfo, \eZ\Publish\API\Repository\Values\Content\ContentMetadataUpdateStruct $contentMetadataUpdateStruct)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'updateContentMetadata', array('contentInfo' => $contentInfo, 'contentMetadataUpdateStruct' => $contentMetadataUpdateStruct), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->updateContentMetadata($contentInfo, $contentMetadataUpdateStruct);
    }
    public function deleteContent(\eZ\Publish\API\Repository\Values\Content\ContentInfo $contentInfo)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'deleteContent', array('contentInfo' => $contentInfo), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->deleteContent($contentInfo);
    }
    public function createContentDraft(\eZ\Publish\API\Repository\Values\Content\ContentInfo $contentInfo, \eZ\Publish\API\Repository\Values\Content\VersionInfo $versionInfo = null, \eZ\Publish\API\Repository\Values\User\User $creator = null)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'createContentDraft', array('contentInfo' => $contentInfo, 'versionInfo' => $versionInfo, 'creator' => $creator), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->createContentDraft($contentInfo, $versionInfo, $creator);
    }
    public function loadContentDrafts(\eZ\Publish\API\Repository\Values\User\User $user = null)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'loadContentDrafts', array('user' => $user), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->loadContentDrafts($user);
    }
    public function translateVersion(\eZ\Publish\API\Repository\Values\Content\TranslationInfo $translationInfo, \eZ\Publish\API\Repository\Values\Content\TranslationValues $translationValues, \eZ\Publish\API\Repository\Values\User\User $modifier = null)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'translateVersion', array('translationInfo' => $translationInfo, 'translationValues' => $translationValues, 'modifier' => $modifier), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->translateVersion($translationInfo, $translationValues, $modifier);
    }
    public function updateContent(\eZ\Publish\API\Repository\Values\Content\VersionInfo $versionInfo, \eZ\Publish\API\Repository\Values\Content\ContentUpdateStruct $contentUpdateStruct)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'updateContent', array('versionInfo' => $versionInfo, 'contentUpdateStruct' => $contentUpdateStruct), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->updateContent($versionInfo, $contentUpdateStruct);
    }
    public function publishVersion(\eZ\Publish\API\Repository\Values\Content\VersionInfo $versionInfo)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'publishVersion', array('versionInfo' => $versionInfo), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->publishVersion($versionInfo);
    }
    public function deleteVersion(\eZ\Publish\API\Repository\Values\Content\VersionInfo $versionInfo)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'deleteVersion', array('versionInfo' => $versionInfo), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->deleteVersion($versionInfo);
    }
    public function loadVersions(\eZ\Publish\API\Repository\Values\Content\ContentInfo $contentInfo)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'loadVersions', array('contentInfo' => $contentInfo), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->loadVersions($contentInfo);
    }
    public function copyContent(\eZ\Publish\API\Repository\Values\Content\ContentInfo $contentInfo, \eZ\Publish\API\Repository\Values\Content\LocationCreateStruct $destinationLocationCreateStruct, \eZ\Publish\API\Repository\Values\Content\VersionInfo $versionInfo = null)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'copyContent', array('contentInfo' => $contentInfo, 'destinationLocationCreateStruct' => $destinationLocationCreateStruct, 'versionInfo' => $versionInfo), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->copyContent($contentInfo, $destinationLocationCreateStruct, $versionInfo);
    }
    public function loadRelations(\eZ\Publish\API\Repository\Values\Content\VersionInfo $versionInfo)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'loadRelations', array('versionInfo' => $versionInfo), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->loadRelations($versionInfo);
    }
    public function loadReverseRelations(\eZ\Publish\API\Repository\Values\Content\ContentInfo $contentInfo)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'loadReverseRelations', array('contentInfo' => $contentInfo), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->loadReverseRelations($contentInfo);
    }
    public function addRelation(\eZ\Publish\API\Repository\Values\Content\VersionInfo $sourceVersion, \eZ\Publish\API\Repository\Values\Content\ContentInfo $destinationContent)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'addRelation', array('sourceVersion' => $sourceVersion, 'destinationContent' => $destinationContent), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->addRelation($sourceVersion, $destinationContent);
    }
    public function deleteRelation(\eZ\Publish\API\Repository\Values\Content\VersionInfo $sourceVersion, \eZ\Publish\API\Repository\Values\Content\ContentInfo $destinationContent)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'deleteRelation', array('sourceVersion' => $sourceVersion, 'destinationContent' => $destinationContent), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->deleteRelation($sourceVersion, $destinationContent);
    }
    public function addTranslationInfo(\eZ\Publish\API\Repository\Values\Content\TranslationInfo $translationInfo)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'addTranslationInfo', array('translationInfo' => $translationInfo), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->addTranslationInfo($translationInfo);
    }
    public function loadTranslationInfos(\eZ\Publish\API\Repository\Values\Content\ContentInfo $contentInfo, array $filter = array())
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'loadTranslationInfos', array('contentInfo' => $contentInfo, 'filter' => $filter), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->loadTranslationInfos($contentInfo, $filter);
    }
    public function newContentCreateStruct(\eZ\Publish\API\Repository\Values\ContentType\ContentType $contentType, $mainLanguageCode)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'newContentCreateStruct', array('contentType' => $contentType, 'mainLanguageCode' => $mainLanguageCode), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->newContentCreateStruct($contentType, $mainLanguageCode);
    }
    public function newContentMetadataUpdateStruct()
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'newContentMetadataUpdateStruct', array(), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->newContentMetadataUpdateStruct();
    }
    public function newContentUpdateStruct()
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'newContentUpdateStruct', array(), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->newContentUpdateStruct();
    }
    public function newTranslationInfo()
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'newTranslationInfo', array(), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->newTranslationInfo();
    }
    public function newTranslationValues()
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'newTranslationValues', array(), $this->initializer5527874a9fc7c228735788);
        return $this->valueHolder5527874a9fc59006406963->newTranslationValues();
    }
    public function __construct($initializer)
    {
        $this->initializer5527874a9fc7c228735788 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, '__get', array('name' => $name), $this->initializer5527874a9fc7c228735788);
        if (isset(self::$publicProperties5527874a9fbfa882614790[$name])) {
            return $this->valueHolder5527874a9fc59006406963->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874a9fc59006406963;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874a9fc59006406963;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874a9fc7c228735788);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874a9fc59006406963;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874a9fc59006406963;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, '__isset', array('name' => $name), $this->initializer5527874a9fc7c228735788);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874a9fc59006406963;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874a9fc59006406963;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, '__unset', array('name' => $name), $this->initializer5527874a9fc7c228735788);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874a9fc59006406963;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874a9fc59006406963;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, '__clone', array(), $this->initializer5527874a9fc7c228735788);
        $this->valueHolder5527874a9fc59006406963 = clone $this->valueHolder5527874a9fc59006406963;
    }
    public function __sleep()
    {
        $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, '__sleep', array(), $this->initializer5527874a9fc7c228735788);
        return array('valueHolder5527874a9fc59006406963');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874a9fc7c228735788 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874a9fc7c228735788;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874a9fc7c228735788 && $this->initializer5527874a9fc7c228735788->__invoke($this->valueHolder5527874a9fc59006406963, $this, 'initializeProxy', array(), $this->initializer5527874a9fc7c228735788);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874a9fc59006406963;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874a9fc59006406963;
    }
}
class eZPublishCoreRepositoryContentTypeService_000000002343a9dd000000006a1c264a extends \eZ\Publish\Core\Repository\ContentTypeService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874ab961a295745260 = null;
    private $initializer5527874ab9630513721834 = null;
    private static $publicProperties5527874ab95e2824618017 = array();
    public function createContentTypeGroup(\eZ\Publish\API\Repository\Values\ContentType\ContentTypeGroupCreateStruct $contentTypeGroupCreateStruct)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'createContentTypeGroup', array('contentTypeGroupCreateStruct' => $contentTypeGroupCreateStruct), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->createContentTypeGroup($contentTypeGroupCreateStruct);
    }
    public function loadContentTypeGroup($contentTypeGroupId)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'loadContentTypeGroup', array('contentTypeGroupId' => $contentTypeGroupId), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->loadContentTypeGroup($contentTypeGroupId);
    }
    public function loadContentTypeGroupByIdentifier($contentTypeGroupIdentifier)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'loadContentTypeGroupByIdentifier', array('contentTypeGroupIdentifier' => $contentTypeGroupIdentifier), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->loadContentTypeGroupByIdentifier($contentTypeGroupIdentifier);
    }
    public function loadContentTypeGroups()
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'loadContentTypeGroups', array(), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->loadContentTypeGroups();
    }
    public function updateContentTypeGroup(\eZ\Publish\API\Repository\Values\ContentType\ContentTypeGroup $contentTypeGroup, \eZ\Publish\API\Repository\Values\ContentType\ContentTypeGroupUpdateStruct $contentTypeGroupUpdateStruct)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'updateContentTypeGroup', array('contentTypeGroup' => $contentTypeGroup, 'contentTypeGroupUpdateStruct' => $contentTypeGroupUpdateStruct), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->updateContentTypeGroup($contentTypeGroup, $contentTypeGroupUpdateStruct);
    }
    public function deleteContentTypeGroup(\eZ\Publish\API\Repository\Values\ContentType\ContentTypeGroup $contentTypeGroup)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'deleteContentTypeGroup', array('contentTypeGroup' => $contentTypeGroup), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->deleteContentTypeGroup($contentTypeGroup);
    }
    public function createContentType(\eZ\Publish\API\Repository\Values\ContentType\ContentTypeCreateStruct $contentTypeCreateStruct, array $contentTypeGroups)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'createContentType', array('contentTypeCreateStruct' => $contentTypeCreateStruct, 'contentTypeGroups' => $contentTypeGroups), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->createContentType($contentTypeCreateStruct, $contentTypeGroups);
    }
    public function loadContentType($contentTypeId)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'loadContentType', array('contentTypeId' => $contentTypeId), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->loadContentType($contentTypeId);
    }
    public function loadContentTypeByIdentifier($identifier)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'loadContentTypeByIdentifier', array('identifier' => $identifier), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->loadContentTypeByIdentifier($identifier);
    }
    public function loadContentTypeByRemoteId($remoteId)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'loadContentTypeByRemoteId', array('remoteId' => $remoteId), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->loadContentTypeByRemoteId($remoteId);
    }
    public function loadContentTypeDraft($contentTypeId)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'loadContentTypeDraft', array('contentTypeId' => $contentTypeId), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->loadContentTypeDraft($contentTypeId);
    }
    public function loadContentTypes(\eZ\Publish\API\Repository\Values\ContentType\ContentTypeGroup $contentTypeGroup)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'loadContentTypes', array('contentTypeGroup' => $contentTypeGroup), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->loadContentTypes($contentTypeGroup);
    }
    public function createContentTypeDraft(\eZ\Publish\API\Repository\Values\ContentType\ContentType $contentType)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'createContentTypeDraft', array('contentType' => $contentType), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->createContentTypeDraft($contentType);
    }
    public function updateContentTypeDraft(\eZ\Publish\API\Repository\Values\ContentType\ContentTypeDraft $contentTypeDraft, \eZ\Publish\API\Repository\Values\ContentType\ContentTypeUpdateStruct $contentTypeUpdateStruct)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'updateContentTypeDraft', array('contentTypeDraft' => $contentTypeDraft, 'contentTypeUpdateStruct' => $contentTypeUpdateStruct), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->updateContentTypeDraft($contentTypeDraft, $contentTypeUpdateStruct);
    }
    public function deleteContentType(\eZ\Publish\API\Repository\Values\ContentType\ContentType $contentType)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'deleteContentType', array('contentType' => $contentType), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->deleteContentType($contentType);
    }
    public function copyContentType(\eZ\Publish\API\Repository\Values\ContentType\ContentType $contentType, \eZ\Publish\API\Repository\Values\User\User $creator = null)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'copyContentType', array('contentType' => $contentType, 'creator' => $creator), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->copyContentType($contentType, $creator);
    }
    public function assignContentTypeGroup(\eZ\Publish\API\Repository\Values\ContentType\ContentType $contentType, \eZ\Publish\API\Repository\Values\ContentType\ContentTypeGroup $contentTypeGroup)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'assignContentTypeGroup', array('contentType' => $contentType, 'contentTypeGroup' => $contentTypeGroup), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->assignContentTypeGroup($contentType, $contentTypeGroup);
    }
    public function unassignContentTypeGroup(\eZ\Publish\API\Repository\Values\ContentType\ContentType $contentType, \eZ\Publish\API\Repository\Values\ContentType\ContentTypeGroup $contentTypeGroup)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'unassignContentTypeGroup', array('contentType' => $contentType, 'contentTypeGroup' => $contentTypeGroup), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->unassignContentTypeGroup($contentType, $contentTypeGroup);
    }
    public function addFieldDefinition(\eZ\Publish\API\Repository\Values\ContentType\ContentTypeDraft $contentTypeDraft, \eZ\Publish\API\Repository\Values\ContentType\FieldDefinitionCreateStruct $fieldDefinitionCreateStruct)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'addFieldDefinition', array('contentTypeDraft' => $contentTypeDraft, 'fieldDefinitionCreateStruct' => $fieldDefinitionCreateStruct), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->addFieldDefinition($contentTypeDraft, $fieldDefinitionCreateStruct);
    }
    public function removeFieldDefinition(\eZ\Publish\API\Repository\Values\ContentType\ContentTypeDraft $contentTypeDraft, \eZ\Publish\API\Repository\Values\ContentType\FieldDefinition $fieldDefinition)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'removeFieldDefinition', array('contentTypeDraft' => $contentTypeDraft, 'fieldDefinition' => $fieldDefinition), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->removeFieldDefinition($contentTypeDraft, $fieldDefinition);
    }
    public function updateFieldDefinition(\eZ\Publish\API\Repository\Values\ContentType\ContentTypeDraft $contentTypeDraft, \eZ\Publish\API\Repository\Values\ContentType\FieldDefinition $fieldDefinition, \eZ\Publish\API\Repository\Values\ContentType\FieldDefinitionUpdateStruct $fieldDefinitionUpdateStruct)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'updateFieldDefinition', array('contentTypeDraft' => $contentTypeDraft, 'fieldDefinition' => $fieldDefinition, 'fieldDefinitionUpdateStruct' => $fieldDefinitionUpdateStruct), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->updateFieldDefinition($contentTypeDraft, $fieldDefinition, $fieldDefinitionUpdateStruct);
    }
    public function publishContentTypeDraft(\eZ\Publish\API\Repository\Values\ContentType\ContentTypeDraft $contentTypeDraft)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'publishContentTypeDraft', array('contentTypeDraft' => $contentTypeDraft), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->publishContentTypeDraft($contentTypeDraft);
    }
    public function newContentTypeGroupCreateStruct($identifier)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'newContentTypeGroupCreateStruct', array('identifier' => $identifier), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->newContentTypeGroupCreateStruct($identifier);
    }
    public function newContentTypeCreateStruct($identifier)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'newContentTypeCreateStruct', array('identifier' => $identifier), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->newContentTypeCreateStruct($identifier);
    }
    public function newContentTypeUpdateStruct()
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'newContentTypeUpdateStruct', array(), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->newContentTypeUpdateStruct();
    }
    public function newContentTypeGroupUpdateStruct()
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'newContentTypeGroupUpdateStruct', array(), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->newContentTypeGroupUpdateStruct();
    }
    public function newFieldDefinitionCreateStruct($identifier, $fieldTypeIdentifier)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'newFieldDefinitionCreateStruct', array('identifier' => $identifier, 'fieldTypeIdentifier' => $fieldTypeIdentifier), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->newFieldDefinitionCreateStruct($identifier, $fieldTypeIdentifier);
    }
    public function newFieldDefinitionUpdateStruct()
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'newFieldDefinitionUpdateStruct', array(), $this->initializer5527874ab9630513721834);
        return $this->valueHolder5527874ab961a295745260->newFieldDefinitionUpdateStruct();
    }
    public function __construct($initializer)
    {
        $this->initializer5527874ab9630513721834 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, '__get', array('name' => $name), $this->initializer5527874ab9630513721834);
        if (isset(self::$publicProperties5527874ab95e2824618017[$name])) {
            return $this->valueHolder5527874ab961a295745260->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874ab961a295745260;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874ab961a295745260;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874ab9630513721834);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874ab961a295745260;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874ab961a295745260;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, '__isset', array('name' => $name), $this->initializer5527874ab9630513721834);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874ab961a295745260;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874ab961a295745260;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, '__unset', array('name' => $name), $this->initializer5527874ab9630513721834);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874ab961a295745260;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874ab961a295745260;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, '__clone', array(), $this->initializer5527874ab9630513721834);
        $this->valueHolder5527874ab961a295745260 = clone $this->valueHolder5527874ab961a295745260;
    }
    public function __sleep()
    {
        $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, '__sleep', array(), $this->initializer5527874ab9630513721834);
        return array('valueHolder5527874ab961a295745260');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874ab9630513721834 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874ab9630513721834;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874ab9630513721834 && $this->initializer5527874ab9630513721834->__invoke($this->valueHolder5527874ab961a295745260, $this, 'initializeProxy', array(), $this->initializer5527874ab9630513721834);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874ab961a295745260;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874ab961a295745260;
    }
}
class eZPublishCoreRepositoryFieldTypeService_000000002343a9dc000000006a1c264a extends \eZ\Publish\Core\Repository\FieldTypeService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874acf790564181375 = null;
    private $initializer5527874acf7a7642687405 = null;
    private static $publicProperties5527874acf75a671654682 = array();
    public function getFieldTypes()
    {
        $this->initializer5527874acf7a7642687405 && $this->initializer5527874acf7a7642687405->__invoke($this->valueHolder5527874acf790564181375, $this, 'getFieldTypes', array(), $this->initializer5527874acf7a7642687405);
        return $this->valueHolder5527874acf790564181375->getFieldTypes();
    }
    public function getFieldType($identifier)
    {
        $this->initializer5527874acf7a7642687405 && $this->initializer5527874acf7a7642687405->__invoke($this->valueHolder5527874acf790564181375, $this, 'getFieldType', array('identifier' => $identifier), $this->initializer5527874acf7a7642687405);
        return $this->valueHolder5527874acf790564181375->getFieldType($identifier);
    }
    public function hasFieldType($identifier)
    {
        $this->initializer5527874acf7a7642687405 && $this->initializer5527874acf7a7642687405->__invoke($this->valueHolder5527874acf790564181375, $this, 'hasFieldType', array('identifier' => $identifier), $this->initializer5527874acf7a7642687405);
        return $this->valueHolder5527874acf790564181375->hasFieldType($identifier);
    }
    public function buildFieldType($identifier)
    {
        $this->initializer5527874acf7a7642687405 && $this->initializer5527874acf7a7642687405->__invoke($this->valueHolder5527874acf790564181375, $this, 'buildFieldType', array('identifier' => $identifier), $this->initializer5527874acf7a7642687405);
        return $this->valueHolder5527874acf790564181375->buildFieldType($identifier);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874acf7a7642687405 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874acf7a7642687405 && $this->initializer5527874acf7a7642687405->__invoke($this->valueHolder5527874acf790564181375, $this, '__get', array('name' => $name), $this->initializer5527874acf7a7642687405);
        if (isset(self::$publicProperties5527874acf75a671654682[$name])) {
            return $this->valueHolder5527874acf790564181375->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874acf790564181375;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874acf790564181375;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874acf7a7642687405 && $this->initializer5527874acf7a7642687405->__invoke($this->valueHolder5527874acf790564181375, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874acf7a7642687405);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874acf790564181375;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874acf790564181375;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874acf7a7642687405 && $this->initializer5527874acf7a7642687405->__invoke($this->valueHolder5527874acf790564181375, $this, '__isset', array('name' => $name), $this->initializer5527874acf7a7642687405);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874acf790564181375;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874acf790564181375;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874acf7a7642687405 && $this->initializer5527874acf7a7642687405->__invoke($this->valueHolder5527874acf790564181375, $this, '__unset', array('name' => $name), $this->initializer5527874acf7a7642687405);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874acf790564181375;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874acf790564181375;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874acf7a7642687405 && $this->initializer5527874acf7a7642687405->__invoke($this->valueHolder5527874acf790564181375, $this, '__clone', array(), $this->initializer5527874acf7a7642687405);
        $this->valueHolder5527874acf790564181375 = clone $this->valueHolder5527874acf790564181375;
    }
    public function __sleep()
    {
        $this->initializer5527874acf7a7642687405 && $this->initializer5527874acf7a7642687405->__invoke($this->valueHolder5527874acf790564181375, $this, '__sleep', array(), $this->initializer5527874acf7a7642687405);
        return array('valueHolder5527874acf790564181375');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874acf7a7642687405 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874acf7a7642687405;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874acf7a7642687405 && $this->initializer5527874acf7a7642687405->__invoke($this->valueHolder5527874acf790564181375, $this, 'initializeProxy', array(), $this->initializer5527874acf7a7642687405);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874acf790564181375;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874acf790564181375;
    }
}
class eZPublishCoreRepositoryRoleService_000000002343a984000000006a1c264a extends \eZ\Publish\Core\Repository\RoleService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874ad0bef087089734 = null;
    private $initializer5527874ad0c03050240837 = null;
    private static $publicProperties5527874ad0bc1853127588 = array();
    public function createRole(\eZ\Publish\API\Repository\Values\User\RoleCreateStruct $roleCreateStruct)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'createRole', array('roleCreateStruct' => $roleCreateStruct), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->createRole($roleCreateStruct);
    }
    public function updateRole(\eZ\Publish\API\Repository\Values\User\Role $role, \eZ\Publish\API\Repository\Values\User\RoleUpdateStruct $roleUpdateStruct)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'updateRole', array('role' => $role, 'roleUpdateStruct' => $roleUpdateStruct), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->updateRole($role, $roleUpdateStruct);
    }
    public function addPolicy(\eZ\Publish\API\Repository\Values\User\Role $role, \eZ\Publish\API\Repository\Values\User\PolicyCreateStruct $policyCreateStruct)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'addPolicy', array('role' => $role, 'policyCreateStruct' => $policyCreateStruct), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->addPolicy($role, $policyCreateStruct);
    }
    public function removePolicy(\eZ\Publish\API\Repository\Values\User\Role $role, \eZ\Publish\API\Repository\Values\User\Policy $policy)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'removePolicy', array('role' => $role, 'policy' => $policy), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->removePolicy($role, $policy);
    }
    public function deletePolicy(\eZ\Publish\API\Repository\Values\User\Policy $policy)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'deletePolicy', array('policy' => $policy), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->deletePolicy($policy);
    }
    public function updatePolicy(\eZ\Publish\API\Repository\Values\User\Policy $policy, \eZ\Publish\API\Repository\Values\User\PolicyUpdateStruct $policyUpdateStruct)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'updatePolicy', array('policy' => $policy, 'policyUpdateStruct' => $policyUpdateStruct), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->updatePolicy($policy, $policyUpdateStruct);
    }
    public function loadRole($id)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'loadRole', array('id' => $id), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->loadRole($id);
    }
    public function loadRoleByIdentifier($identifier)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'loadRoleByIdentifier', array('identifier' => $identifier), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->loadRoleByIdentifier($identifier);
    }
    public function loadRoles()
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'loadRoles', array(), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->loadRoles();
    }
    public function deleteRole(\eZ\Publish\API\Repository\Values\User\Role $role)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'deleteRole', array('role' => $role), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->deleteRole($role);
    }
    public function loadPoliciesByUserId($userId)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'loadPoliciesByUserId', array('userId' => $userId), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->loadPoliciesByUserId($userId);
    }
    public function assignRoleToUserGroup(\eZ\Publish\API\Repository\Values\User\Role $role, \eZ\Publish\API\Repository\Values\User\UserGroup $userGroup, \eZ\Publish\API\Repository\Values\User\Limitation\RoleLimitation $roleLimitation = null)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'assignRoleToUserGroup', array('role' => $role, 'userGroup' => $userGroup, 'roleLimitation' => $roleLimitation), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->assignRoleToUserGroup($role, $userGroup, $roleLimitation);
    }
    public function unassignRoleFromUserGroup(\eZ\Publish\API\Repository\Values\User\Role $role, \eZ\Publish\API\Repository\Values\User\UserGroup $userGroup)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'unassignRoleFromUserGroup', array('role' => $role, 'userGroup' => $userGroup), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->unassignRoleFromUserGroup($role, $userGroup);
    }
    public function assignRoleToUser(\eZ\Publish\API\Repository\Values\User\Role $role, \eZ\Publish\API\Repository\Values\User\User $user, \eZ\Publish\API\Repository\Values\User\Limitation\RoleLimitation $roleLimitation = null)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'assignRoleToUser', array('role' => $role, 'user' => $user, 'roleLimitation' => $roleLimitation), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->assignRoleToUser($role, $user, $roleLimitation);
    }
    public function unassignRoleFromUser(\eZ\Publish\API\Repository\Values\User\Role $role, \eZ\Publish\API\Repository\Values\User\User $user)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'unassignRoleFromUser', array('role' => $role, 'user' => $user), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->unassignRoleFromUser($role, $user);
    }
    public function getRoleAssignments(\eZ\Publish\API\Repository\Values\User\Role $role)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'getRoleAssignments', array('role' => $role), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->getRoleAssignments($role);
    }
    public function getRoleAssignmentsForUser(\eZ\Publish\API\Repository\Values\User\User $user, $inherited = false)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'getRoleAssignmentsForUser', array('user' => $user, 'inherited' => $inherited), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->getRoleAssignmentsForUser($user, $inherited);
    }
    public function getRoleAssignmentsForUserGroup(\eZ\Publish\API\Repository\Values\User\UserGroup $userGroup)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'getRoleAssignmentsForUserGroup', array('userGroup' => $userGroup), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->getRoleAssignmentsForUserGroup($userGroup);
    }
    public function newRoleCreateStruct($name)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'newRoleCreateStruct', array('name' => $name), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->newRoleCreateStruct($name);
    }
    public function newPolicyCreateStruct($module, $function)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'newPolicyCreateStruct', array('module' => $module, 'function' => $function), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->newPolicyCreateStruct($module, $function);
    }
    public function newPolicyUpdateStruct()
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'newPolicyUpdateStruct', array(), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->newPolicyUpdateStruct();
    }
    public function newRoleUpdateStruct()
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'newRoleUpdateStruct', array(), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->newRoleUpdateStruct();
    }
    public function buildDomainPolicyObject(\eZ\Publish\SPI\Persistence\User\Policy $policy, \eZ\Publish\SPI\Persistence\User\Role $role = null)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'buildDomainPolicyObject', array('policy' => $policy, 'role' => $role), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->buildDomainPolicyObject($policy, $role);
    }
    public function buildDomainUserRoleAssignmentObject(\eZ\Publish\SPI\Persistence\User\RoleAssignment $spiRoleAssignment, \eZ\Publish\API\Repository\Values\User\User $user = null, \eZ\Publish\API\Repository\Values\User\Role $role = null)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'buildDomainUserRoleAssignmentObject', array('spiRoleAssignment' => $spiRoleAssignment, 'user' => $user, 'role' => $role), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->buildDomainUserRoleAssignmentObject($spiRoleAssignment, $user, $role);
    }
    public function buildDomainUserGroupRoleAssignmentObject(\eZ\Publish\SPI\Persistence\User\RoleAssignment $spiRoleAssignment, \eZ\Publish\API\Repository\Values\User\UserGroup $userGroup = null, \eZ\Publish\API\Repository\Values\User\Role $role = null)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'buildDomainUserGroupRoleAssignmentObject', array('spiRoleAssignment' => $spiRoleAssignment, 'userGroup' => $userGroup, 'role' => $role), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->buildDomainUserGroupRoleAssignmentObject($spiRoleAssignment, $userGroup, $role);
    }
    public function getLimitationType($identifier)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'getLimitationType', array('identifier' => $identifier), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->getLimitationType($identifier);
    }
    public function getLimitationTypesByModuleFunction($module, $function)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'getLimitationTypesByModuleFunction', array('module' => $module, 'function' => $function), $this->initializer5527874ad0c03050240837);
        return $this->valueHolder5527874ad0bef087089734->getLimitationTypesByModuleFunction($module, $function);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874ad0c03050240837 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, '__get', array('name' => $name), $this->initializer5527874ad0c03050240837);
        if (isset(self::$publicProperties5527874ad0bc1853127588[$name])) {
            return $this->valueHolder5527874ad0bef087089734->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874ad0bef087089734;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874ad0bef087089734;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874ad0c03050240837);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874ad0bef087089734;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874ad0bef087089734;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, '__isset', array('name' => $name), $this->initializer5527874ad0c03050240837);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874ad0bef087089734;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874ad0bef087089734;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, '__unset', array('name' => $name), $this->initializer5527874ad0c03050240837);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874ad0bef087089734;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874ad0bef087089734;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, '__clone', array(), $this->initializer5527874ad0c03050240837);
        $this->valueHolder5527874ad0bef087089734 = clone $this->valueHolder5527874ad0bef087089734;
    }
    public function __sleep()
    {
        $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, '__sleep', array(), $this->initializer5527874ad0c03050240837);
        return array('valueHolder5527874ad0bef087089734');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874ad0c03050240837 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874ad0c03050240837;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874ad0c03050240837 && $this->initializer5527874ad0c03050240837->__invoke($this->valueHolder5527874ad0bef087089734, $this, 'initializeProxy', array(), $this->initializer5527874ad0c03050240837);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874ad0bef087089734;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874ad0bef087089734;
    }
}
class eZPublishCoreRepositoryObjectStateService_000000002343a9d8000000006a1c264a extends \eZ\Publish\Core\Repository\ObjectStateService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874ae138c754892866 = null;
    private $initializer5527874ae13ac450088952 = null;
    private static $publicProperties5527874ae134b568336479 = array();
    public function createObjectStateGroup(\eZ\Publish\API\Repository\Values\ObjectState\ObjectStateGroupCreateStruct $objectStateGroupCreateStruct)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'createObjectStateGroup', array('objectStateGroupCreateStruct' => $objectStateGroupCreateStruct), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->createObjectStateGroup($objectStateGroupCreateStruct);
    }
    public function loadObjectStateGroup($objectStateGroupId)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'loadObjectStateGroup', array('objectStateGroupId' => $objectStateGroupId), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->loadObjectStateGroup($objectStateGroupId);
    }
    public function loadObjectStateGroups($offset = 0, $limit = -1)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'loadObjectStateGroups', array('offset' => $offset, 'limit' => $limit), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->loadObjectStateGroups($offset, $limit);
    }
    public function loadObjectStates(\eZ\Publish\API\Repository\Values\ObjectState\ObjectStateGroup $objectStateGroup)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'loadObjectStates', array('objectStateGroup' => $objectStateGroup), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->loadObjectStates($objectStateGroup);
    }
    public function updateObjectStateGroup(\eZ\Publish\API\Repository\Values\ObjectState\ObjectStateGroup $objectStateGroup, \eZ\Publish\API\Repository\Values\ObjectState\ObjectStateGroupUpdateStruct $objectStateGroupUpdateStruct)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'updateObjectStateGroup', array('objectStateGroup' => $objectStateGroup, 'objectStateGroupUpdateStruct' => $objectStateGroupUpdateStruct), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->updateObjectStateGroup($objectStateGroup, $objectStateGroupUpdateStruct);
    }
    public function deleteObjectStateGroup(\eZ\Publish\API\Repository\Values\ObjectState\ObjectStateGroup $objectStateGroup)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'deleteObjectStateGroup', array('objectStateGroup' => $objectStateGroup), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->deleteObjectStateGroup($objectStateGroup);
    }
    public function createObjectState(\eZ\Publish\API\Repository\Values\ObjectState\ObjectStateGroup $objectStateGroup, \eZ\Publish\API\Repository\Values\ObjectState\ObjectStateCreateStruct $objectStateCreateStruct)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'createObjectState', array('objectStateGroup' => $objectStateGroup, 'objectStateCreateStruct' => $objectStateCreateStruct), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->createObjectState($objectStateGroup, $objectStateCreateStruct);
    }
    public function loadObjectState($stateId)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'loadObjectState', array('stateId' => $stateId), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->loadObjectState($stateId);
    }
    public function updateObjectState(\eZ\Publish\API\Repository\Values\ObjectState\ObjectState $objectState, \eZ\Publish\API\Repository\Values\ObjectState\ObjectStateUpdateStruct $objectStateUpdateStruct)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'updateObjectState', array('objectState' => $objectState, 'objectStateUpdateStruct' => $objectStateUpdateStruct), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->updateObjectState($objectState, $objectStateUpdateStruct);
    }
    public function setPriorityOfObjectState(\eZ\Publish\API\Repository\Values\ObjectState\ObjectState $objectState, $priority)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'setPriorityOfObjectState', array('objectState' => $objectState, 'priority' => $priority), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->setPriorityOfObjectState($objectState, $priority);
    }
    public function deleteObjectState(\eZ\Publish\API\Repository\Values\ObjectState\ObjectState $objectState)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'deleteObjectState', array('objectState' => $objectState), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->deleteObjectState($objectState);
    }
    public function setContentState(\eZ\Publish\API\Repository\Values\Content\ContentInfo $contentInfo, \eZ\Publish\API\Repository\Values\ObjectState\ObjectStateGroup $objectStateGroup, \eZ\Publish\API\Repository\Values\ObjectState\ObjectState $objectState)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'setContentState', array('contentInfo' => $contentInfo, 'objectStateGroup' => $objectStateGroup, 'objectState' => $objectState), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->setContentState($contentInfo, $objectStateGroup, $objectState);
    }
    public function getContentState(\eZ\Publish\API\Repository\Values\Content\ContentInfo $contentInfo, \eZ\Publish\API\Repository\Values\ObjectState\ObjectStateGroup $objectStateGroup)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'getContentState', array('contentInfo' => $contentInfo, 'objectStateGroup' => $objectStateGroup), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->getContentState($contentInfo, $objectStateGroup);
    }
    public function getContentCount(\eZ\Publish\API\Repository\Values\ObjectState\ObjectState $objectState)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'getContentCount', array('objectState' => $objectState), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->getContentCount($objectState);
    }
    public function newObjectStateGroupCreateStruct($identifier)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'newObjectStateGroupCreateStruct', array('identifier' => $identifier), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->newObjectStateGroupCreateStruct($identifier);
    }
    public function newObjectStateGroupUpdateStruct()
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'newObjectStateGroupUpdateStruct', array(), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->newObjectStateGroupUpdateStruct();
    }
    public function newObjectStateCreateStruct($identifier)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'newObjectStateCreateStruct', array('identifier' => $identifier), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->newObjectStateCreateStruct($identifier);
    }
    public function newObjectStateUpdateStruct()
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'newObjectStateUpdateStruct', array(), $this->initializer5527874ae13ac450088952);
        return $this->valueHolder5527874ae138c754892866->newObjectStateUpdateStruct();
    }
    public function __construct($initializer)
    {
        $this->initializer5527874ae13ac450088952 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, '__get', array('name' => $name), $this->initializer5527874ae13ac450088952);
        if (isset(self::$publicProperties5527874ae134b568336479[$name])) {
            return $this->valueHolder5527874ae138c754892866->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874ae138c754892866;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874ae138c754892866;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874ae13ac450088952);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874ae138c754892866;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874ae138c754892866;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, '__isset', array('name' => $name), $this->initializer5527874ae13ac450088952);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874ae138c754892866;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874ae138c754892866;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, '__unset', array('name' => $name), $this->initializer5527874ae13ac450088952);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874ae138c754892866;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874ae138c754892866;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, '__clone', array(), $this->initializer5527874ae13ac450088952);
        $this->valueHolder5527874ae138c754892866 = clone $this->valueHolder5527874ae138c754892866;
    }
    public function __sleep()
    {
        $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, '__sleep', array(), $this->initializer5527874ae13ac450088952);
        return array('valueHolder5527874ae138c754892866');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874ae13ac450088952 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874ae13ac450088952;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874ae13ac450088952 && $this->initializer5527874ae13ac450088952->__invoke($this->valueHolder5527874ae138c754892866, $this, 'initializeProxy', array(), $this->initializer5527874ae13ac450088952);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874ae138c754892866;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874ae138c754892866;
    }
}
class eZPublishCoreRepositoryURLWildcardService_000000002343a998000000006a1c264a extends \eZ\Publish\Core\Repository\URLWildcardService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874ae9428995974955 = null;
    private $initializer5527874ae943e632421716 = null;
    private static $publicProperties5527874ae93df845319222 = array();
    public function create($sourceUrl, $destinationUrl, $forward = false)
    {
        $this->initializer5527874ae943e632421716 && $this->initializer5527874ae943e632421716->__invoke($this->valueHolder5527874ae9428995974955, $this, 'create', array('sourceUrl' => $sourceUrl, 'destinationUrl' => $destinationUrl, 'forward' => $forward), $this->initializer5527874ae943e632421716);
        return $this->valueHolder5527874ae9428995974955->create($sourceUrl, $destinationUrl, $forward);
    }
    public function remove(\eZ\Publish\API\Repository\Values\Content\URLWildcard $urlWildcard)
    {
        $this->initializer5527874ae943e632421716 && $this->initializer5527874ae943e632421716->__invoke($this->valueHolder5527874ae9428995974955, $this, 'remove', array('urlWildcard' => $urlWildcard), $this->initializer5527874ae943e632421716);
        return $this->valueHolder5527874ae9428995974955->remove($urlWildcard);
    }
    public function load($id)
    {
        $this->initializer5527874ae943e632421716 && $this->initializer5527874ae943e632421716->__invoke($this->valueHolder5527874ae9428995974955, $this, 'load', array('id' => $id), $this->initializer5527874ae943e632421716);
        return $this->valueHolder5527874ae9428995974955->load($id);
    }
    public function loadAll($offset = 0, $limit = -1)
    {
        $this->initializer5527874ae943e632421716 && $this->initializer5527874ae943e632421716->__invoke($this->valueHolder5527874ae9428995974955, $this, 'loadAll', array('offset' => $offset, 'limit' => $limit), $this->initializer5527874ae943e632421716);
        return $this->valueHolder5527874ae9428995974955->loadAll($offset, $limit);
    }
    public function translate($url)
    {
        $this->initializer5527874ae943e632421716 && $this->initializer5527874ae943e632421716->__invoke($this->valueHolder5527874ae9428995974955, $this, 'translate', array('url' => $url), $this->initializer5527874ae943e632421716);
        return $this->valueHolder5527874ae9428995974955->translate($url);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874ae943e632421716 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874ae943e632421716 && $this->initializer5527874ae943e632421716->__invoke($this->valueHolder5527874ae9428995974955, $this, '__get', array('name' => $name), $this->initializer5527874ae943e632421716);
        if (isset(self::$publicProperties5527874ae93df845319222[$name])) {
            return $this->valueHolder5527874ae9428995974955->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874ae9428995974955;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874ae9428995974955;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874ae943e632421716 && $this->initializer5527874ae943e632421716->__invoke($this->valueHolder5527874ae9428995974955, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874ae943e632421716);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874ae9428995974955;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874ae9428995974955;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874ae943e632421716 && $this->initializer5527874ae943e632421716->__invoke($this->valueHolder5527874ae9428995974955, $this, '__isset', array('name' => $name), $this->initializer5527874ae943e632421716);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874ae9428995974955;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874ae9428995974955;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874ae943e632421716 && $this->initializer5527874ae943e632421716->__invoke($this->valueHolder5527874ae9428995974955, $this, '__unset', array('name' => $name), $this->initializer5527874ae943e632421716);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874ae9428995974955;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874ae9428995974955;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874ae943e632421716 && $this->initializer5527874ae943e632421716->__invoke($this->valueHolder5527874ae9428995974955, $this, '__clone', array(), $this->initializer5527874ae943e632421716);
        $this->valueHolder5527874ae9428995974955 = clone $this->valueHolder5527874ae9428995974955;
    }
    public function __sleep()
    {
        $this->initializer5527874ae943e632421716 && $this->initializer5527874ae943e632421716->__invoke($this->valueHolder5527874ae9428995974955, $this, '__sleep', array(), $this->initializer5527874ae943e632421716);
        return array('valueHolder5527874ae9428995974955');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874ae943e632421716 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874ae943e632421716;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874ae943e632421716 && $this->initializer5527874ae943e632421716->__invoke($this->valueHolder5527874ae9428995974955, $this, 'initializeProxy', array(), $this->initializer5527874ae943e632421716);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874ae9428995974955;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874ae9428995974955;
    }
}
class eZPublishCoreRepositoryURLAliasService_000000002343a999000000006a1c264a extends \eZ\Publish\Core\Repository\URLAliasService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874aeb70c846191074 = null;
    private $initializer5527874aeb721721630918 = null;
    private static $publicProperties5527874aeb6de379304467 = array();
    public function createUrlAlias(\eZ\Publish\API\Repository\Values\Content\Location $location, $path, $languageCode, $forwarding = false, $alwaysAvailable = false)
    {
        $this->initializer5527874aeb721721630918 && $this->initializer5527874aeb721721630918->__invoke($this->valueHolder5527874aeb70c846191074, $this, 'createUrlAlias', array('location' => $location, 'path' => $path, 'languageCode' => $languageCode, 'forwarding' => $forwarding, 'alwaysAvailable' => $alwaysAvailable), $this->initializer5527874aeb721721630918);
        return $this->valueHolder5527874aeb70c846191074->createUrlAlias($location, $path, $languageCode, $forwarding, $alwaysAvailable);
    }
    public function createGlobalUrlAlias($resource, $path, $languageCode, $forwarding = false, $alwaysAvailable = false)
    {
        $this->initializer5527874aeb721721630918 && $this->initializer5527874aeb721721630918->__invoke($this->valueHolder5527874aeb70c846191074, $this, 'createGlobalUrlAlias', array('resource' => $resource, 'path' => $path, 'languageCode' => $languageCode, 'forwarding' => $forwarding, 'alwaysAvailable' => $alwaysAvailable), $this->initializer5527874aeb721721630918);
        return $this->valueHolder5527874aeb70c846191074->createGlobalUrlAlias($resource, $path, $languageCode, $forwarding, $alwaysAvailable);
    }
    public function listLocationAliases(\eZ\Publish\API\Repository\Values\Content\Location $location, $custom = true, $languageCode = null, $showAllTranslations = null, array $prioritizedLanguageList = null)
    {
        $this->initializer5527874aeb721721630918 && $this->initializer5527874aeb721721630918->__invoke($this->valueHolder5527874aeb70c846191074, $this, 'listLocationAliases', array('location' => $location, 'custom' => $custom, 'languageCode' => $languageCode, 'showAllTranslations' => $showAllTranslations, 'prioritizedLanguageList' => $prioritizedLanguageList), $this->initializer5527874aeb721721630918);
        return $this->valueHolder5527874aeb70c846191074->listLocationAliases($location, $custom, $languageCode, $showAllTranslations, $prioritizedLanguageList);
    }
    public function listGlobalAliases($languageCode = null, $offset = 0, $limit = -1)
    {
        $this->initializer5527874aeb721721630918 && $this->initializer5527874aeb721721630918->__invoke($this->valueHolder5527874aeb70c846191074, $this, 'listGlobalAliases', array('languageCode' => $languageCode, 'offset' => $offset, 'limit' => $limit), $this->initializer5527874aeb721721630918);
        return $this->valueHolder5527874aeb70c846191074->listGlobalAliases($languageCode, $offset, $limit);
    }
    public function removeAliases(array $aliasList)
    {
        $this->initializer5527874aeb721721630918 && $this->initializer5527874aeb721721630918->__invoke($this->valueHolder5527874aeb70c846191074, $this, 'removeAliases', array('aliasList' => $aliasList), $this->initializer5527874aeb721721630918);
        return $this->valueHolder5527874aeb70c846191074->removeAliases($aliasList);
    }
    public function lookup($url, $languageCode = null)
    {
        $this->initializer5527874aeb721721630918 && $this->initializer5527874aeb721721630918->__invoke($this->valueHolder5527874aeb70c846191074, $this, 'lookup', array('url' => $url, 'languageCode' => $languageCode), $this->initializer5527874aeb721721630918);
        return $this->valueHolder5527874aeb70c846191074->lookup($url, $languageCode);
    }
    public function reverseLookup(\eZ\Publish\API\Repository\Values\Content\Location $location, $languageCode = null, $showAllTranslations = null, array $prioritizedLanguageList = null)
    {
        $this->initializer5527874aeb721721630918 && $this->initializer5527874aeb721721630918->__invoke($this->valueHolder5527874aeb70c846191074, $this, 'reverseLookup', array('location' => $location, 'languageCode' => $languageCode, 'showAllTranslations' => $showAllTranslations, 'prioritizedLanguageList' => $prioritizedLanguageList), $this->initializer5527874aeb721721630918);
        return $this->valueHolder5527874aeb70c846191074->reverseLookup($location, $languageCode, $showAllTranslations, $prioritizedLanguageList);
    }
    public function load($id)
    {
        $this->initializer5527874aeb721721630918 && $this->initializer5527874aeb721721630918->__invoke($this->valueHolder5527874aeb70c846191074, $this, 'load', array('id' => $id), $this->initializer5527874aeb721721630918);
        return $this->valueHolder5527874aeb70c846191074->load($id);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874aeb721721630918 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874aeb721721630918 && $this->initializer5527874aeb721721630918->__invoke($this->valueHolder5527874aeb70c846191074, $this, '__get', array('name' => $name), $this->initializer5527874aeb721721630918);
        if (isset(self::$publicProperties5527874aeb6de379304467[$name])) {
            return $this->valueHolder5527874aeb70c846191074->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874aeb70c846191074;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874aeb70c846191074;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874aeb721721630918 && $this->initializer5527874aeb721721630918->__invoke($this->valueHolder5527874aeb70c846191074, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874aeb721721630918);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874aeb70c846191074;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874aeb70c846191074;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874aeb721721630918 && $this->initializer5527874aeb721721630918->__invoke($this->valueHolder5527874aeb70c846191074, $this, '__isset', array('name' => $name), $this->initializer5527874aeb721721630918);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874aeb70c846191074;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874aeb70c846191074;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874aeb721721630918 && $this->initializer5527874aeb721721630918->__invoke($this->valueHolder5527874aeb70c846191074, $this, '__unset', array('name' => $name), $this->initializer5527874aeb721721630918);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874aeb70c846191074;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874aeb70c846191074;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874aeb721721630918 && $this->initializer5527874aeb721721630918->__invoke($this->valueHolder5527874aeb70c846191074, $this, '__clone', array(), $this->initializer5527874aeb721721630918);
        $this->valueHolder5527874aeb70c846191074 = clone $this->valueHolder5527874aeb70c846191074;
    }
    public function __sleep()
    {
        $this->initializer5527874aeb721721630918 && $this->initializer5527874aeb721721630918->__invoke($this->valueHolder5527874aeb70c846191074, $this, '__sleep', array(), $this->initializer5527874aeb721721630918);
        return array('valueHolder5527874aeb70c846191074');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874aeb721721630918 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874aeb721721630918;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874aeb721721630918 && $this->initializer5527874aeb721721630918->__invoke($this->valueHolder5527874aeb70c846191074, $this, 'initializeProxy', array(), $this->initializer5527874aeb721721630918);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874aeb70c846191074;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874aeb70c846191074;
    }
}
class eZPublishCoreRepositoryUserService_000000002343a99a000000006a1c264a extends \eZ\Publish\Core\Repository\UserService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874af0149267907775 = null;
    private $initializer5527874af0160394703860 = null;
    private static $publicProperties5527874af0113136943160 = array();
    public function createUserGroup(\eZ\Publish\API\Repository\Values\User\UserGroupCreateStruct $userGroupCreateStruct, \eZ\Publish\API\Repository\Values\User\UserGroup $parentGroup)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'createUserGroup', array('userGroupCreateStruct' => $userGroupCreateStruct, 'parentGroup' => $parentGroup), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->createUserGroup($userGroupCreateStruct, $parentGroup);
    }
    public function loadUserGroup($id)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'loadUserGroup', array('id' => $id), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->loadUserGroup($id);
    }
    public function loadSubUserGroups(\eZ\Publish\API\Repository\Values\User\UserGroup $userGroup)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'loadSubUserGroups', array('userGroup' => $userGroup), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->loadSubUserGroups($userGroup);
    }
    public function deleteUserGroup(\eZ\Publish\API\Repository\Values\User\UserGroup $userGroup)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'deleteUserGroup', array('userGroup' => $userGroup), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->deleteUserGroup($userGroup);
    }
    public function moveUserGroup(\eZ\Publish\API\Repository\Values\User\UserGroup $userGroup, \eZ\Publish\API\Repository\Values\User\UserGroup $newParent)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'moveUserGroup', array('userGroup' => $userGroup, 'newParent' => $newParent), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->moveUserGroup($userGroup, $newParent);
    }
    public function updateUserGroup(\eZ\Publish\API\Repository\Values\User\UserGroup $userGroup, \eZ\Publish\API\Repository\Values\User\UserGroupUpdateStruct $userGroupUpdateStruct)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'updateUserGroup', array('userGroup' => $userGroup, 'userGroupUpdateStruct' => $userGroupUpdateStruct), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->updateUserGroup($userGroup, $userGroupUpdateStruct);
    }
    public function createUser(\eZ\Publish\API\Repository\Values\User\UserCreateStruct $userCreateStruct, array $parentGroups)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'createUser', array('userCreateStruct' => $userCreateStruct, 'parentGroups' => $parentGroups), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->createUser($userCreateStruct, $parentGroups);
    }
    public function loadUser($userId)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'loadUser', array('userId' => $userId), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->loadUser($userId);
    }
    public function loadAnonymousUser()
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'loadAnonymousUser', array(), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->loadAnonymousUser();
    }
    public function loadUserByCredentials($login, $password)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'loadUserByCredentials', array('login' => $login, 'password' => $password), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->loadUserByCredentials($login, $password);
    }
    public function loadUserByLogin($login)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'loadUserByLogin', array('login' => $login), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->loadUserByLogin($login);
    }
    public function loadUsersByEmail($email)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'loadUsersByEmail', array('email' => $email), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->loadUsersByEmail($email);
    }
    public function deleteUser(\eZ\Publish\API\Repository\Values\User\User $user)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'deleteUser', array('user' => $user), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->deleteUser($user);
    }
    public function updateUser(\eZ\Publish\API\Repository\Values\User\User $user, \eZ\Publish\API\Repository\Values\User\UserUpdateStruct $userUpdateStruct)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'updateUser', array('user' => $user, 'userUpdateStruct' => $userUpdateStruct), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->updateUser($user, $userUpdateStruct);
    }
    public function assignUserToUserGroup(\eZ\Publish\API\Repository\Values\User\User $user, \eZ\Publish\API\Repository\Values\User\UserGroup $userGroup)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'assignUserToUserGroup', array('user' => $user, 'userGroup' => $userGroup), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->assignUserToUserGroup($user, $userGroup);
    }
    public function unAssignUserFromUserGroup(\eZ\Publish\API\Repository\Values\User\User $user, \eZ\Publish\API\Repository\Values\User\UserGroup $userGroup)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'unAssignUserFromUserGroup', array('user' => $user, 'userGroup' => $userGroup), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->unAssignUserFromUserGroup($user, $userGroup);
    }
    public function loadUserGroupsOfUser(\eZ\Publish\API\Repository\Values\User\User $user)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'loadUserGroupsOfUser', array('user' => $user), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->loadUserGroupsOfUser($user);
    }
    public function loadUsersOfUserGroup(\eZ\Publish\API\Repository\Values\User\UserGroup $userGroup, $offset = 0, $limit = -1)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'loadUsersOfUserGroup', array('userGroup' => $userGroup, 'offset' => $offset, 'limit' => $limit), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->loadUsersOfUserGroup($userGroup, $offset, $limit);
    }
    public function newUserCreateStruct($login, $email, $password, $mainLanguageCode, $contentType = null)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'newUserCreateStruct', array('login' => $login, 'email' => $email, 'password' => $password, 'mainLanguageCode' => $mainLanguageCode, 'contentType' => $contentType), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->newUserCreateStruct($login, $email, $password, $mainLanguageCode, $contentType);
    }
    public function newUserGroupCreateStruct($mainLanguageCode, $contentType = null)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'newUserGroupCreateStruct', array('mainLanguageCode' => $mainLanguageCode, 'contentType' => $contentType), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->newUserGroupCreateStruct($mainLanguageCode, $contentType);
    }
    public function newUserUpdateStruct()
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'newUserUpdateStruct', array(), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->newUserUpdateStruct();
    }
    public function newUserGroupUpdateStruct()
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'newUserGroupUpdateStruct', array(), $this->initializer5527874af0160394703860);
        return $this->valueHolder5527874af0149267907775->newUserGroupUpdateStruct();
    }
    public function __construct($initializer)
    {
        $this->initializer5527874af0160394703860 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, '__get', array('name' => $name), $this->initializer5527874af0160394703860);
        if (isset(self::$publicProperties5527874af0113136943160[$name])) {
            return $this->valueHolder5527874af0149267907775->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874af0149267907775;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874af0149267907775;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874af0160394703860);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874af0149267907775;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874af0149267907775;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, '__isset', array('name' => $name), $this->initializer5527874af0160394703860);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874af0149267907775;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874af0149267907775;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, '__unset', array('name' => $name), $this->initializer5527874af0160394703860);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874af0149267907775;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874af0149267907775;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, '__clone', array(), $this->initializer5527874af0160394703860);
        $this->valueHolder5527874af0149267907775 = clone $this->valueHolder5527874af0149267907775;
    }
    public function __sleep()
    {
        $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, '__sleep', array(), $this->initializer5527874af0160394703860);
        return array('valueHolder5527874af0149267907775');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874af0160394703860 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874af0160394703860;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874af0160394703860 && $this->initializer5527874af0160394703860->__invoke($this->valueHolder5527874af0149267907775, $this, 'initializeProxy', array(), $this->initializer5527874af0160394703860);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874af0149267907775;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874af0149267907775;
    }
}
class eZPublishCoreRepositorySearchService_000000002343a991000000006a1c264a extends \eZ\Publish\Core\Repository\SearchService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b08d60328844978 = null;
    private $initializer5527874b08d77908290173 = null;
    private static $publicProperties5527874b08d23460936377 = array();
    public function findContent(\eZ\Publish\API\Repository\Values\Content\Query $query, array $fieldFilters = array(), $filterOnUserPermissions = true)
    {
        $this->initializer5527874b08d77908290173 && $this->initializer5527874b08d77908290173->__invoke($this->valueHolder5527874b08d60328844978, $this, 'findContent', array('query' => $query, 'fieldFilters' => $fieldFilters, 'filterOnUserPermissions' => $filterOnUserPermissions), $this->initializer5527874b08d77908290173);
        return $this->valueHolder5527874b08d60328844978->findContent($query, $fieldFilters, $filterOnUserPermissions);
    }
    public function findSingle(\eZ\Publish\API\Repository\Values\Content\Query\Criterion $filter, array $fieldFilters = array(), $filterOnUserPermissions = true)
    {
        $this->initializer5527874b08d77908290173 && $this->initializer5527874b08d77908290173->__invoke($this->valueHolder5527874b08d60328844978, $this, 'findSingle', array('filter' => $filter, 'fieldFilters' => $fieldFilters, 'filterOnUserPermissions' => $filterOnUserPermissions), $this->initializer5527874b08d77908290173);
        return $this->valueHolder5527874b08d60328844978->findSingle($filter, $fieldFilters, $filterOnUserPermissions);
    }
    public function suggest($prefix, $fieldPaths = array(), $limit = 10, \eZ\Publish\API\Repository\Values\Content\Query\Criterion $filter = null)
    {
        $this->initializer5527874b08d77908290173 && $this->initializer5527874b08d77908290173->__invoke($this->valueHolder5527874b08d60328844978, $this, 'suggest', array('prefix' => $prefix, 'fieldPaths' => $fieldPaths, 'limit' => $limit, 'filter' => $filter), $this->initializer5527874b08d77908290173);
        return $this->valueHolder5527874b08d60328844978->suggest($prefix, $fieldPaths, $limit, $filter);
    }
    public function findLocations(\eZ\Publish\API\Repository\Values\Content\LocationQuery $query, $filterOnUserPermissions = true)
    {
        $this->initializer5527874b08d77908290173 && $this->initializer5527874b08d77908290173->__invoke($this->valueHolder5527874b08d60328844978, $this, 'findLocations', array('query' => $query, 'filterOnUserPermissions' => $filterOnUserPermissions), $this->initializer5527874b08d77908290173);
        return $this->valueHolder5527874b08d60328844978->findLocations($query, $filterOnUserPermissions);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b08d77908290173 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b08d77908290173 && $this->initializer5527874b08d77908290173->__invoke($this->valueHolder5527874b08d60328844978, $this, '__get', array('name' => $name), $this->initializer5527874b08d77908290173);
        if (isset(self::$publicProperties5527874b08d23460936377[$name])) {
            return $this->valueHolder5527874b08d60328844978->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b08d60328844978;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b08d60328844978;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b08d77908290173 && $this->initializer5527874b08d77908290173->__invoke($this->valueHolder5527874b08d60328844978, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b08d77908290173);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b08d60328844978;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b08d60328844978;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b08d77908290173 && $this->initializer5527874b08d77908290173->__invoke($this->valueHolder5527874b08d60328844978, $this, '__isset', array('name' => $name), $this->initializer5527874b08d77908290173);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b08d60328844978;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b08d60328844978;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b08d77908290173 && $this->initializer5527874b08d77908290173->__invoke($this->valueHolder5527874b08d60328844978, $this, '__unset', array('name' => $name), $this->initializer5527874b08d77908290173);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b08d60328844978;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b08d60328844978;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b08d77908290173 && $this->initializer5527874b08d77908290173->__invoke($this->valueHolder5527874b08d60328844978, $this, '__clone', array(), $this->initializer5527874b08d77908290173);
        $this->valueHolder5527874b08d60328844978 = clone $this->valueHolder5527874b08d60328844978;
    }
    public function __sleep()
    {
        $this->initializer5527874b08d77908290173 && $this->initializer5527874b08d77908290173->__invoke($this->valueHolder5527874b08d60328844978, $this, '__sleep', array(), $this->initializer5527874b08d77908290173);
        return array('valueHolder5527874b08d60328844978');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b08d77908290173 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b08d77908290173;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b08d77908290173 && $this->initializer5527874b08d77908290173->__invoke($this->valueHolder5527874b08d60328844978, $this, 'initializeProxy', array(), $this->initializer5527874b08d77908290173);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b08d60328844978;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b08d60328844978;
    }
}
class eZPublishCoreRepositorySectionService_000000002343a99f000000006a1c264a extends \eZ\Publish\Core\Repository\SectionService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b0b511340818552 = null;
    private $initializer5527874b0b53d256884156 = null;
    private static $publicProperties5527874b0b4de897344216 = array();
    public function createSection(\eZ\Publish\API\Repository\Values\Content\SectionCreateStruct $sectionCreateStruct)
    {
        $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, 'createSection', array('sectionCreateStruct' => $sectionCreateStruct), $this->initializer5527874b0b53d256884156);
        return $this->valueHolder5527874b0b511340818552->createSection($sectionCreateStruct);
    }
    public function updateSection(\eZ\Publish\API\Repository\Values\Content\Section $section, \eZ\Publish\API\Repository\Values\Content\SectionUpdateStruct $sectionUpdateStruct)
    {
        $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, 'updateSection', array('section' => $section, 'sectionUpdateStruct' => $sectionUpdateStruct), $this->initializer5527874b0b53d256884156);
        return $this->valueHolder5527874b0b511340818552->updateSection($section, $sectionUpdateStruct);
    }
    public function loadSection($sectionId)
    {
        $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, 'loadSection', array('sectionId' => $sectionId), $this->initializer5527874b0b53d256884156);
        return $this->valueHolder5527874b0b511340818552->loadSection($sectionId);
    }
    public function loadSections()
    {
        $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, 'loadSections', array(), $this->initializer5527874b0b53d256884156);
        return $this->valueHolder5527874b0b511340818552->loadSections();
    }
    public function loadSectionByIdentifier($sectionIdentifier)
    {
        $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, 'loadSectionByIdentifier', array('sectionIdentifier' => $sectionIdentifier), $this->initializer5527874b0b53d256884156);
        return $this->valueHolder5527874b0b511340818552->loadSectionByIdentifier($sectionIdentifier);
    }
    public function countAssignedContents(\eZ\Publish\API\Repository\Values\Content\Section $section)
    {
        $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, 'countAssignedContents', array('section' => $section), $this->initializer5527874b0b53d256884156);
        return $this->valueHolder5527874b0b511340818552->countAssignedContents($section);
    }
    public function assignSection(\eZ\Publish\API\Repository\Values\Content\ContentInfo $contentInfo, \eZ\Publish\API\Repository\Values\Content\Section $section)
    {
        $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, 'assignSection', array('contentInfo' => $contentInfo, 'section' => $section), $this->initializer5527874b0b53d256884156);
        return $this->valueHolder5527874b0b511340818552->assignSection($contentInfo, $section);
    }
    public function deleteSection(\eZ\Publish\API\Repository\Values\Content\Section $section)
    {
        $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, 'deleteSection', array('section' => $section), $this->initializer5527874b0b53d256884156);
        return $this->valueHolder5527874b0b511340818552->deleteSection($section);
    }
    public function newSectionCreateStruct()
    {
        $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, 'newSectionCreateStruct', array(), $this->initializer5527874b0b53d256884156);
        return $this->valueHolder5527874b0b511340818552->newSectionCreateStruct();
    }
    public function newSectionUpdateStruct()
    {
        $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, 'newSectionUpdateStruct', array(), $this->initializer5527874b0b53d256884156);
        return $this->valueHolder5527874b0b511340818552->newSectionUpdateStruct();
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b0b53d256884156 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, '__get', array('name' => $name), $this->initializer5527874b0b53d256884156);
        if (isset(self::$publicProperties5527874b0b4de897344216[$name])) {
            return $this->valueHolder5527874b0b511340818552->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b0b511340818552;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b0b511340818552;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b0b53d256884156);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b0b511340818552;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b0b511340818552;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, '__isset', array('name' => $name), $this->initializer5527874b0b53d256884156);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b0b511340818552;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b0b511340818552;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, '__unset', array('name' => $name), $this->initializer5527874b0b53d256884156);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b0b511340818552;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b0b511340818552;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, '__clone', array(), $this->initializer5527874b0b53d256884156);
        $this->valueHolder5527874b0b511340818552 = clone $this->valueHolder5527874b0b511340818552;
    }
    public function __sleep()
    {
        $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, '__sleep', array(), $this->initializer5527874b0b53d256884156);
        return array('valueHolder5527874b0b511340818552');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b0b53d256884156 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b0b53d256884156;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b0b53d256884156 && $this->initializer5527874b0b53d256884156->__invoke($this->valueHolder5527874b0b511340818552, $this, 'initializeProxy', array(), $this->initializer5527874b0b53d256884156);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b0b511340818552;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b0b511340818552;
    }
}
class eZPublishCoreRepositoryTrashService_000000002343a990000000006a1c264a extends \eZ\Publish\Core\Repository\TrashService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b0eedf929139435 = null;
    private $initializer5527874b0eef4887567059 = null;
    private static $publicProperties5527874b0eeae955376627 = array();
    public function loadTrashItem($trashItemId)
    {
        $this->initializer5527874b0eef4887567059 && $this->initializer5527874b0eef4887567059->__invoke($this->valueHolder5527874b0eedf929139435, $this, 'loadTrashItem', array('trashItemId' => $trashItemId), $this->initializer5527874b0eef4887567059);
        return $this->valueHolder5527874b0eedf929139435->loadTrashItem($trashItemId);
    }
    public function trash(\eZ\Publish\API\Repository\Values\Content\Location $location)
    {
        $this->initializer5527874b0eef4887567059 && $this->initializer5527874b0eef4887567059->__invoke($this->valueHolder5527874b0eedf929139435, $this, 'trash', array('location' => $location), $this->initializer5527874b0eef4887567059);
        return $this->valueHolder5527874b0eedf929139435->trash($location);
    }
    public function recover(\eZ\Publish\API\Repository\Values\Content\TrashItem $trashItem, \eZ\Publish\API\Repository\Values\Content\Location $newParentLocation = null)
    {
        $this->initializer5527874b0eef4887567059 && $this->initializer5527874b0eef4887567059->__invoke($this->valueHolder5527874b0eedf929139435, $this, 'recover', array('trashItem' => $trashItem, 'newParentLocation' => $newParentLocation), $this->initializer5527874b0eef4887567059);
        return $this->valueHolder5527874b0eedf929139435->recover($trashItem, $newParentLocation);
    }
    public function emptyTrash()
    {
        $this->initializer5527874b0eef4887567059 && $this->initializer5527874b0eef4887567059->__invoke($this->valueHolder5527874b0eedf929139435, $this, 'emptyTrash', array(), $this->initializer5527874b0eef4887567059);
        return $this->valueHolder5527874b0eedf929139435->emptyTrash();
    }
    public function deleteTrashItem(\eZ\Publish\API\Repository\Values\Content\TrashItem $trashItem)
    {
        $this->initializer5527874b0eef4887567059 && $this->initializer5527874b0eef4887567059->__invoke($this->valueHolder5527874b0eedf929139435, $this, 'deleteTrashItem', array('trashItem' => $trashItem), $this->initializer5527874b0eef4887567059);
        return $this->valueHolder5527874b0eedf929139435->deleteTrashItem($trashItem);
    }
    public function findTrashItems(\eZ\Publish\API\Repository\Values\Content\Query $query)
    {
        $this->initializer5527874b0eef4887567059 && $this->initializer5527874b0eef4887567059->__invoke($this->valueHolder5527874b0eedf929139435, $this, 'findTrashItems', array('query' => $query), $this->initializer5527874b0eef4887567059);
        return $this->valueHolder5527874b0eedf929139435->findTrashItems($query);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b0eef4887567059 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b0eef4887567059 && $this->initializer5527874b0eef4887567059->__invoke($this->valueHolder5527874b0eedf929139435, $this, '__get', array('name' => $name), $this->initializer5527874b0eef4887567059);
        if (isset(self::$publicProperties5527874b0eeae955376627[$name])) {
            return $this->valueHolder5527874b0eedf929139435->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b0eedf929139435;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b0eedf929139435;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b0eef4887567059 && $this->initializer5527874b0eef4887567059->__invoke($this->valueHolder5527874b0eedf929139435, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b0eef4887567059);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b0eedf929139435;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b0eedf929139435;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b0eef4887567059 && $this->initializer5527874b0eef4887567059->__invoke($this->valueHolder5527874b0eedf929139435, $this, '__isset', array('name' => $name), $this->initializer5527874b0eef4887567059);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b0eedf929139435;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b0eedf929139435;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b0eef4887567059 && $this->initializer5527874b0eef4887567059->__invoke($this->valueHolder5527874b0eedf929139435, $this, '__unset', array('name' => $name), $this->initializer5527874b0eef4887567059);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b0eedf929139435;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b0eedf929139435;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b0eef4887567059 && $this->initializer5527874b0eef4887567059->__invoke($this->valueHolder5527874b0eedf929139435, $this, '__clone', array(), $this->initializer5527874b0eef4887567059);
        $this->valueHolder5527874b0eedf929139435 = clone $this->valueHolder5527874b0eedf929139435;
    }
    public function __sleep()
    {
        $this->initializer5527874b0eef4887567059 && $this->initializer5527874b0eef4887567059->__invoke($this->valueHolder5527874b0eedf929139435, $this, '__sleep', array(), $this->initializer5527874b0eef4887567059);
        return array('valueHolder5527874b0eedf929139435');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b0eef4887567059 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b0eef4887567059;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b0eef4887567059 && $this->initializer5527874b0eef4887567059->__invoke($this->valueHolder5527874b0eedf929139435, $this, 'initializeProxy', array(), $this->initializer5527874b0eef4887567059);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b0eedf929139435;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b0eedf929139435;
    }
}
class eZPublishCoreRepositoryLocationService_000000002343a992000000006a1c264a extends \eZ\Publish\Core\Repository\LocationService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b11588221211125 = null;
    private $initializer5527874b115a8865383425 = null;
    private static $publicProperties5527874b1154c049208499 = array();
    public function copySubtree(\eZ\Publish\API\Repository\Values\Content\Location $subtree, \eZ\Publish\API\Repository\Values\Content\Location $targetParentLocation)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, 'copySubtree', array('subtree' => $subtree, 'targetParentLocation' => $targetParentLocation), $this->initializer5527874b115a8865383425);
        return $this->valueHolder5527874b11588221211125->copySubtree($subtree, $targetParentLocation);
    }
    public function loadLocation($locationId)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, 'loadLocation', array('locationId' => $locationId), $this->initializer5527874b115a8865383425);
        return $this->valueHolder5527874b11588221211125->loadLocation($locationId);
    }
    public function loadLocationByRemoteId($remoteId)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, 'loadLocationByRemoteId', array('remoteId' => $remoteId), $this->initializer5527874b115a8865383425);
        return $this->valueHolder5527874b11588221211125->loadLocationByRemoteId($remoteId);
    }
    public function loadLocations(\eZ\Publish\API\Repository\Values\Content\ContentInfo $contentInfo, \eZ\Publish\API\Repository\Values\Content\Location $rootLocation = null)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, 'loadLocations', array('contentInfo' => $contentInfo, 'rootLocation' => $rootLocation), $this->initializer5527874b115a8865383425);
        return $this->valueHolder5527874b11588221211125->loadLocations($contentInfo, $rootLocation);
    }
    public function loadLocationChildren(\eZ\Publish\API\Repository\Values\Content\Location $location, $offset = 0, $limit = -1)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, 'loadLocationChildren', array('location' => $location, 'offset' => $offset, 'limit' => $limit), $this->initializer5527874b115a8865383425);
        return $this->valueHolder5527874b11588221211125->loadLocationChildren($location, $offset, $limit);
    }
    public function getLocationChildCount(\eZ\Publish\API\Repository\Values\Content\Location $location)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, 'getLocationChildCount', array('location' => $location), $this->initializer5527874b115a8865383425);
        return $this->valueHolder5527874b11588221211125->getLocationChildCount($location);
    }
    public function createLocation(\eZ\Publish\API\Repository\Values\Content\ContentInfo $contentInfo, \eZ\Publish\API\Repository\Values\Content\LocationCreateStruct $locationCreateStruct)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, 'createLocation', array('contentInfo' => $contentInfo, 'locationCreateStruct' => $locationCreateStruct), $this->initializer5527874b115a8865383425);
        return $this->valueHolder5527874b11588221211125->createLocation($contentInfo, $locationCreateStruct);
    }
    public function updateLocation(\eZ\Publish\API\Repository\Values\Content\Location $location, \eZ\Publish\API\Repository\Values\Content\LocationUpdateStruct $locationUpdateStruct)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, 'updateLocation', array('location' => $location, 'locationUpdateStruct' => $locationUpdateStruct), $this->initializer5527874b115a8865383425);
        return $this->valueHolder5527874b11588221211125->updateLocation($location, $locationUpdateStruct);
    }
    public function swapLocation(\eZ\Publish\API\Repository\Values\Content\Location $location1, \eZ\Publish\API\Repository\Values\Content\Location $location2)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, 'swapLocation', array('location1' => $location1, 'location2' => $location2), $this->initializer5527874b115a8865383425);
        return $this->valueHolder5527874b11588221211125->swapLocation($location1, $location2);
    }
    public function hideLocation(\eZ\Publish\API\Repository\Values\Content\Location $location)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, 'hideLocation', array('location' => $location), $this->initializer5527874b115a8865383425);
        return $this->valueHolder5527874b11588221211125->hideLocation($location);
    }
    public function unhideLocation(\eZ\Publish\API\Repository\Values\Content\Location $location)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, 'unhideLocation', array('location' => $location), $this->initializer5527874b115a8865383425);
        return $this->valueHolder5527874b11588221211125->unhideLocation($location);
    }
    public function moveSubtree(\eZ\Publish\API\Repository\Values\Content\Location $location, \eZ\Publish\API\Repository\Values\Content\Location $newParentLocation)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, 'moveSubtree', array('location' => $location, 'newParentLocation' => $newParentLocation), $this->initializer5527874b115a8865383425);
        return $this->valueHolder5527874b11588221211125->moveSubtree($location, $newParentLocation);
    }
    public function deleteLocation(\eZ\Publish\API\Repository\Values\Content\Location $location)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, 'deleteLocation', array('location' => $location), $this->initializer5527874b115a8865383425);
        return $this->valueHolder5527874b11588221211125->deleteLocation($location);
    }
    public function newLocationCreateStruct($parentLocationId)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, 'newLocationCreateStruct', array('parentLocationId' => $parentLocationId), $this->initializer5527874b115a8865383425);
        return $this->valueHolder5527874b11588221211125->newLocationCreateStruct($parentLocationId);
    }
    public function newLocationUpdateStruct()
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, 'newLocationUpdateStruct', array(), $this->initializer5527874b115a8865383425);
        return $this->valueHolder5527874b11588221211125->newLocationUpdateStruct();
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b115a8865383425 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, '__get', array('name' => $name), $this->initializer5527874b115a8865383425);
        if (isset(self::$publicProperties5527874b1154c049208499[$name])) {
            return $this->valueHolder5527874b11588221211125->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b11588221211125;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b11588221211125;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b115a8865383425);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b11588221211125;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b11588221211125;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, '__isset', array('name' => $name), $this->initializer5527874b115a8865383425);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b11588221211125;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b11588221211125;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, '__unset', array('name' => $name), $this->initializer5527874b115a8865383425);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b11588221211125;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b11588221211125;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, '__clone', array(), $this->initializer5527874b115a8865383425);
        $this->valueHolder5527874b11588221211125 = clone $this->valueHolder5527874b11588221211125;
    }
    public function __sleep()
    {
        $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, '__sleep', array(), $this->initializer5527874b115a8865383425);
        return array('valueHolder5527874b11588221211125');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b115a8865383425 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b115a8865383425;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b115a8865383425 && $this->initializer5527874b115a8865383425->__invoke($this->valueHolder5527874b11588221211125, $this, 'initializeProxy', array(), $this->initializer5527874b115a8865383425);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b11588221211125;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b11588221211125;
    }
}
class eZPublishCoreSignalSlotRepository_000000002343a994000000006a1c264a extends \eZ\Publish\Core\SignalSlot\Repository implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b18dd1436948968 = null;
    private $initializer5527874b18de7161770958 = null;
    private static $publicProperties5527874b18d9a979086979 = array();
    public function getCurrentUser()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'getCurrentUser', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->getCurrentUser();
    }
    public function setCurrentUser(\eZ\Publish\API\Repository\Values\User\User $user)
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'setCurrentUser', array('user' => $user), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->setCurrentUser($user);
    }
    public function sudo(\Closure $callback)
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'sudo', array('callback' => $callback), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->sudo($callback);
    }
    public function hasAccess($module, $function, \eZ\Publish\API\Repository\Values\User\User $user = null)
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'hasAccess', array('module' => $module, 'function' => $function, 'user' => $user), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->hasAccess($module, $function, $user);
    }
    public function canUser($module, $function, \eZ\Publish\API\Repository\Values\ValueObject $object, $targets = null)
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'canUser', array('module' => $module, 'function' => $function, 'object' => $object, 'targets' => $targets), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->canUser($module, $function, $object, $targets);
    }
    public function getContentService()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'getContentService', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->getContentService();
    }
    public function getContentLanguageService()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'getContentLanguageService', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->getContentLanguageService();
    }
    public function getContentTypeService()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'getContentTypeService', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->getContentTypeService();
    }
    public function getLocationService()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'getLocationService', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->getLocationService();
    }
    public function getTrashService()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'getTrashService', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->getTrashService();
    }
    public function getSectionService()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'getSectionService', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->getSectionService();
    }
    public function getUserService()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'getUserService', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->getUserService();
    }
    public function getURLAliasService()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'getURLAliasService', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->getURLAliasService();
    }
    public function getURLWildcardService()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'getURLWildcardService', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->getURLWildcardService();
    }
    public function getObjectStateService()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'getObjectStateService', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->getObjectStateService();
    }
    public function getRoleService()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'getRoleService', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->getRoleService();
    }
    public function getSearchService()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'getSearchService', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->getSearchService();
    }
    public function getFieldTypeService()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'getFieldTypeService', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->getFieldTypeService();
    }
    public function beginTransaction()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'beginTransaction', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->beginTransaction();
    }
    public function commit()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'commit', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->commit();
    }
    public function rollback()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'rollback', array(), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->rollback();
    }
    public function commitEvent($event)
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'commitEvent', array('event' => $event), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->commitEvent($event);
    }
    public function createDateTime($timestamp = null)
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'createDateTime', array('timestamp' => $timestamp), $this->initializer5527874b18de7161770958);
        return $this->valueHolder5527874b18dd1436948968->createDateTime($timestamp);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b18de7161770958 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, '__get', array('name' => $name), $this->initializer5527874b18de7161770958);
        if (isset(self::$publicProperties5527874b18d9a979086979[$name])) {
            return $this->valueHolder5527874b18dd1436948968->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b18dd1436948968;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b18dd1436948968;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b18de7161770958);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b18dd1436948968;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b18dd1436948968;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, '__isset', array('name' => $name), $this->initializer5527874b18de7161770958);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b18dd1436948968;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b18dd1436948968;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, '__unset', array('name' => $name), $this->initializer5527874b18de7161770958);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b18dd1436948968;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b18dd1436948968;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, '__clone', array(), $this->initializer5527874b18de7161770958);
        $this->valueHolder5527874b18dd1436948968 = clone $this->valueHolder5527874b18dd1436948968;
    }
    public function __sleep()
    {
        $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, '__sleep', array(), $this->initializer5527874b18de7161770958);
        return array('valueHolder5527874b18dd1436948968');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b18de7161770958 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b18de7161770958;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b18de7161770958 && $this->initializer5527874b18de7161770958->__invoke($this->valueHolder5527874b18dd1436948968, $this, 'initializeProxy', array(), $this->initializer5527874b18de7161770958);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b18dd1436948968;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b18dd1436948968;
    }
}
class eZPublishCorePersistenceLegacyContentFieldHandler_000000002343b774000000006a1c264a extends \eZ\Publish\Core\Persistence\Legacy\Content\FieldHandler implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b1ffdd498691337 = null;
    private $initializer5527874b1fff3284869963 = null;
    private static $publicProperties5527874b1ffa8370429057 = array();
    public function createNewFields(\eZ\Publish\SPI\Persistence\Content $content, \eZ\Publish\SPI\Persistence\Content\Type $contentType)
    {
        $this->initializer5527874b1fff3284869963 && $this->initializer5527874b1fff3284869963->__invoke($this->valueHolder5527874b1ffdd498691337, $this, 'createNewFields', array('content' => $content, 'contentType' => $contentType), $this->initializer5527874b1fff3284869963);
        return $this->valueHolder5527874b1ffdd498691337->createNewFields($content, $contentType);
    }
    public function createExistingFieldsInNewVersion(\eZ\Publish\SPI\Persistence\Content $content)
    {
        $this->initializer5527874b1fff3284869963 && $this->initializer5527874b1fff3284869963->__invoke($this->valueHolder5527874b1ffdd498691337, $this, 'createExistingFieldsInNewVersion', array('content' => $content), $this->initializer5527874b1fff3284869963);
        return $this->valueHolder5527874b1ffdd498691337->createExistingFieldsInNewVersion($content);
    }
    public function loadExternalFieldData(\eZ\Publish\SPI\Persistence\Content $content)
    {
        $this->initializer5527874b1fff3284869963 && $this->initializer5527874b1fff3284869963->__invoke($this->valueHolder5527874b1ffdd498691337, $this, 'loadExternalFieldData', array('content' => $content), $this->initializer5527874b1fff3284869963);
        return $this->valueHolder5527874b1ffdd498691337->loadExternalFieldData($content);
    }
    public function updateFields(\eZ\Publish\SPI\Persistence\Content $content, \eZ\Publish\SPI\Persistence\Content\UpdateStruct $updateStruct, \eZ\Publish\SPI\Persistence\Content\Type $contentType)
    {
        $this->initializer5527874b1fff3284869963 && $this->initializer5527874b1fff3284869963->__invoke($this->valueHolder5527874b1ffdd498691337, $this, 'updateFields', array('content' => $content, 'updateStruct' => $updateStruct, 'contentType' => $contentType), $this->initializer5527874b1fff3284869963);
        return $this->valueHolder5527874b1ffdd498691337->updateFields($content, $updateStruct, $contentType);
    }
    public function deleteFields($contentId, \eZ\Publish\SPI\Persistence\Content\VersionInfo $versionInfo)
    {
        $this->initializer5527874b1fff3284869963 && $this->initializer5527874b1fff3284869963->__invoke($this->valueHolder5527874b1ffdd498691337, $this, 'deleteFields', array('contentId' => $contentId, 'versionInfo' => $versionInfo), $this->initializer5527874b1fff3284869963);
        return $this->valueHolder5527874b1ffdd498691337->deleteFields($contentId, $versionInfo);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b1fff3284869963 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b1fff3284869963 && $this->initializer5527874b1fff3284869963->__invoke($this->valueHolder5527874b1ffdd498691337, $this, '__get', array('name' => $name), $this->initializer5527874b1fff3284869963);
        if (isset(self::$publicProperties5527874b1ffa8370429057[$name])) {
            return $this->valueHolder5527874b1ffdd498691337->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b1ffdd498691337;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b1ffdd498691337;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b1fff3284869963 && $this->initializer5527874b1fff3284869963->__invoke($this->valueHolder5527874b1ffdd498691337, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b1fff3284869963);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b1ffdd498691337;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b1ffdd498691337;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b1fff3284869963 && $this->initializer5527874b1fff3284869963->__invoke($this->valueHolder5527874b1ffdd498691337, $this, '__isset', array('name' => $name), $this->initializer5527874b1fff3284869963);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b1ffdd498691337;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b1ffdd498691337;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b1fff3284869963 && $this->initializer5527874b1fff3284869963->__invoke($this->valueHolder5527874b1ffdd498691337, $this, '__unset', array('name' => $name), $this->initializer5527874b1fff3284869963);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b1ffdd498691337;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b1ffdd498691337;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b1fff3284869963 && $this->initializer5527874b1fff3284869963->__invoke($this->valueHolder5527874b1ffdd498691337, $this, '__clone', array(), $this->initializer5527874b1fff3284869963);
        $this->valueHolder5527874b1ffdd498691337 = clone $this->valueHolder5527874b1ffdd498691337;
    }
    public function __sleep()
    {
        $this->initializer5527874b1fff3284869963 && $this->initializer5527874b1fff3284869963->__invoke($this->valueHolder5527874b1ffdd498691337, $this, '__sleep', array(), $this->initializer5527874b1fff3284869963);
        return array('valueHolder5527874b1ffdd498691337');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b1fff3284869963 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b1fff3284869963;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b1fff3284869963 && $this->initializer5527874b1fff3284869963->__invoke($this->valueHolder5527874b1ffdd498691337, $this, 'initializeProxy', array(), $this->initializer5527874b1fff3284869963);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b1ffdd498691337;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b1ffdd498691337;
    }
}
class eZPublishCorePersistenceLegacyContentHandler_000000002343b60a000000006a1c264a extends \eZ\Publish\Core\Persistence\Legacy\Content\Handler implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b2245d068576692 = null;
    private $initializer5527874b2245d501668795 = null;
    private static $publicProperties5527874b2242e027956841 = array();
    public function create(\eZ\Publish\SPI\Persistence\Content\CreateStruct $struct)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'create', array('struct' => $struct), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->create($struct);
    }
    public function publish($contentId, $versionNo, \eZ\Publish\SPI\Persistence\Content\MetadataUpdateStruct $metaDataUpdateStruct)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'publish', array('contentId' => $contentId, 'versionNo' => $versionNo, 'metaDataUpdateStruct' => $metaDataUpdateStruct), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->publish($contentId, $versionNo, $metaDataUpdateStruct);
    }
    public function createDraftFromVersion($contentId, $srcVersion, $userId)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'createDraftFromVersion', array('contentId' => $contentId, 'srcVersion' => $srcVersion, 'userId' => $userId), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->createDraftFromVersion($contentId, $srcVersion, $userId);
    }
    public function load($id, $version, array $translations = null)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'load', array('id' => $id, 'version' => $version, 'translations' => $translations), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->load($id, $version, $translations);
    }
    public function loadContentInfo($contentId)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'loadContentInfo', array('contentId' => $contentId), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->loadContentInfo($contentId);
    }
    public function loadContentInfoByRemoteId($remoteId)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'loadContentInfoByRemoteId', array('remoteId' => $remoteId), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->loadContentInfoByRemoteId($remoteId);
    }
    public function loadVersionInfo($contentId, $versionNo)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'loadVersionInfo', array('contentId' => $contentId, 'versionNo' => $versionNo), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->loadVersionInfo($contentId, $versionNo);
    }
    public function loadDraftsForUser($userId)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'loadDraftsForUser', array('userId' => $userId), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->loadDraftsForUser($userId);
    }
    public function setStatus($contentId, $status, $version)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'setStatus', array('contentId' => $contentId, 'status' => $status, 'version' => $version), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->setStatus($contentId, $status, $version);
    }
    public function updateMetadata($contentId, \eZ\Publish\SPI\Persistence\Content\MetadataUpdateStruct $content)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'updateMetadata', array('contentId' => $contentId, 'content' => $content), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->updateMetadata($contentId, $content);
    }
    public function updateContent($contentId, $versionNo, \eZ\Publish\SPI\Persistence\Content\UpdateStruct $updateStruct)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'updateContent', array('contentId' => $contentId, 'versionNo' => $versionNo, 'updateStruct' => $updateStruct), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->updateContent($contentId, $versionNo, $updateStruct);
    }
    public function deleteContent($contentId)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'deleteContent', array('contentId' => $contentId), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->deleteContent($contentId);
    }
    public function removeRawContent($contentId)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'removeRawContent', array('contentId' => $contentId), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->removeRawContent($contentId);
    }
    public function deleteVersion($contentId, $versionNo)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'deleteVersion', array('contentId' => $contentId, 'versionNo' => $versionNo), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->deleteVersion($contentId, $versionNo);
    }
    public function listVersions($contentId)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'listVersions', array('contentId' => $contentId), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->listVersions($contentId);
    }
    public function copy($contentId, $versionNo = null)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'copy', array('contentId' => $contentId, 'versionNo' => $versionNo), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->copy($contentId, $versionNo);
    }
    public function addRelation(\eZ\Publish\SPI\Persistence\Content\Relation\CreateStruct $createStruct)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'addRelation', array('createStruct' => $createStruct), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->addRelation($createStruct);
    }
    public function removeRelation($relationId, $type)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'removeRelation', array('relationId' => $relationId, 'type' => $type), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->removeRelation($relationId, $type);
    }
    public function loadRelations($sourceContentId, $sourceContentVersionNo = null, $type = null)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'loadRelations', array('sourceContentId' => $sourceContentId, 'sourceContentVersionNo' => $sourceContentVersionNo, 'type' => $type), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->loadRelations($sourceContentId, $sourceContentVersionNo, $type);
    }
    public function loadReverseRelations($destinationContentId, $type = null)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'loadReverseRelations', array('destinationContentId' => $destinationContentId, 'type' => $type), $this->initializer5527874b2245d501668795);
        return $this->valueHolder5527874b2245d068576692->loadReverseRelations($destinationContentId, $type);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b2245d501668795 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, '__get', array('name' => $name), $this->initializer5527874b2245d501668795);
        if (isset(self::$publicProperties5527874b2242e027956841[$name])) {
            return $this->valueHolder5527874b2245d068576692->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b2245d068576692;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b2245d068576692;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b2245d501668795);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b2245d068576692;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b2245d068576692;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, '__isset', array('name' => $name), $this->initializer5527874b2245d501668795);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b2245d068576692;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b2245d068576692;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, '__unset', array('name' => $name), $this->initializer5527874b2245d501668795);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b2245d068576692;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b2245d068576692;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, '__clone', array(), $this->initializer5527874b2245d501668795);
        $this->valueHolder5527874b2245d068576692 = clone $this->valueHolder5527874b2245d068576692;
    }
    public function __sleep()
    {
        $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, '__sleep', array(), $this->initializer5527874b2245d501668795);
        return array('valueHolder5527874b2245d068576692');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b2245d501668795 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b2245d501668795;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b2245d501668795 && $this->initializer5527874b2245d501668795->__invoke($this->valueHolder5527874b2245d068576692, $this, 'initializeProxy', array(), $this->initializer5527874b2245d501668795);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b2245d068576692;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b2245d068576692;
    }
}
class eZPublishCorePersistenceLegacyContentLocationHandler_000000002343b748000000006a1c264a extends \eZ\Publish\Core\Persistence\Legacy\Content\Location\Handler implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b2b9ef632164166 = null;
    private $initializer5527874b2ba05181777939 = null;
    private static $publicProperties5527874b2b9ba714016430 = array();
    public function load($locationId)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'load', array('locationId' => $locationId), $this->initializer5527874b2ba05181777939);
        return $this->valueHolder5527874b2b9ef632164166->load($locationId);
    }
    public function loadSubtreeIds($locationId)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'loadSubtreeIds', array('locationId' => $locationId), $this->initializer5527874b2ba05181777939);
        return $this->valueHolder5527874b2b9ef632164166->loadSubtreeIds($locationId);
    }
    public function loadByRemoteId($remoteId)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'loadByRemoteId', array('remoteId' => $remoteId), $this->initializer5527874b2ba05181777939);
        return $this->valueHolder5527874b2b9ef632164166->loadByRemoteId($remoteId);
    }
    public function loadLocationsByContent($contentId, $rootLocationId = null)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'loadLocationsByContent', array('contentId' => $contentId, 'rootLocationId' => $rootLocationId), $this->initializer5527874b2ba05181777939);
        return $this->valueHolder5527874b2b9ef632164166->loadLocationsByContent($contentId, $rootLocationId);
    }
    public function loadParentLocationsForDraftContent($contentId)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'loadParentLocationsForDraftContent', array('contentId' => $contentId), $this->initializer5527874b2ba05181777939);
        return $this->valueHolder5527874b2b9ef632164166->loadParentLocationsForDraftContent($contentId);
    }
    public function copySubtree($sourceId, $destinationParentId)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'copySubtree', array('sourceId' => $sourceId, 'destinationParentId' => $destinationParentId), $this->initializer5527874b2ba05181777939);
        return $this->valueHolder5527874b2b9ef632164166->copySubtree($sourceId, $destinationParentId);
    }
    public function move($sourceId, $destinationParentId)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'move', array('sourceId' => $sourceId, 'destinationParentId' => $destinationParentId), $this->initializer5527874b2ba05181777939);
        return $this->valueHolder5527874b2b9ef632164166->move($sourceId, $destinationParentId);
    }
    public function markSubtreeModified($locationId, $timestamp = null)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'markSubtreeModified', array('locationId' => $locationId, 'timestamp' => $timestamp), $this->initializer5527874b2ba05181777939);
        return $this->valueHolder5527874b2b9ef632164166->markSubtreeModified($locationId, $timestamp);
    }
    public function hide($id)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'hide', array('id' => $id), $this->initializer5527874b2ba05181777939);
        return $this->valueHolder5527874b2b9ef632164166->hide($id);
    }
    public function unHide($id)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'unHide', array('id' => $id), $this->initializer5527874b2ba05181777939);
        return $this->valueHolder5527874b2b9ef632164166->unHide($id);
    }
    public function swap($locationId1, $locationId2)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'swap', array('locationId1' => $locationId1, 'locationId2' => $locationId2), $this->initializer5527874b2ba05181777939);
        return $this->valueHolder5527874b2b9ef632164166->swap($locationId1, $locationId2);
    }
    public function update(\eZ\Publish\SPI\Persistence\Content\Location\UpdateStruct $location, $locationId)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'update', array('location' => $location, 'locationId' => $locationId), $this->initializer5527874b2ba05181777939);
        return $this->valueHolder5527874b2b9ef632164166->update($location, $locationId);
    }
    public function create(\eZ\Publish\SPI\Persistence\Content\Location\CreateStruct $createStruct)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'create', array('createStruct' => $createStruct), $this->initializer5527874b2ba05181777939);
        return $this->valueHolder5527874b2b9ef632164166->create($createStruct);
    }
    public function removeSubtree($locationId)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'removeSubtree', array('locationId' => $locationId), $this->initializer5527874b2ba05181777939);
        return $this->valueHolder5527874b2b9ef632164166->removeSubtree($locationId);
    }
    public function setSectionForSubtree($locationId, $sectionId)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'setSectionForSubtree', array('locationId' => $locationId, 'sectionId' => $sectionId), $this->initializer5527874b2ba05181777939);
        return $this->valueHolder5527874b2b9ef632164166->setSectionForSubtree($locationId, $sectionId);
    }
    public function changeMainLocation($contentId, $locationId)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'changeMainLocation', array('contentId' => $contentId, 'locationId' => $locationId), $this->initializer5527874b2ba05181777939);
        return $this->valueHolder5527874b2b9ef632164166->changeMainLocation($contentId, $locationId);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b2ba05181777939 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, '__get', array('name' => $name), $this->initializer5527874b2ba05181777939);
        if (isset(self::$publicProperties5527874b2b9ba714016430[$name])) {
            return $this->valueHolder5527874b2b9ef632164166->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b2b9ef632164166;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b2b9ef632164166;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b2ba05181777939);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b2b9ef632164166;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b2b9ef632164166;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, '__isset', array('name' => $name), $this->initializer5527874b2ba05181777939);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b2b9ef632164166;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b2b9ef632164166;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, '__unset', array('name' => $name), $this->initializer5527874b2ba05181777939);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b2b9ef632164166;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b2b9ef632164166;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, '__clone', array(), $this->initializer5527874b2ba05181777939);
        $this->valueHolder5527874b2b9ef632164166 = clone $this->valueHolder5527874b2b9ef632164166;
    }
    public function __sleep()
    {
        $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, '__sleep', array(), $this->initializer5527874b2ba05181777939);
        return array('valueHolder5527874b2b9ef632164166');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b2ba05181777939 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b2ba05181777939;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b2ba05181777939 && $this->initializer5527874b2ba05181777939->__invoke($this->valueHolder5527874b2b9ef632164166, $this, 'initializeProxy', array(), $this->initializer5527874b2ba05181777939);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b2b9ef632164166;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b2b9ef632164166;
    }
}
class eZPublishCorePersistenceLegacyContentObjectStateHandler_000000002343b798000000006a1c264a extends \eZ\Publish\Core\Persistence\Legacy\Content\ObjectState\Handler implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b31b60603206486 = null;
    private $initializer5527874b31b84717835378 = null;
    private static $publicProperties5527874b31b1b298275459 = array();
    public function createGroup(\eZ\Publish\SPI\Persistence\Content\ObjectState\InputStruct $input)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'createGroup', array('input' => $input), $this->initializer5527874b31b84717835378);
        return $this->valueHolder5527874b31b60603206486->createGroup($input);
    }
    public function loadGroup($groupId)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'loadGroup', array('groupId' => $groupId), $this->initializer5527874b31b84717835378);
        return $this->valueHolder5527874b31b60603206486->loadGroup($groupId);
    }
    public function loadGroupByIdentifier($identifier)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'loadGroupByIdentifier', array('identifier' => $identifier), $this->initializer5527874b31b84717835378);
        return $this->valueHolder5527874b31b60603206486->loadGroupByIdentifier($identifier);
    }
    public function loadAllGroups($offset = 0, $limit = -1)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'loadAllGroups', array('offset' => $offset, 'limit' => $limit), $this->initializer5527874b31b84717835378);
        return $this->valueHolder5527874b31b60603206486->loadAllGroups($offset, $limit);
    }
    public function loadObjectStates($groupId)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'loadObjectStates', array('groupId' => $groupId), $this->initializer5527874b31b84717835378);
        return $this->valueHolder5527874b31b60603206486->loadObjectStates($groupId);
    }
    public function updateGroup($groupId, \eZ\Publish\SPI\Persistence\Content\ObjectState\InputStruct $input)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'updateGroup', array('groupId' => $groupId, 'input' => $input), $this->initializer5527874b31b84717835378);
        return $this->valueHolder5527874b31b60603206486->updateGroup($groupId, $input);
    }
    public function deleteGroup($groupId)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'deleteGroup', array('groupId' => $groupId), $this->initializer5527874b31b84717835378);
        return $this->valueHolder5527874b31b60603206486->deleteGroup($groupId);
    }
    public function create($groupId, \eZ\Publish\SPI\Persistence\Content\ObjectState\InputStruct $input)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'create', array('groupId' => $groupId, 'input' => $input), $this->initializer5527874b31b84717835378);
        return $this->valueHolder5527874b31b60603206486->create($groupId, $input);
    }
    public function load($stateId)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'load', array('stateId' => $stateId), $this->initializer5527874b31b84717835378);
        return $this->valueHolder5527874b31b60603206486->load($stateId);
    }
    public function loadByIdentifier($identifier, $groupId)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'loadByIdentifier', array('identifier' => $identifier, 'groupId' => $groupId), $this->initializer5527874b31b84717835378);
        return $this->valueHolder5527874b31b60603206486->loadByIdentifier($identifier, $groupId);
    }
    public function update($stateId, \eZ\Publish\SPI\Persistence\Content\ObjectState\InputStruct $input)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'update', array('stateId' => $stateId, 'input' => $input), $this->initializer5527874b31b84717835378);
        return $this->valueHolder5527874b31b60603206486->update($stateId, $input);
    }
    public function setPriority($stateId, $priority)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'setPriority', array('stateId' => $stateId, 'priority' => $priority), $this->initializer5527874b31b84717835378);
        return $this->valueHolder5527874b31b60603206486->setPriority($stateId, $priority);
    }
    public function delete($stateId)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'delete', array('stateId' => $stateId), $this->initializer5527874b31b84717835378);
        return $this->valueHolder5527874b31b60603206486->delete($stateId);
    }
    public function setContentState($contentId, $groupId, $stateId)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'setContentState', array('contentId' => $contentId, 'groupId' => $groupId, 'stateId' => $stateId), $this->initializer5527874b31b84717835378);
        return $this->valueHolder5527874b31b60603206486->setContentState($contentId, $groupId, $stateId);
    }
    public function getContentState($contentId, $stateGroupId)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'getContentState', array('contentId' => $contentId, 'stateGroupId' => $stateGroupId), $this->initializer5527874b31b84717835378);
        return $this->valueHolder5527874b31b60603206486->getContentState($contentId, $stateGroupId);
    }
    public function getContentCount($stateId)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'getContentCount', array('stateId' => $stateId), $this->initializer5527874b31b84717835378);
        return $this->valueHolder5527874b31b60603206486->getContentCount($stateId);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b31b84717835378 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, '__get', array('name' => $name), $this->initializer5527874b31b84717835378);
        if (isset(self::$publicProperties5527874b31b1b298275459[$name])) {
            return $this->valueHolder5527874b31b60603206486->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b31b60603206486;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b31b60603206486;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b31b84717835378);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b31b60603206486;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b31b60603206486;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, '__isset', array('name' => $name), $this->initializer5527874b31b84717835378);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b31b60603206486;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b31b60603206486;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, '__unset', array('name' => $name), $this->initializer5527874b31b84717835378);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b31b60603206486;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b31b60603206486;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, '__clone', array(), $this->initializer5527874b31b84717835378);
        $this->valueHolder5527874b31b60603206486 = clone $this->valueHolder5527874b31b60603206486;
    }
    public function __sleep()
    {
        $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, '__sleep', array(), $this->initializer5527874b31b84717835378);
        return array('valueHolder5527874b31b60603206486');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b31b84717835378 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b31b84717835378;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b31b84717835378 && $this->initializer5527874b31b84717835378->__invoke($this->valueHolder5527874b31b60603206486, $this, 'initializeProxy', array(), $this->initializer5527874b31b84717835378);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b31b60603206486;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b31b60603206486;
    }
}
class eZPublishCorePersistenceLegacyContentSearchHandler_000000002343b789000000006a1c264a extends \eZ\Publish\Core\Persistence\Legacy\Content\Search\Handler implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b37110211463298 = null;
    private $initializer5527874b37139027284409 = null;
    private static $publicProperties5527874b370c6267467609 = array();
    public function findContent(\eZ\Publish\API\Repository\Values\Content\Query $query, array $fieldFilters = array())
    {
        $this->initializer5527874b37139027284409 && $this->initializer5527874b37139027284409->__invoke($this->valueHolder5527874b37110211463298, $this, 'findContent', array('query' => $query, 'fieldFilters' => $fieldFilters), $this->initializer5527874b37139027284409);
        return $this->valueHolder5527874b37110211463298->findContent($query, $fieldFilters);
    }
    public function findSingle(\eZ\Publish\API\Repository\Values\Content\Query\Criterion $filter, array $fieldFilters = array())
    {
        $this->initializer5527874b37139027284409 && $this->initializer5527874b37139027284409->__invoke($this->valueHolder5527874b37110211463298, $this, 'findSingle', array('filter' => $filter, 'fieldFilters' => $fieldFilters), $this->initializer5527874b37139027284409);
        return $this->valueHolder5527874b37110211463298->findSingle($filter, $fieldFilters);
    }
    public function suggest($prefix, $fieldPaths = array(), $limit = 10, \eZ\Publish\API\Repository\Values\Content\Query\Criterion $filter = null)
    {
        $this->initializer5527874b37139027284409 && $this->initializer5527874b37139027284409->__invoke($this->valueHolder5527874b37110211463298, $this, 'suggest', array('prefix' => $prefix, 'fieldPaths' => $fieldPaths, 'limit' => $limit, 'filter' => $filter), $this->initializer5527874b37139027284409);
        return $this->valueHolder5527874b37110211463298->suggest($prefix, $fieldPaths, $limit, $filter);
    }
    public function indexContent(\eZ\Publish\SPI\Persistence\Content $content)
    {
        $this->initializer5527874b37139027284409 && $this->initializer5527874b37139027284409->__invoke($this->valueHolder5527874b37110211463298, $this, 'indexContent', array('content' => $content), $this->initializer5527874b37139027284409);
        return $this->valueHolder5527874b37110211463298->indexContent($content);
    }
    public function deleteContent($contentId, $versionId = null)
    {
        $this->initializer5527874b37139027284409 && $this->initializer5527874b37139027284409->__invoke($this->valueHolder5527874b37110211463298, $this, 'deleteContent', array('contentId' => $contentId, 'versionId' => $versionId), $this->initializer5527874b37139027284409);
        return $this->valueHolder5527874b37110211463298->deleteContent($contentId, $versionId);
    }
    public function deleteLocation($locationId)
    {
        $this->initializer5527874b37139027284409 && $this->initializer5527874b37139027284409->__invoke($this->valueHolder5527874b37110211463298, $this, 'deleteLocation', array('locationId' => $locationId), $this->initializer5527874b37139027284409);
        return $this->valueHolder5527874b37110211463298->deleteLocation($locationId);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b37139027284409 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b37139027284409 && $this->initializer5527874b37139027284409->__invoke($this->valueHolder5527874b37110211463298, $this, '__get', array('name' => $name), $this->initializer5527874b37139027284409);
        if (isset(self::$publicProperties5527874b370c6267467609[$name])) {
            return $this->valueHolder5527874b37110211463298->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b37110211463298;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b37110211463298;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b37139027284409 && $this->initializer5527874b37139027284409->__invoke($this->valueHolder5527874b37110211463298, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b37139027284409);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b37110211463298;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b37110211463298;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b37139027284409 && $this->initializer5527874b37139027284409->__invoke($this->valueHolder5527874b37110211463298, $this, '__isset', array('name' => $name), $this->initializer5527874b37139027284409);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b37110211463298;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b37110211463298;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b37139027284409 && $this->initializer5527874b37139027284409->__invoke($this->valueHolder5527874b37110211463298, $this, '__unset', array('name' => $name), $this->initializer5527874b37139027284409);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b37110211463298;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b37110211463298;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b37139027284409 && $this->initializer5527874b37139027284409->__invoke($this->valueHolder5527874b37110211463298, $this, '__clone', array(), $this->initializer5527874b37139027284409);
        $this->valueHolder5527874b37110211463298 = clone $this->valueHolder5527874b37110211463298;
    }
    public function __sleep()
    {
        $this->initializer5527874b37139027284409 && $this->initializer5527874b37139027284409->__invoke($this->valueHolder5527874b37110211463298, $this, '__sleep', array(), $this->initializer5527874b37139027284409);
        return array('valueHolder5527874b37110211463298');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b37139027284409 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b37139027284409;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b37139027284409 && $this->initializer5527874b37139027284409->__invoke($this->valueHolder5527874b37110211463298, $this, 'initializeProxy', array(), $this->initializer5527874b37139027284409);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b37110211463298;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b37110211463298;
    }
}
class eZPublishCorePersistenceLegacyContentSearchLocationHandler_000000002343b7f1000000006a1c264a extends \eZ\Publish\Core\Persistence\Legacy\Content\Search\Location\Handler implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b3956d007302581 = null;
    private $initializer5527874b3956d006437011 = null;
    private static $publicProperties5527874b3956d166210467 = array();
    public function findLocations(\eZ\Publish\API\Repository\Values\Content\LocationQuery $query)
    {
        $this->initializer5527874b3956d006437011 && $this->initializer5527874b3956d006437011->__invoke($this->valueHolder5527874b3956d007302581, $this, 'findLocations', array('query' => $query), $this->initializer5527874b3956d006437011);
        return $this->valueHolder5527874b3956d007302581->findLocations($query);
    }
    public function indexLocation(\eZ\Publish\SPI\Persistence\Content\Location $location)
    {
        $this->initializer5527874b3956d006437011 && $this->initializer5527874b3956d006437011->__invoke($this->valueHolder5527874b3956d007302581, $this, 'indexLocation', array('location' => $location), $this->initializer5527874b3956d006437011);
        return $this->valueHolder5527874b3956d007302581->indexLocation($location);
    }
    public function deleteLocation($locationId)
    {
        $this->initializer5527874b3956d006437011 && $this->initializer5527874b3956d006437011->__invoke($this->valueHolder5527874b3956d007302581, $this, 'deleteLocation', array('locationId' => $locationId), $this->initializer5527874b3956d006437011);
        return $this->valueHolder5527874b3956d007302581->deleteLocation($locationId);
    }
    public function deleteContent($contentId)
    {
        $this->initializer5527874b3956d006437011 && $this->initializer5527874b3956d006437011->__invoke($this->valueHolder5527874b3956d007302581, $this, 'deleteContent', array('contentId' => $contentId), $this->initializer5527874b3956d006437011);
        return $this->valueHolder5527874b3956d007302581->deleteContent($contentId);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b3956d006437011 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b3956d006437011 && $this->initializer5527874b3956d006437011->__invoke($this->valueHolder5527874b3956d007302581, $this, '__get', array('name' => $name), $this->initializer5527874b3956d006437011);
        if (isset(self::$publicProperties5527874b3956d166210467[$name])) {
            return $this->valueHolder5527874b3956d007302581->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b3956d007302581;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b3956d007302581;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b3956d006437011 && $this->initializer5527874b3956d006437011->__invoke($this->valueHolder5527874b3956d007302581, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b3956d006437011);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b3956d007302581;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b3956d007302581;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b3956d006437011 && $this->initializer5527874b3956d006437011->__invoke($this->valueHolder5527874b3956d007302581, $this, '__isset', array('name' => $name), $this->initializer5527874b3956d006437011);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b3956d007302581;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b3956d007302581;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b3956d006437011 && $this->initializer5527874b3956d006437011->__invoke($this->valueHolder5527874b3956d007302581, $this, '__unset', array('name' => $name), $this->initializer5527874b3956d006437011);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b3956d007302581;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b3956d007302581;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b3956d006437011 && $this->initializer5527874b3956d006437011->__invoke($this->valueHolder5527874b3956d007302581, $this, '__clone', array(), $this->initializer5527874b3956d006437011);
        $this->valueHolder5527874b3956d007302581 = clone $this->valueHolder5527874b3956d007302581;
    }
    public function __sleep()
    {
        $this->initializer5527874b3956d006437011 && $this->initializer5527874b3956d006437011->__invoke($this->valueHolder5527874b3956d007302581, $this, '__sleep', array(), $this->initializer5527874b3956d006437011);
        return array('valueHolder5527874b3956d007302581');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b3956d006437011 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b3956d006437011;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b3956d006437011 && $this->initializer5527874b3956d006437011->__invoke($this->valueHolder5527874b3956d007302581, $this, 'initializeProxy', array(), $this->initializer5527874b3956d006437011);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b3956d007302581;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b3956d007302581;
    }
}
class eZPublishCorePersistenceLegacyContentSectionHandler_000000002343a887000000006a1c264a extends \eZ\Publish\Core\Persistence\Legacy\Content\Section\Handler implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b3a2ea762341028 = null;
    private $initializer5527874b3a2ff845776143 = null;
    private static $publicProperties5527874b3a2af230501512 = array();
    public function create($name, $identifier)
    {
        $this->initializer5527874b3a2ff845776143 && $this->initializer5527874b3a2ff845776143->__invoke($this->valueHolder5527874b3a2ea762341028, $this, 'create', array('name' => $name, 'identifier' => $identifier), $this->initializer5527874b3a2ff845776143);
        return $this->valueHolder5527874b3a2ea762341028->create($name, $identifier);
    }
    public function update($id, $name, $identifier)
    {
        $this->initializer5527874b3a2ff845776143 && $this->initializer5527874b3a2ff845776143->__invoke($this->valueHolder5527874b3a2ea762341028, $this, 'update', array('id' => $id, 'name' => $name, 'identifier' => $identifier), $this->initializer5527874b3a2ff845776143);
        return $this->valueHolder5527874b3a2ea762341028->update($id, $name, $identifier);
    }
    public function load($id)
    {
        $this->initializer5527874b3a2ff845776143 && $this->initializer5527874b3a2ff845776143->__invoke($this->valueHolder5527874b3a2ea762341028, $this, 'load', array('id' => $id), $this->initializer5527874b3a2ff845776143);
        return $this->valueHolder5527874b3a2ea762341028->load($id);
    }
    public function loadAll()
    {
        $this->initializer5527874b3a2ff845776143 && $this->initializer5527874b3a2ff845776143->__invoke($this->valueHolder5527874b3a2ea762341028, $this, 'loadAll', array(), $this->initializer5527874b3a2ff845776143);
        return $this->valueHolder5527874b3a2ea762341028->loadAll();
    }
    public function loadByIdentifier($identifier)
    {
        $this->initializer5527874b3a2ff845776143 && $this->initializer5527874b3a2ff845776143->__invoke($this->valueHolder5527874b3a2ea762341028, $this, 'loadByIdentifier', array('identifier' => $identifier), $this->initializer5527874b3a2ff845776143);
        return $this->valueHolder5527874b3a2ea762341028->loadByIdentifier($identifier);
    }
    public function delete($id)
    {
        $this->initializer5527874b3a2ff845776143 && $this->initializer5527874b3a2ff845776143->__invoke($this->valueHolder5527874b3a2ea762341028, $this, 'delete', array('id' => $id), $this->initializer5527874b3a2ff845776143);
        return $this->valueHolder5527874b3a2ea762341028->delete($id);
    }
    public function assign($sectionId, $contentId)
    {
        $this->initializer5527874b3a2ff845776143 && $this->initializer5527874b3a2ff845776143->__invoke($this->valueHolder5527874b3a2ea762341028, $this, 'assign', array('sectionId' => $sectionId, 'contentId' => $contentId), $this->initializer5527874b3a2ff845776143);
        return $this->valueHolder5527874b3a2ea762341028->assign($sectionId, $contentId);
    }
    public function assignmentsCount($sectionId)
    {
        $this->initializer5527874b3a2ff845776143 && $this->initializer5527874b3a2ff845776143->__invoke($this->valueHolder5527874b3a2ea762341028, $this, 'assignmentsCount', array('sectionId' => $sectionId), $this->initializer5527874b3a2ff845776143);
        return $this->valueHolder5527874b3a2ea762341028->assignmentsCount($sectionId);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b3a2ff845776143 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b3a2ff845776143 && $this->initializer5527874b3a2ff845776143->__invoke($this->valueHolder5527874b3a2ea762341028, $this, '__get', array('name' => $name), $this->initializer5527874b3a2ff845776143);
        if (isset(self::$publicProperties5527874b3a2af230501512[$name])) {
            return $this->valueHolder5527874b3a2ea762341028->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b3a2ea762341028;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b3a2ea762341028;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b3a2ff845776143 && $this->initializer5527874b3a2ff845776143->__invoke($this->valueHolder5527874b3a2ea762341028, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b3a2ff845776143);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b3a2ea762341028;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b3a2ea762341028;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b3a2ff845776143 && $this->initializer5527874b3a2ff845776143->__invoke($this->valueHolder5527874b3a2ea762341028, $this, '__isset', array('name' => $name), $this->initializer5527874b3a2ff845776143);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b3a2ea762341028;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b3a2ea762341028;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b3a2ff845776143 && $this->initializer5527874b3a2ff845776143->__invoke($this->valueHolder5527874b3a2ea762341028, $this, '__unset', array('name' => $name), $this->initializer5527874b3a2ff845776143);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b3a2ea762341028;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b3a2ea762341028;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b3a2ff845776143 && $this->initializer5527874b3a2ff845776143->__invoke($this->valueHolder5527874b3a2ea762341028, $this, '__clone', array(), $this->initializer5527874b3a2ff845776143);
        $this->valueHolder5527874b3a2ea762341028 = clone $this->valueHolder5527874b3a2ea762341028;
    }
    public function __sleep()
    {
        $this->initializer5527874b3a2ff845776143 && $this->initializer5527874b3a2ff845776143->__invoke($this->valueHolder5527874b3a2ea762341028, $this, '__sleep', array(), $this->initializer5527874b3a2ff845776143);
        return array('valueHolder5527874b3a2ea762341028');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b3a2ff845776143 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b3a2ff845776143;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b3a2ff845776143 && $this->initializer5527874b3a2ff845776143->__invoke($this->valueHolder5527874b3a2ea762341028, $this, 'initializeProxy', array(), $this->initializer5527874b3a2ff845776143);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b3a2ea762341028;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b3a2ea762341028;
    }
}
class eZPublishCorePersistenceLegacyContentLocationTrashHandler_000000002343a885000000006a1c264a extends \eZ\Publish\Core\Persistence\Legacy\Content\Location\Trash\Handler implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b3cac4541209604 = null;
    private $initializer5527874b3cad9202931622 = null;
    private static $publicProperties5527874b3ca7a469741822 = array();
    public function loadTrashItem($id)
    {
        $this->initializer5527874b3cad9202931622 && $this->initializer5527874b3cad9202931622->__invoke($this->valueHolder5527874b3cac4541209604, $this, 'loadTrashItem', array('id' => $id), $this->initializer5527874b3cad9202931622);
        return $this->valueHolder5527874b3cac4541209604->loadTrashItem($id);
    }
    public function trashSubtree($locationId)
    {
        $this->initializer5527874b3cad9202931622 && $this->initializer5527874b3cad9202931622->__invoke($this->valueHolder5527874b3cac4541209604, $this, 'trashSubtree', array('locationId' => $locationId), $this->initializer5527874b3cad9202931622);
        return $this->valueHolder5527874b3cac4541209604->trashSubtree($locationId);
    }
    public function recover($trashedId, $newParentId)
    {
        $this->initializer5527874b3cad9202931622 && $this->initializer5527874b3cad9202931622->__invoke($this->valueHolder5527874b3cac4541209604, $this, 'recover', array('trashedId' => $trashedId, 'newParentId' => $newParentId), $this->initializer5527874b3cad9202931622);
        return $this->valueHolder5527874b3cac4541209604->recover($trashedId, $newParentId);
    }
    public function findTrashItems(\eZ\Publish\API\Repository\Values\Content\Query\Criterion $criterion = null, $offset = 0, $limit = null, array $sort = null)
    {
        $this->initializer5527874b3cad9202931622 && $this->initializer5527874b3cad9202931622->__invoke($this->valueHolder5527874b3cac4541209604, $this, 'findTrashItems', array('criterion' => $criterion, 'offset' => $offset, 'limit' => $limit, 'sort' => $sort), $this->initializer5527874b3cad9202931622);
        return $this->valueHolder5527874b3cac4541209604->findTrashItems($criterion, $offset, $limit, $sort);
    }
    public function emptyTrash()
    {
        $this->initializer5527874b3cad9202931622 && $this->initializer5527874b3cad9202931622->__invoke($this->valueHolder5527874b3cac4541209604, $this, 'emptyTrash', array(), $this->initializer5527874b3cad9202931622);
        return $this->valueHolder5527874b3cac4541209604->emptyTrash();
    }
    public function deleteTrashItem($trashedId)
    {
        $this->initializer5527874b3cad9202931622 && $this->initializer5527874b3cad9202931622->__invoke($this->valueHolder5527874b3cac4541209604, $this, 'deleteTrashItem', array('trashedId' => $trashedId), $this->initializer5527874b3cad9202931622);
        return $this->valueHolder5527874b3cac4541209604->deleteTrashItem($trashedId);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b3cad9202931622 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b3cad9202931622 && $this->initializer5527874b3cad9202931622->__invoke($this->valueHolder5527874b3cac4541209604, $this, '__get', array('name' => $name), $this->initializer5527874b3cad9202931622);
        if (isset(self::$publicProperties5527874b3ca7a469741822[$name])) {
            return $this->valueHolder5527874b3cac4541209604->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b3cac4541209604;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b3cac4541209604;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b3cad9202931622 && $this->initializer5527874b3cad9202931622->__invoke($this->valueHolder5527874b3cac4541209604, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b3cad9202931622);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b3cac4541209604;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b3cac4541209604;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b3cad9202931622 && $this->initializer5527874b3cad9202931622->__invoke($this->valueHolder5527874b3cac4541209604, $this, '__isset', array('name' => $name), $this->initializer5527874b3cad9202931622);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b3cac4541209604;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b3cac4541209604;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b3cad9202931622 && $this->initializer5527874b3cad9202931622->__invoke($this->valueHolder5527874b3cac4541209604, $this, '__unset', array('name' => $name), $this->initializer5527874b3cad9202931622);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b3cac4541209604;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b3cac4541209604;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b3cad9202931622 && $this->initializer5527874b3cad9202931622->__invoke($this->valueHolder5527874b3cac4541209604, $this, '__clone', array(), $this->initializer5527874b3cad9202931622);
        $this->valueHolder5527874b3cac4541209604 = clone $this->valueHolder5527874b3cac4541209604;
    }
    public function __sleep()
    {
        $this->initializer5527874b3cad9202931622 && $this->initializer5527874b3cad9202931622->__invoke($this->valueHolder5527874b3cac4541209604, $this, '__sleep', array(), $this->initializer5527874b3cad9202931622);
        return array('valueHolder5527874b3cac4541209604');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b3cad9202931622 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b3cad9202931622;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b3cad9202931622 && $this->initializer5527874b3cad9202931622->__invoke($this->valueHolder5527874b3cac4541209604, $this, 'initializeProxy', array(), $this->initializer5527874b3cad9202931622);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b3cac4541209604;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b3cac4541209604;
    }
}
class eZPublishCorePersistenceLegacyContentUrlAliasHandler_000000002343a8f7000000006a1c264a extends \eZ\Publish\Core\Persistence\Legacy\Content\UrlAlias\Handler implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b3f235887328442 = null;
    private $initializer5527874b3f249547701803 = null;
    private static $publicProperties5527874b3f206721848011 = array();
    public function publishUrlAliasForLocation($locationId, $parentLocationId, $name, $languageCode, $alwaysAvailable = false, $updatePathIdentificationString = false)
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, 'publishUrlAliasForLocation', array('locationId' => $locationId, 'parentLocationId' => $parentLocationId, 'name' => $name, 'languageCode' => $languageCode, 'alwaysAvailable' => $alwaysAvailable, 'updatePathIdentificationString' => $updatePathIdentificationString), $this->initializer5527874b3f249547701803);
        return $this->valueHolder5527874b3f235887328442->publishUrlAliasForLocation($locationId, $parentLocationId, $name, $languageCode, $alwaysAvailable, $updatePathIdentificationString);
    }
    public function createCustomUrlAlias($locationId, $path, $forwarding = false, $languageCode = null, $alwaysAvailable = false)
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, 'createCustomUrlAlias', array('locationId' => $locationId, 'path' => $path, 'forwarding' => $forwarding, 'languageCode' => $languageCode, 'alwaysAvailable' => $alwaysAvailable), $this->initializer5527874b3f249547701803);
        return $this->valueHolder5527874b3f235887328442->createCustomUrlAlias($locationId, $path, $forwarding, $languageCode, $alwaysAvailable);
    }
    public function createGlobalUrlAlias($resource, $path, $forwarding = false, $languageCode = null, $alwaysAvailable = false)
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, 'createGlobalUrlAlias', array('resource' => $resource, 'path' => $path, 'forwarding' => $forwarding, 'languageCode' => $languageCode, 'alwaysAvailable' => $alwaysAvailable), $this->initializer5527874b3f249547701803);
        return $this->valueHolder5527874b3f235887328442->createGlobalUrlAlias($resource, $path, $forwarding, $languageCode, $alwaysAvailable);
    }
    public function listURLAliasesForLocation($locationId, $custom = false)
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, 'listURLAliasesForLocation', array('locationId' => $locationId, 'custom' => $custom), $this->initializer5527874b3f249547701803);
        return $this->valueHolder5527874b3f235887328442->listURLAliasesForLocation($locationId, $custom);
    }
    public function listGlobalURLAliases($languageCode = null, $offset = 0, $limit = -1)
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, 'listGlobalURLAliases', array('languageCode' => $languageCode, 'offset' => $offset, 'limit' => $limit), $this->initializer5527874b3f249547701803);
        return $this->valueHolder5527874b3f235887328442->listGlobalURLAliases($languageCode, $offset, $limit);
    }
    public function removeURLAliases(array $urlAliases)
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, 'removeURLAliases', array('urlAliases' => $urlAliases), $this->initializer5527874b3f249547701803);
        return $this->valueHolder5527874b3f235887328442->removeURLAliases($urlAliases);
    }
    public function lookup($url)
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, 'lookup', array('url' => $url), $this->initializer5527874b3f249547701803);
        return $this->valueHolder5527874b3f235887328442->lookup($url);
    }
    public function loadUrlAlias($id)
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, 'loadUrlAlias', array('id' => $id), $this->initializer5527874b3f249547701803);
        return $this->valueHolder5527874b3f235887328442->loadUrlAlias($id);
    }
    public function locationMoved($locationId, $oldParentId, $newParentId)
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, 'locationMoved', array('locationId' => $locationId, 'oldParentId' => $oldParentId, 'newParentId' => $newParentId), $this->initializer5527874b3f249547701803);
        return $this->valueHolder5527874b3f235887328442->locationMoved($locationId, $oldParentId, $newParentId);
    }
    public function locationCopied($locationId, $newLocationId, $newParentId)
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, 'locationCopied', array('locationId' => $locationId, 'newLocationId' => $newLocationId, 'newParentId' => $newParentId), $this->initializer5527874b3f249547701803);
        return $this->valueHolder5527874b3f235887328442->locationCopied($locationId, $newLocationId, $newParentId);
    }
    public function locationDeleted($locationId)
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, 'locationDeleted', array('locationId' => $locationId), $this->initializer5527874b3f249547701803);
        return $this->valueHolder5527874b3f235887328442->locationDeleted($locationId);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b3f249547701803 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, '__get', array('name' => $name), $this->initializer5527874b3f249547701803);
        if (isset(self::$publicProperties5527874b3f206721848011[$name])) {
            return $this->valueHolder5527874b3f235887328442->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b3f235887328442;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b3f235887328442;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b3f249547701803);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b3f235887328442;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b3f235887328442;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, '__isset', array('name' => $name), $this->initializer5527874b3f249547701803);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b3f235887328442;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b3f235887328442;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, '__unset', array('name' => $name), $this->initializer5527874b3f249547701803);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b3f235887328442;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b3f235887328442;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, '__clone', array(), $this->initializer5527874b3f249547701803);
        $this->valueHolder5527874b3f235887328442 = clone $this->valueHolder5527874b3f235887328442;
    }
    public function __sleep()
    {
        $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, '__sleep', array(), $this->initializer5527874b3f249547701803);
        return array('valueHolder5527874b3f235887328442');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b3f249547701803 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b3f249547701803;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b3f249547701803 && $this->initializer5527874b3f249547701803->__invoke($this->valueHolder5527874b3f235887328442, $this, 'initializeProxy', array(), $this->initializer5527874b3f249547701803);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b3f235887328442;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b3f235887328442;
    }
}
class eZPublishCorePersistenceLegacyContentUrlWildcardHandler_000000002343b728000000006a1c264a extends \eZ\Publish\Core\Persistence\Legacy\Content\UrlWildcard\Handler implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b44c9d374427000 = null;
    private $initializer5527874b44ceb073556201 = null;
    private static $publicProperties5527874b44c56205992293 = array();
    public function create($sourceUrl, $destinationUrl, $forward = false)
    {
        $this->initializer5527874b44ceb073556201 && $this->initializer5527874b44ceb073556201->__invoke($this->valueHolder5527874b44c9d374427000, $this, 'create', array('sourceUrl' => $sourceUrl, 'destinationUrl' => $destinationUrl, 'forward' => $forward), $this->initializer5527874b44ceb073556201);
        return $this->valueHolder5527874b44c9d374427000->create($sourceUrl, $destinationUrl, $forward);
    }
    public function remove($id)
    {
        $this->initializer5527874b44ceb073556201 && $this->initializer5527874b44ceb073556201->__invoke($this->valueHolder5527874b44c9d374427000, $this, 'remove', array('id' => $id), $this->initializer5527874b44ceb073556201);
        return $this->valueHolder5527874b44c9d374427000->remove($id);
    }
    public function load($id)
    {
        $this->initializer5527874b44ceb073556201 && $this->initializer5527874b44ceb073556201->__invoke($this->valueHolder5527874b44c9d374427000, $this, 'load', array('id' => $id), $this->initializer5527874b44ceb073556201);
        return $this->valueHolder5527874b44c9d374427000->load($id);
    }
    public function loadAll($offset = 0, $limit = -1)
    {
        $this->initializer5527874b44ceb073556201 && $this->initializer5527874b44ceb073556201->__invoke($this->valueHolder5527874b44c9d374427000, $this, 'loadAll', array('offset' => $offset, 'limit' => $limit), $this->initializer5527874b44ceb073556201);
        return $this->valueHolder5527874b44c9d374427000->loadAll($offset, $limit);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b44ceb073556201 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b44ceb073556201 && $this->initializer5527874b44ceb073556201->__invoke($this->valueHolder5527874b44c9d374427000, $this, '__get', array('name' => $name), $this->initializer5527874b44ceb073556201);
        if (isset(self::$publicProperties5527874b44c56205992293[$name])) {
            return $this->valueHolder5527874b44c9d374427000->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b44c9d374427000;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b44c9d374427000;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b44ceb073556201 && $this->initializer5527874b44ceb073556201->__invoke($this->valueHolder5527874b44c9d374427000, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b44ceb073556201);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b44c9d374427000;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b44c9d374427000;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b44ceb073556201 && $this->initializer5527874b44ceb073556201->__invoke($this->valueHolder5527874b44c9d374427000, $this, '__isset', array('name' => $name), $this->initializer5527874b44ceb073556201);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b44c9d374427000;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b44c9d374427000;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b44ceb073556201 && $this->initializer5527874b44ceb073556201->__invoke($this->valueHolder5527874b44c9d374427000, $this, '__unset', array('name' => $name), $this->initializer5527874b44ceb073556201);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b44c9d374427000;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b44c9d374427000;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b44ceb073556201 && $this->initializer5527874b44ceb073556201->__invoke($this->valueHolder5527874b44c9d374427000, $this, '__clone', array(), $this->initializer5527874b44ceb073556201);
        $this->valueHolder5527874b44c9d374427000 = clone $this->valueHolder5527874b44c9d374427000;
    }
    public function __sleep()
    {
        $this->initializer5527874b44ceb073556201 && $this->initializer5527874b44ceb073556201->__invoke($this->valueHolder5527874b44c9d374427000, $this, '__sleep', array(), $this->initializer5527874b44ceb073556201);
        return array('valueHolder5527874b44c9d374427000');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b44ceb073556201 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b44ceb073556201;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b44ceb073556201 && $this->initializer5527874b44ceb073556201->__invoke($this->valueHolder5527874b44c9d374427000, $this, 'initializeProxy', array(), $this->initializer5527874b44ceb073556201);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b44c9d374427000;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b44c9d374427000;
    }
}
class eZPublishCorePersistenceLegacyUserHandler_000000002343b68b000000006a1c264a extends \eZ\Publish\Core\Persistence\Legacy\User\Handler implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b4632a600710687 = null;
    private $initializer5527874b4633f509267621 = null;
    private static $publicProperties5527874b462fc871643238 = array();
    public function create(\eZ\Publish\SPI\Persistence\User $user)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'create', array('user' => $user), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->create($user);
    }
    public function load($userId)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'load', array('userId' => $userId), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->load($userId);
    }
    public function loadByLogin($login)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'loadByLogin', array('login' => $login), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->loadByLogin($login);
    }
    public function loadByEmail($email)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'loadByEmail', array('email' => $email), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->loadByEmail($email);
    }
    public function update(\eZ\Publish\SPI\Persistence\User $user)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'update', array('user' => $user), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->update($user);
    }
    public function delete($userId)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'delete', array('userId' => $userId), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->delete($userId);
    }
    public function createRole(\eZ\Publish\SPI\Persistence\User\Role $role)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'createRole', array('role' => $role), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->createRole($role);
    }
    public function loadRole($roleId)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'loadRole', array('roleId' => $roleId), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->loadRole($roleId);
    }
    public function loadRoleByIdentifier($identifier)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'loadRoleByIdentifier', array('identifier' => $identifier), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->loadRoleByIdentifier($identifier);
    }
    public function loadRoles()
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'loadRoles', array(), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->loadRoles();
    }
    public function updateRole(\eZ\Publish\SPI\Persistence\User\RoleUpdateStruct $role)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'updateRole', array('role' => $role), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->updateRole($role);
    }
    public function deleteRole($roleId)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'deleteRole', array('roleId' => $roleId), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->deleteRole($roleId);
    }
    public function addPolicy($roleId, \eZ\Publish\SPI\Persistence\User\Policy $policy)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'addPolicy', array('roleId' => $roleId, 'policy' => $policy), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->addPolicy($roleId, $policy);
    }
    public function updatePolicy(\eZ\Publish\SPI\Persistence\User\Policy $policy)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'updatePolicy', array('policy' => $policy), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->updatePolicy($policy);
    }
    public function deletePolicy($policyId)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'deletePolicy', array('policyId' => $policyId), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->deletePolicy($policyId);
    }
    public function loadPoliciesByUserId($userId)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'loadPoliciesByUserId', array('userId' => $userId), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->loadPoliciesByUserId($userId);
    }
    public function assignRole($contentId, $roleId, array $limitation = null)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'assignRole', array('contentId' => $contentId, 'roleId' => $roleId, 'limitation' => $limitation), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->assignRole($contentId, $roleId, $limitation);
    }
    public function unAssignRole($contentId, $roleId)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'unAssignRole', array('contentId' => $contentId, 'roleId' => $roleId), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->unAssignRole($contentId, $roleId);
    }
    public function loadRoleAssignmentsByRoleId($roleId)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'loadRoleAssignmentsByRoleId', array('roleId' => $roleId), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->loadRoleAssignmentsByRoleId($roleId);
    }
    public function loadRoleAssignmentsByGroupId($groupId, $inherit = false)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'loadRoleAssignmentsByGroupId', array('groupId' => $groupId, 'inherit' => $inherit), $this->initializer5527874b4633f509267621);
        return $this->valueHolder5527874b4632a600710687->loadRoleAssignmentsByGroupId($groupId, $inherit);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b4633f509267621 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, '__get', array('name' => $name), $this->initializer5527874b4633f509267621);
        if (isset(self::$publicProperties5527874b462fc871643238[$name])) {
            return $this->valueHolder5527874b4632a600710687->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b4632a600710687;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b4632a600710687;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b4633f509267621);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b4632a600710687;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b4632a600710687;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, '__isset', array('name' => $name), $this->initializer5527874b4633f509267621);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b4632a600710687;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b4632a600710687;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, '__unset', array('name' => $name), $this->initializer5527874b4633f509267621);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b4632a600710687;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b4632a600710687;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, '__clone', array(), $this->initializer5527874b4633f509267621);
        $this->valueHolder5527874b4632a600710687 = clone $this->valueHolder5527874b4632a600710687;
    }
    public function __sleep()
    {
        $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, '__sleep', array(), $this->initializer5527874b4633f509267621);
        return array('valueHolder5527874b4632a600710687');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b4633f509267621 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b4633f509267621;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b4633f509267621 && $this->initializer5527874b4633f509267621->__invoke($this->valueHolder5527874b4632a600710687, $this, 'initializeProxy', array(), $this->initializer5527874b4633f509267621);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b4632a600710687;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b4632a600710687;
    }
}
class eZPublishCorePersistenceLegacyHandler_000000002343b609000000006a1c264a extends \eZ\Publish\Core\Persistence\Legacy\Handler implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b4cc9d169406940 = null;
    private $initializer5527874b4ccc4432763587 = null;
    private static $publicProperties5527874b4cc55633270208 = array();
    public function contentHandler()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'contentHandler', array(), $this->initializer5527874b4ccc4432763587);
        return $this->valueHolder5527874b4cc9d169406940->contentHandler();
    }
    public function searchHandler()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'searchHandler', array(), $this->initializer5527874b4ccc4432763587);
        return $this->valueHolder5527874b4cc9d169406940->searchHandler();
    }
    public function contentTypeHandler()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'contentTypeHandler', array(), $this->initializer5527874b4ccc4432763587);
        return $this->valueHolder5527874b4cc9d169406940->contentTypeHandler();
    }
    public function contentLanguageHandler()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'contentLanguageHandler', array(), $this->initializer5527874b4ccc4432763587);
        return $this->valueHolder5527874b4cc9d169406940->contentLanguageHandler();
    }
    public function locationHandler()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'locationHandler', array(), $this->initializer5527874b4ccc4432763587);
        return $this->valueHolder5527874b4cc9d169406940->locationHandler();
    }
    public function locationSearchHandler()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'locationSearchHandler', array(), $this->initializer5527874b4ccc4432763587);
        return $this->valueHolder5527874b4cc9d169406940->locationSearchHandler();
    }
    public function objectStateHandler()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'objectStateHandler', array(), $this->initializer5527874b4ccc4432763587);
        return $this->valueHolder5527874b4cc9d169406940->objectStateHandler();
    }
    public function sectionHandler()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'sectionHandler', array(), $this->initializer5527874b4ccc4432763587);
        return $this->valueHolder5527874b4cc9d169406940->sectionHandler();
    }
    public function trashHandler()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'trashHandler', array(), $this->initializer5527874b4ccc4432763587);
        return $this->valueHolder5527874b4cc9d169406940->trashHandler();
    }
    public function urlAliasHandler()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'urlAliasHandler', array(), $this->initializer5527874b4ccc4432763587);
        return $this->valueHolder5527874b4cc9d169406940->urlAliasHandler();
    }
    public function urlWildcardHandler()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'urlWildcardHandler', array(), $this->initializer5527874b4ccc4432763587);
        return $this->valueHolder5527874b4cc9d169406940->urlWildcardHandler();
    }
    public function userHandler()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'userHandler', array(), $this->initializer5527874b4ccc4432763587);
        return $this->valueHolder5527874b4cc9d169406940->userHandler();
    }
    public function transactionHandler()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'transactionHandler', array(), $this->initializer5527874b4ccc4432763587);
        return $this->valueHolder5527874b4cc9d169406940->transactionHandler();
    }
    public function beginTransaction()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'beginTransaction', array(), $this->initializer5527874b4ccc4432763587);
        return $this->valueHolder5527874b4cc9d169406940->beginTransaction();
    }
    public function commit()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'commit', array(), $this->initializer5527874b4ccc4432763587);
        return $this->valueHolder5527874b4cc9d169406940->commit();
    }
    public function rollback()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'rollback', array(), $this->initializer5527874b4ccc4432763587);
        return $this->valueHolder5527874b4cc9d169406940->rollback();
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b4ccc4432763587 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, '__get', array('name' => $name), $this->initializer5527874b4ccc4432763587);
        if (isset(self::$publicProperties5527874b4cc55633270208[$name])) {
            return $this->valueHolder5527874b4cc9d169406940->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b4cc9d169406940;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b4cc9d169406940;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b4ccc4432763587);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b4cc9d169406940;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b4cc9d169406940;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, '__isset', array('name' => $name), $this->initializer5527874b4ccc4432763587);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b4cc9d169406940;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b4cc9d169406940;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, '__unset', array('name' => $name), $this->initializer5527874b4ccc4432763587);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b4cc9d169406940;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b4cc9d169406940;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, '__clone', array(), $this->initializer5527874b4ccc4432763587);
        $this->valueHolder5527874b4cc9d169406940 = clone $this->valueHolder5527874b4cc9d169406940;
    }
    public function __sleep()
    {
        $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, '__sleep', array(), $this->initializer5527874b4ccc4432763587);
        return array('valueHolder5527874b4cc9d169406940');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b4ccc4432763587 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b4ccc4432763587;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b4ccc4432763587 && $this->initializer5527874b4ccc4432763587->__invoke($this->valueHolder5527874b4cc9d169406940, $this, 'initializeProxy', array(), $this->initializer5527874b4ccc4432763587);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b4cc9d169406940;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b4cc9d169406940;
    }
}
class eZPublishCorePersistenceDoctrineConnectionHandler_000000002343b608000000006a1c264a extends \eZ\Publish\Core\Persistence\Doctrine\ConnectionHandler implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b4ec8a556765665 = null;
    private $initializer5527874b4ec9e752389238 = null;
    private static $publicProperties5527874b4ec56705666998 = array();
    public function getConnection()
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'getConnection', array(), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->getConnection();
    }
    public function getName()
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'getName', array(), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->getName();
    }
    public function beginTransaction()
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'beginTransaction', array(), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->beginTransaction();
    }
    public function commit()
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'commit', array(), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->commit();
    }
    public function rollBack()
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'rollBack', array(), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->rollBack();
    }
    public function prepare($query)
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'prepare', array('query' => $query), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->prepare($query);
    }
    public function lastInsertId($sequenceName = null)
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'lastInsertId', array('sequenceName' => $sequenceName), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->lastInsertId($sequenceName);
    }
    public function useSequences()
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'useSequences', array(), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->useSequences();
    }
    public function exec($query)
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'exec', array('query' => $query), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->exec($query);
    }
    public function createSelectQuery()
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'createSelectQuery', array(), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->createSelectQuery();
    }
    public function createInsertQuery()
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'createInsertQuery', array(), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->createInsertQuery();
    }
    public function createUpdateQuery()
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'createUpdateQuery', array(), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->createUpdateQuery();
    }
    public function createDeleteQuery()
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'createDeleteQuery', array(), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->createDeleteQuery();
    }
    public function aliasedColumn($query, $columnName, $tableName = null)
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'aliasedColumn', array('query' => $query, 'columnName' => $columnName, 'tableName' => $tableName), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->aliasedColumn($query, $columnName, $tableName);
    }
    public function quoteColumn($columnName, $tableName = null)
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'quoteColumn', array('columnName' => $columnName, 'tableName' => $tableName), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->quoteColumn($columnName, $tableName);
    }
    public function quoteTable($tableName)
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'quoteTable', array('tableName' => $tableName), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->quoteTable($tableName);
    }
    public function alias($name, $alias)
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'alias', array('name' => $name, 'alias' => $alias), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->alias($name, $alias);
    }
    public function quoteIdentifier($identifier)
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'quoteIdentifier', array('identifier' => $identifier), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->quoteIdentifier($identifier);
    }
    public function getAutoIncrementValue($table, $column)
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'getAutoIncrementValue', array('table' => $table, 'column' => $column), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->getAutoIncrementValue($table, $column);
    }
    public function getSequenceName($table, $column)
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'getSequenceName', array('table' => $table, 'column' => $column), $this->initializer5527874b4ec9e752389238);
        return $this->valueHolder5527874b4ec8a556765665->getSequenceName($table, $column);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b4ec9e752389238 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, '__get', array('name' => $name), $this->initializer5527874b4ec9e752389238);
        if (isset(self::$publicProperties5527874b4ec56705666998[$name])) {
            return $this->valueHolder5527874b4ec8a556765665->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b4ec8a556765665;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b4ec8a556765665;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b4ec9e752389238);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b4ec8a556765665;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b4ec8a556765665;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, '__isset', array('name' => $name), $this->initializer5527874b4ec9e752389238);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b4ec8a556765665;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b4ec8a556765665;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, '__unset', array('name' => $name), $this->initializer5527874b4ec9e752389238);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b4ec8a556765665;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b4ec8a556765665;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, '__clone', array(), $this->initializer5527874b4ec9e752389238);
        $this->valueHolder5527874b4ec8a556765665 = clone $this->valueHolder5527874b4ec8a556765665;
    }
    public function __sleep()
    {
        $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, '__sleep', array(), $this->initializer5527874b4ec9e752389238);
        return array('valueHolder5527874b4ec8a556765665');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b4ec9e752389238 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b4ec9e752389238;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b4ec9e752389238 && $this->initializer5527874b4ec9e752389238->__invoke($this->valueHolder5527874b4ec8a556765665, $this, 'initializeProxy', array(), $this->initializer5527874b4ec9e752389238);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b4ec8a556765665;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b4ec8a556765665;
    }
}
class eZPublishCoreIOTolerantIOService_000000002343b651000000006a1c264a extends \eZ\Publish\Core\IO\TolerantIOService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b54f14606724696 = null;
    private $initializer5527874b54f2d707016573 = null;
    private static $publicProperties5527874b54ec8133540186 = array();
    public function setLogger(\Psr\Log\LoggerInterface $logger = null)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, 'setLogger', array('logger' => $logger), $this->initializer5527874b54f2d707016573);
        return $this->valueHolder5527874b54f14606724696->setLogger($logger);
    }
    public function deleteBinaryFile(\eZ\Publish\Core\IO\Values\BinaryFile $binaryFile)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, 'deleteBinaryFile', array('binaryFile' => $binaryFile), $this->initializer5527874b54f2d707016573);
        return $this->valueHolder5527874b54f14606724696->deleteBinaryFile($binaryFile);
    }
    public function loadBinaryFile($binaryFileId)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, 'loadBinaryFile', array('binaryFileId' => $binaryFileId), $this->initializer5527874b54f2d707016573);
        return $this->valueHolder5527874b54f14606724696->loadBinaryFile($binaryFileId);
    }
    public function loadBinaryFileByUri($binaryFileUri)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, 'loadBinaryFileByUri', array('binaryFileUri' => $binaryFileUri), $this->initializer5527874b54f2d707016573);
        return $this->valueHolder5527874b54f14606724696->loadBinaryFileByUri($binaryFileUri);
    }
    public function setPrefix($prefix)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, 'setPrefix', array('prefix' => $prefix), $this->initializer5527874b54f2d707016573);
        return $this->valueHolder5527874b54f14606724696->setPrefix($prefix);
    }
    public function newBinaryCreateStructFromUploadedFile(array $uploadedFile)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, 'newBinaryCreateStructFromUploadedFile', array('uploadedFile' => $uploadedFile), $this->initializer5527874b54f2d707016573);
        return $this->valueHolder5527874b54f14606724696->newBinaryCreateStructFromUploadedFile($uploadedFile);
    }
    public function newBinaryCreateStructFromLocalFile($localFile)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, 'newBinaryCreateStructFromLocalFile', array('localFile' => $localFile), $this->initializer5527874b54f2d707016573);
        return $this->valueHolder5527874b54f14606724696->newBinaryCreateStructFromLocalFile($localFile);
    }
    public function createBinaryFile(\eZ\Publish\Core\IO\Values\BinaryFileCreateStruct $binaryFileCreateStruct)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, 'createBinaryFile', array('binaryFileCreateStruct' => $binaryFileCreateStruct), $this->initializer5527874b54f2d707016573);
        return $this->valueHolder5527874b54f14606724696->createBinaryFile($binaryFileCreateStruct);
    }
    public function getFileInputStream(\eZ\Publish\Core\IO\Values\BinaryFile $binaryFile)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, 'getFileInputStream', array('binaryFile' => $binaryFile), $this->initializer5527874b54f2d707016573);
        return $this->valueHolder5527874b54f14606724696->getFileInputStream($binaryFile);
    }
    public function getFileContents(\eZ\Publish\Core\IO\Values\BinaryFile $binaryFile)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, 'getFileContents', array('binaryFile' => $binaryFile), $this->initializer5527874b54f2d707016573);
        return $this->valueHolder5527874b54f14606724696->getFileContents($binaryFile);
    }
    public function getInternalPath($binaryFileId)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, 'getInternalPath', array('binaryFileId' => $binaryFileId), $this->initializer5527874b54f2d707016573);
        return $this->valueHolder5527874b54f14606724696->getInternalPath($binaryFileId);
    }
    public function getExternalPath($internalId)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, 'getExternalPath', array('internalId' => $internalId), $this->initializer5527874b54f2d707016573);
        return $this->valueHolder5527874b54f14606724696->getExternalPath($internalId);
    }
    public function getUri($binaryFileId)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, 'getUri', array('binaryFileId' => $binaryFileId), $this->initializer5527874b54f2d707016573);
        return $this->valueHolder5527874b54f14606724696->getUri($binaryFileId);
    }
    public function getMimeType($binaryFileId)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, 'getMimeType', array('binaryFileId' => $binaryFileId), $this->initializer5527874b54f2d707016573);
        return $this->valueHolder5527874b54f14606724696->getMimeType($binaryFileId);
    }
    public function exists($binaryFileId)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, 'exists', array('binaryFileId' => $binaryFileId), $this->initializer5527874b54f2d707016573);
        return $this->valueHolder5527874b54f14606724696->exists($binaryFileId);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b54f2d707016573 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, '__get', array('name' => $name), $this->initializer5527874b54f2d707016573);
        if (isset(self::$publicProperties5527874b54ec8133540186[$name])) {
            return $this->valueHolder5527874b54f14606724696->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b54f14606724696;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b54f14606724696;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b54f2d707016573);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b54f14606724696;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b54f14606724696;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, '__isset', array('name' => $name), $this->initializer5527874b54f2d707016573);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b54f14606724696;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b54f14606724696;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, '__unset', array('name' => $name), $this->initializer5527874b54f2d707016573);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b54f14606724696;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b54f14606724696;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, '__clone', array(), $this->initializer5527874b54f2d707016573);
        $this->valueHolder5527874b54f14606724696 = clone $this->valueHolder5527874b54f14606724696;
    }
    public function __sleep()
    {
        $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, '__sleep', array(), $this->initializer5527874b54f2d707016573);
        return array('valueHolder5527874b54f14606724696');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b54f2d707016573 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b54f2d707016573;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b54f2d707016573 && $this->initializer5527874b54f2d707016573->__invoke($this->valueHolder5527874b54f14606724696, $this, 'initializeProxy', array(), $this->initializer5527874b54f2d707016573);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b54f14606724696;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b54f14606724696;
    }
}
class eZBundleEzPublishLegacyBundleFieldTypePagePageService_000000002343b732000000006a1c264a extends \eZ\Bundle\EzPublishLegacyBundle\FieldType\Page\PageService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b59032552829696 = null;
    private $initializer5527874b59032071171921 = null;
    private static $publicProperties5527874b59030221383327 = array();
    public function getLayoutTemplate($layoutIdentifier)
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'getLayoutTemplate', array('layoutIdentifier' => $layoutIdentifier), $this->initializer5527874b59032071171921);
        return $this->valueHolder5527874b59032552829696->getLayoutTemplate($layoutIdentifier);
    }
    public function getValidBlockItemsAsContentInfo(\eZ\Publish\Core\FieldType\Page\Parts\Block $block)
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'getValidBlockItemsAsContentInfo', array('block' => $block), $this->initializer5527874b59032071171921);
        return $this->valueHolder5527874b59032552829696->getValidBlockItemsAsContentInfo($block);
    }
    public function getZoneDefinition()
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'getZoneDefinition', array(), $this->initializer5527874b59032071171921);
        return $this->valueHolder5527874b59032552829696->getZoneDefinition();
    }
    public function getZoneDefinitionByLayout($layoutIdentifier)
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'getZoneDefinitionByLayout', array('layoutIdentifier' => $layoutIdentifier), $this->initializer5527874b59032071171921);
        return $this->valueHolder5527874b59032552829696->getZoneDefinitionByLayout($layoutIdentifier);
    }
    public function hasZoneLayout($layoutIdentifier)
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'hasZoneLayout', array('layoutIdentifier' => $layoutIdentifier), $this->initializer5527874b59032071171921);
        return $this->valueHolder5527874b59032552829696->hasZoneLayout($layoutIdentifier);
    }
    public function getAvailableZoneLayouts()
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'getAvailableZoneLayouts', array(), $this->initializer5527874b59032071171921);
        return $this->valueHolder5527874b59032552829696->getAvailableZoneLayouts();
    }
    public function getBlockDefinition()
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'getBlockDefinition', array(), $this->initializer5527874b59032071171921);
        return $this->valueHolder5527874b59032552829696->getBlockDefinition();
    }
    public function getBlockDefinitionByIdentifier($blockIdentifier)
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'getBlockDefinitionByIdentifier', array('blockIdentifier' => $blockIdentifier), $this->initializer5527874b59032071171921);
        return $this->valueHolder5527874b59032552829696->getBlockDefinitionByIdentifier($blockIdentifier);
    }
    public function hasBlockDefinition($blockIdentifier)
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'hasBlockDefinition', array('blockIdentifier' => $blockIdentifier), $this->initializer5527874b59032071171921);
        return $this->valueHolder5527874b59032552829696->hasBlockDefinition($blockIdentifier);
    }
    public function setStorageGateway(\eZ\Publish\Core\FieldType\Page\PageStorage\Gateway $storageGateway)
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'setStorageGateway', array('storageGateway' => $storageGateway), $this->initializer5527874b59032071171921);
        return $this->valueHolder5527874b59032552829696->setStorageGateway($storageGateway);
    }
    public function hasStorageGateway()
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'hasStorageGateway', array(), $this->initializer5527874b59032071171921);
        return $this->valueHolder5527874b59032552829696->hasStorageGateway();
    }
    public function getValidBlockItems(\eZ\Publish\Core\FieldType\Page\Parts\Block $block)
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'getValidBlockItems', array('block' => $block), $this->initializer5527874b59032071171921);
        return $this->valueHolder5527874b59032552829696->getValidBlockItems($block);
    }
    public function getLastValidBlockItem(\eZ\Publish\Core\FieldType\Page\Parts\Block $block)
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'getLastValidBlockItem', array('block' => $block), $this->initializer5527874b59032071171921);
        return $this->valueHolder5527874b59032552829696->getLastValidBlockItem($block);
    }
    public function getWaitingBlockItems(\eZ\Publish\Core\FieldType\Page\Parts\Block $block)
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'getWaitingBlockItems', array('block' => $block), $this->initializer5527874b59032071171921);
        return $this->valueHolder5527874b59032552829696->getWaitingBlockItems($block);
    }
    public function getArchivedBlockItems(\eZ\Publish\Core\FieldType\Page\Parts\Block $block)
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'getArchivedBlockItems', array('block' => $block), $this->initializer5527874b59032071171921);
        return $this->valueHolder5527874b59032552829696->getArchivedBlockItems($block);
    }
    public function loadBlock($id)
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'loadBlock', array('id' => $id), $this->initializer5527874b59032071171921);
        return $this->valueHolder5527874b59032552829696->loadBlock($id);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b59032071171921 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, '__get', array('name' => $name), $this->initializer5527874b59032071171921);
        if (isset(self::$publicProperties5527874b59030221383327[$name])) {
            return $this->valueHolder5527874b59032552829696->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b59032552829696;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b59032552829696;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b59032071171921);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b59032552829696;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b59032552829696;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, '__isset', array('name' => $name), $this->initializer5527874b59032071171921);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b59032552829696;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b59032552829696;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, '__unset', array('name' => $name), $this->initializer5527874b59032071171921);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b59032552829696;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b59032552829696;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, '__clone', array(), $this->initializer5527874b59032071171921);
        $this->valueHolder5527874b59032552829696 = clone $this->valueHolder5527874b59032552829696;
    }
    public function __sleep()
    {
        $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, '__sleep', array(), $this->initializer5527874b59032071171921);
        return array('valueHolder5527874b59032552829696');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b59032071171921 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b59032071171921;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b59032071171921 && $this->initializer5527874b59032071171921->__invoke($this->valueHolder5527874b59032552829696, $this, 'initializeProxy', array(), $this->initializer5527874b59032071171921);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b59032552829696;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b59032552829696;
    }
}
class eZPublishCoreFieldTypeImageIOLegacy_000000002343b564000000006a1c264a extends \eZ\Publish\Core\FieldType\Image\IO\Legacy implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b5d905738658439 = null;
    private $initializer5527874b5d91a963502640 = null;
    private static $publicProperties5527874b5d8d2527553360 = array();
    public function setPrefix($prefix)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, 'setPrefix', array('prefix' => $prefix), $this->initializer5527874b5d91a963502640);
        return $this->valueHolder5527874b5d905738658439->setPrefix($prefix);
    }
    public function getExternalPath($internalId)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, 'getExternalPath', array('internalId' => $internalId), $this->initializer5527874b5d91a963502640);
        return $this->valueHolder5527874b5d905738658439->getExternalPath($internalId);
    }
    public function newBinaryCreateStructFromLocalFile($localFile)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, 'newBinaryCreateStructFromLocalFile', array('localFile' => $localFile), $this->initializer5527874b5d91a963502640);
        return $this->valueHolder5527874b5d905738658439->newBinaryCreateStructFromLocalFile($localFile);
    }
    public function exists($binaryFileId)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, 'exists', array('binaryFileId' => $binaryFileId), $this->initializer5527874b5d91a963502640);
        return $this->valueHolder5527874b5d905738658439->exists($binaryFileId);
    }
    public function getInternalPath($externalId)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, 'getInternalPath', array('externalId' => $externalId), $this->initializer5527874b5d91a963502640);
        return $this->valueHolder5527874b5d905738658439->getInternalPath($externalId);
    }
    public function loadBinaryFile($binaryFileId)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, 'loadBinaryFile', array('binaryFileId' => $binaryFileId), $this->initializer5527874b5d91a963502640);
        return $this->valueHolder5527874b5d905738658439->loadBinaryFile($binaryFileId);
    }
    public function loadBinaryFileByUri($binaryFileUri)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, 'loadBinaryFileByUri', array('binaryFileUri' => $binaryFileUri), $this->initializer5527874b5d91a963502640);
        return $this->valueHolder5527874b5d905738658439->loadBinaryFileByUri($binaryFileUri);
    }
    public function getFileContents(\eZ\Publish\Core\IO\Values\BinaryFile $binaryFile)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, 'getFileContents', array('binaryFile' => $binaryFile), $this->initializer5527874b5d91a963502640);
        return $this->valueHolder5527874b5d905738658439->getFileContents($binaryFile);
    }
    public function createBinaryFile(\eZ\Publish\Core\IO\Values\BinaryFileCreateStruct $binaryFileCreateStruct)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, 'createBinaryFile', array('binaryFileCreateStruct' => $binaryFileCreateStruct), $this->initializer5527874b5d91a963502640);
        return $this->valueHolder5527874b5d905738658439->createBinaryFile($binaryFileCreateStruct);
    }
    public function getUri($binaryFileId)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, 'getUri', array('binaryFileId' => $binaryFileId), $this->initializer5527874b5d91a963502640);
        return $this->valueHolder5527874b5d905738658439->getUri($binaryFileId);
    }
    public function getMimeType($binaryFileId)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, 'getMimeType', array('binaryFileId' => $binaryFileId), $this->initializer5527874b5d91a963502640);
        return $this->valueHolder5527874b5d905738658439->getMimeType($binaryFileId);
    }
    public function getFileInputStream(\eZ\Publish\Core\IO\Values\BinaryFile $binaryFile)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, 'getFileInputStream', array('binaryFile' => $binaryFile), $this->initializer5527874b5d91a963502640);
        return $this->valueHolder5527874b5d905738658439->getFileInputStream($binaryFile);
    }
    public function deleteBinaryFile(\eZ\Publish\Core\IO\Values\BinaryFile $binaryFile)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, 'deleteBinaryFile', array('binaryFile' => $binaryFile), $this->initializer5527874b5d91a963502640);
        return $this->valueHolder5527874b5d905738658439->deleteBinaryFile($binaryFile);
    }
    public function newBinaryCreateStructFromUploadedFile(array $uploadedFile)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, 'newBinaryCreateStructFromUploadedFile', array('uploadedFile' => $uploadedFile), $this->initializer5527874b5d91a963502640);
        return $this->valueHolder5527874b5d905738658439->newBinaryCreateStructFromUploadedFile($uploadedFile);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b5d91a963502640 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, '__get', array('name' => $name), $this->initializer5527874b5d91a963502640);
        if (isset(self::$publicProperties5527874b5d8d2527553360[$name])) {
            return $this->valueHolder5527874b5d905738658439->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b5d905738658439;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b5d905738658439;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b5d91a963502640);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b5d905738658439;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b5d905738658439;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, '__isset', array('name' => $name), $this->initializer5527874b5d91a963502640);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b5d905738658439;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b5d905738658439;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, '__unset', array('name' => $name), $this->initializer5527874b5d91a963502640);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b5d905738658439;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b5d905738658439;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, '__clone', array(), $this->initializer5527874b5d91a963502640);
        $this->valueHolder5527874b5d905738658439 = clone $this->valueHolder5527874b5d905738658439;
    }
    public function __sleep()
    {
        $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, '__sleep', array(), $this->initializer5527874b5d91a963502640);
        return array('valueHolder5527874b5d905738658439');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b5d91a963502640 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b5d91a963502640;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b5d91a963502640 && $this->initializer5527874b5d91a963502640->__invoke($this->valueHolder5527874b5d905738658439, $this, 'initializeProxy', array(), $this->initializer5527874b5d91a963502640);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b5d905738658439;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b5d905738658439;
    }
}
class eZPublishCoreIOTolerantIOService_000000002343b784000000006a1c264a extends \eZ\Publish\Core\IO\TolerantIOService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b5f3b7816563097 = null;
    private $initializer5527874b5f3da882729730 = null;
    private static $publicProperties5527874b5f379023449743 = array();
    public function setLogger(\Psr\Log\LoggerInterface $logger = null)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, 'setLogger', array('logger' => $logger), $this->initializer5527874b5f3da882729730);
        return $this->valueHolder5527874b5f3b7816563097->setLogger($logger);
    }
    public function deleteBinaryFile(\eZ\Publish\Core\IO\Values\BinaryFile $binaryFile)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, 'deleteBinaryFile', array('binaryFile' => $binaryFile), $this->initializer5527874b5f3da882729730);
        return $this->valueHolder5527874b5f3b7816563097->deleteBinaryFile($binaryFile);
    }
    public function loadBinaryFile($binaryFileId)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, 'loadBinaryFile', array('binaryFileId' => $binaryFileId), $this->initializer5527874b5f3da882729730);
        return $this->valueHolder5527874b5f3b7816563097->loadBinaryFile($binaryFileId);
    }
    public function loadBinaryFileByUri($binaryFileUri)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, 'loadBinaryFileByUri', array('binaryFileUri' => $binaryFileUri), $this->initializer5527874b5f3da882729730);
        return $this->valueHolder5527874b5f3b7816563097->loadBinaryFileByUri($binaryFileUri);
    }
    public function setPrefix($prefix)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, 'setPrefix', array('prefix' => $prefix), $this->initializer5527874b5f3da882729730);
        return $this->valueHolder5527874b5f3b7816563097->setPrefix($prefix);
    }
    public function newBinaryCreateStructFromUploadedFile(array $uploadedFile)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, 'newBinaryCreateStructFromUploadedFile', array('uploadedFile' => $uploadedFile), $this->initializer5527874b5f3da882729730);
        return $this->valueHolder5527874b5f3b7816563097->newBinaryCreateStructFromUploadedFile($uploadedFile);
    }
    public function newBinaryCreateStructFromLocalFile($localFile)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, 'newBinaryCreateStructFromLocalFile', array('localFile' => $localFile), $this->initializer5527874b5f3da882729730);
        return $this->valueHolder5527874b5f3b7816563097->newBinaryCreateStructFromLocalFile($localFile);
    }
    public function createBinaryFile(\eZ\Publish\Core\IO\Values\BinaryFileCreateStruct $binaryFileCreateStruct)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, 'createBinaryFile', array('binaryFileCreateStruct' => $binaryFileCreateStruct), $this->initializer5527874b5f3da882729730);
        return $this->valueHolder5527874b5f3b7816563097->createBinaryFile($binaryFileCreateStruct);
    }
    public function getFileInputStream(\eZ\Publish\Core\IO\Values\BinaryFile $binaryFile)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, 'getFileInputStream', array('binaryFile' => $binaryFile), $this->initializer5527874b5f3da882729730);
        return $this->valueHolder5527874b5f3b7816563097->getFileInputStream($binaryFile);
    }
    public function getFileContents(\eZ\Publish\Core\IO\Values\BinaryFile $binaryFile)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, 'getFileContents', array('binaryFile' => $binaryFile), $this->initializer5527874b5f3da882729730);
        return $this->valueHolder5527874b5f3b7816563097->getFileContents($binaryFile);
    }
    public function getInternalPath($binaryFileId)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, 'getInternalPath', array('binaryFileId' => $binaryFileId), $this->initializer5527874b5f3da882729730);
        return $this->valueHolder5527874b5f3b7816563097->getInternalPath($binaryFileId);
    }
    public function getExternalPath($internalId)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, 'getExternalPath', array('internalId' => $internalId), $this->initializer5527874b5f3da882729730);
        return $this->valueHolder5527874b5f3b7816563097->getExternalPath($internalId);
    }
    public function getUri($binaryFileId)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, 'getUri', array('binaryFileId' => $binaryFileId), $this->initializer5527874b5f3da882729730);
        return $this->valueHolder5527874b5f3b7816563097->getUri($binaryFileId);
    }
    public function getMimeType($binaryFileId)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, 'getMimeType', array('binaryFileId' => $binaryFileId), $this->initializer5527874b5f3da882729730);
        return $this->valueHolder5527874b5f3b7816563097->getMimeType($binaryFileId);
    }
    public function exists($binaryFileId)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, 'exists', array('binaryFileId' => $binaryFileId), $this->initializer5527874b5f3da882729730);
        return $this->valueHolder5527874b5f3b7816563097->exists($binaryFileId);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b5f3da882729730 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, '__get', array('name' => $name), $this->initializer5527874b5f3da882729730);
        if (isset(self::$publicProperties5527874b5f379023449743[$name])) {
            return $this->valueHolder5527874b5f3b7816563097->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b5f3b7816563097;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b5f3b7816563097;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b5f3da882729730);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b5f3b7816563097;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b5f3b7816563097;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, '__isset', array('name' => $name), $this->initializer5527874b5f3da882729730);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b5f3b7816563097;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b5f3b7816563097;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, '__unset', array('name' => $name), $this->initializer5527874b5f3da882729730);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b5f3b7816563097;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b5f3b7816563097;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, '__clone', array(), $this->initializer5527874b5f3da882729730);
        $this->valueHolder5527874b5f3b7816563097 = clone $this->valueHolder5527874b5f3b7816563097;
    }
    public function __sleep()
    {
        $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, '__sleep', array(), $this->initializer5527874b5f3da882729730);
        return array('valueHolder5527874b5f3b7816563097');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b5f3da882729730 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b5f3da882729730;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b5f3da882729730 && $this->initializer5527874b5f3da882729730->__invoke($this->valueHolder5527874b5f3b7816563097, $this, 'initializeProxy', array(), $this->initializer5527874b5f3da882729730);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b5f3b7816563097;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b5f3b7816563097;
    }
}
class eZPublishCoreIOTolerantIOService_000000002343b56e000000006a1c264a extends \eZ\Publish\Core\IO\TolerantIOService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b63448655236493 = null;
    private $initializer5527874b6345e092198670 = null;
    private static $publicProperties5527874b63415123947709 = array();
    public function setLogger(\Psr\Log\LoggerInterface $logger = null)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, 'setLogger', array('logger' => $logger), $this->initializer5527874b6345e092198670);
        return $this->valueHolder5527874b63448655236493->setLogger($logger);
    }
    public function deleteBinaryFile(\eZ\Publish\Core\IO\Values\BinaryFile $binaryFile)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, 'deleteBinaryFile', array('binaryFile' => $binaryFile), $this->initializer5527874b6345e092198670);
        return $this->valueHolder5527874b63448655236493->deleteBinaryFile($binaryFile);
    }
    public function loadBinaryFile($binaryFileId)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, 'loadBinaryFile', array('binaryFileId' => $binaryFileId), $this->initializer5527874b6345e092198670);
        return $this->valueHolder5527874b63448655236493->loadBinaryFile($binaryFileId);
    }
    public function loadBinaryFileByUri($binaryFileUri)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, 'loadBinaryFileByUri', array('binaryFileUri' => $binaryFileUri), $this->initializer5527874b6345e092198670);
        return $this->valueHolder5527874b63448655236493->loadBinaryFileByUri($binaryFileUri);
    }
    public function setPrefix($prefix)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, 'setPrefix', array('prefix' => $prefix), $this->initializer5527874b6345e092198670);
        return $this->valueHolder5527874b63448655236493->setPrefix($prefix);
    }
    public function newBinaryCreateStructFromUploadedFile(array $uploadedFile)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, 'newBinaryCreateStructFromUploadedFile', array('uploadedFile' => $uploadedFile), $this->initializer5527874b6345e092198670);
        return $this->valueHolder5527874b63448655236493->newBinaryCreateStructFromUploadedFile($uploadedFile);
    }
    public function newBinaryCreateStructFromLocalFile($localFile)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, 'newBinaryCreateStructFromLocalFile', array('localFile' => $localFile), $this->initializer5527874b6345e092198670);
        return $this->valueHolder5527874b63448655236493->newBinaryCreateStructFromLocalFile($localFile);
    }
    public function createBinaryFile(\eZ\Publish\Core\IO\Values\BinaryFileCreateStruct $binaryFileCreateStruct)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, 'createBinaryFile', array('binaryFileCreateStruct' => $binaryFileCreateStruct), $this->initializer5527874b6345e092198670);
        return $this->valueHolder5527874b63448655236493->createBinaryFile($binaryFileCreateStruct);
    }
    public function getFileInputStream(\eZ\Publish\Core\IO\Values\BinaryFile $binaryFile)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, 'getFileInputStream', array('binaryFile' => $binaryFile), $this->initializer5527874b6345e092198670);
        return $this->valueHolder5527874b63448655236493->getFileInputStream($binaryFile);
    }
    public function getFileContents(\eZ\Publish\Core\IO\Values\BinaryFile $binaryFile)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, 'getFileContents', array('binaryFile' => $binaryFile), $this->initializer5527874b6345e092198670);
        return $this->valueHolder5527874b63448655236493->getFileContents($binaryFile);
    }
    public function getInternalPath($binaryFileId)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, 'getInternalPath', array('binaryFileId' => $binaryFileId), $this->initializer5527874b6345e092198670);
        return $this->valueHolder5527874b63448655236493->getInternalPath($binaryFileId);
    }
    public function getExternalPath($internalId)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, 'getExternalPath', array('internalId' => $internalId), $this->initializer5527874b6345e092198670);
        return $this->valueHolder5527874b63448655236493->getExternalPath($internalId);
    }
    public function getUri($binaryFileId)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, 'getUri', array('binaryFileId' => $binaryFileId), $this->initializer5527874b6345e092198670);
        return $this->valueHolder5527874b63448655236493->getUri($binaryFileId);
    }
    public function getMimeType($binaryFileId)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, 'getMimeType', array('binaryFileId' => $binaryFileId), $this->initializer5527874b6345e092198670);
        return $this->valueHolder5527874b63448655236493->getMimeType($binaryFileId);
    }
    public function exists($binaryFileId)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, 'exists', array('binaryFileId' => $binaryFileId), $this->initializer5527874b6345e092198670);
        return $this->valueHolder5527874b63448655236493->exists($binaryFileId);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b6345e092198670 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, '__get', array('name' => $name), $this->initializer5527874b6345e092198670);
        if (isset(self::$publicProperties5527874b63415123947709[$name])) {
            return $this->valueHolder5527874b63448655236493->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b63448655236493;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b63448655236493;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b6345e092198670);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b63448655236493;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b63448655236493;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, '__isset', array('name' => $name), $this->initializer5527874b6345e092198670);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b63448655236493;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b63448655236493;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, '__unset', array('name' => $name), $this->initializer5527874b6345e092198670);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b63448655236493;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b63448655236493;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, '__clone', array(), $this->initializer5527874b6345e092198670);
        $this->valueHolder5527874b63448655236493 = clone $this->valueHolder5527874b63448655236493;
    }
    public function __sleep()
    {
        $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, '__sleep', array(), $this->initializer5527874b6345e092198670);
        return array('valueHolder5527874b63448655236493');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b6345e092198670 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b6345e092198670;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b6345e092198670 && $this->initializer5527874b6345e092198670->__invoke($this->valueHolder5527874b63448655236493, $this, 'initializeProxy', array(), $this->initializer5527874b6345e092198670);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b63448655236493;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b63448655236493;
    }
}
class eZPublishCoreIOTolerantIOService_000000002343b56c000000006a1c264a extends \eZ\Publish\Core\IO\TolerantIOService implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b674d7011030218 = null;
    private $initializer5527874b674ec413862107 = null;
    private static $publicProperties5527874b674a5244793344 = array();
    public function setLogger(\Psr\Log\LoggerInterface $logger = null)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, 'setLogger', array('logger' => $logger), $this->initializer5527874b674ec413862107);
        return $this->valueHolder5527874b674d7011030218->setLogger($logger);
    }
    public function deleteBinaryFile(\eZ\Publish\Core\IO\Values\BinaryFile $binaryFile)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, 'deleteBinaryFile', array('binaryFile' => $binaryFile), $this->initializer5527874b674ec413862107);
        return $this->valueHolder5527874b674d7011030218->deleteBinaryFile($binaryFile);
    }
    public function loadBinaryFile($binaryFileId)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, 'loadBinaryFile', array('binaryFileId' => $binaryFileId), $this->initializer5527874b674ec413862107);
        return $this->valueHolder5527874b674d7011030218->loadBinaryFile($binaryFileId);
    }
    public function loadBinaryFileByUri($binaryFileUri)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, 'loadBinaryFileByUri', array('binaryFileUri' => $binaryFileUri), $this->initializer5527874b674ec413862107);
        return $this->valueHolder5527874b674d7011030218->loadBinaryFileByUri($binaryFileUri);
    }
    public function setPrefix($prefix)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, 'setPrefix', array('prefix' => $prefix), $this->initializer5527874b674ec413862107);
        return $this->valueHolder5527874b674d7011030218->setPrefix($prefix);
    }
    public function newBinaryCreateStructFromUploadedFile(array $uploadedFile)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, 'newBinaryCreateStructFromUploadedFile', array('uploadedFile' => $uploadedFile), $this->initializer5527874b674ec413862107);
        return $this->valueHolder5527874b674d7011030218->newBinaryCreateStructFromUploadedFile($uploadedFile);
    }
    public function newBinaryCreateStructFromLocalFile($localFile)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, 'newBinaryCreateStructFromLocalFile', array('localFile' => $localFile), $this->initializer5527874b674ec413862107);
        return $this->valueHolder5527874b674d7011030218->newBinaryCreateStructFromLocalFile($localFile);
    }
    public function createBinaryFile(\eZ\Publish\Core\IO\Values\BinaryFileCreateStruct $binaryFileCreateStruct)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, 'createBinaryFile', array('binaryFileCreateStruct' => $binaryFileCreateStruct), $this->initializer5527874b674ec413862107);
        return $this->valueHolder5527874b674d7011030218->createBinaryFile($binaryFileCreateStruct);
    }
    public function getFileInputStream(\eZ\Publish\Core\IO\Values\BinaryFile $binaryFile)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, 'getFileInputStream', array('binaryFile' => $binaryFile), $this->initializer5527874b674ec413862107);
        return $this->valueHolder5527874b674d7011030218->getFileInputStream($binaryFile);
    }
    public function getFileContents(\eZ\Publish\Core\IO\Values\BinaryFile $binaryFile)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, 'getFileContents', array('binaryFile' => $binaryFile), $this->initializer5527874b674ec413862107);
        return $this->valueHolder5527874b674d7011030218->getFileContents($binaryFile);
    }
    public function getInternalPath($binaryFileId)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, 'getInternalPath', array('binaryFileId' => $binaryFileId), $this->initializer5527874b674ec413862107);
        return $this->valueHolder5527874b674d7011030218->getInternalPath($binaryFileId);
    }
    public function getExternalPath($internalId)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, 'getExternalPath', array('internalId' => $internalId), $this->initializer5527874b674ec413862107);
        return $this->valueHolder5527874b674d7011030218->getExternalPath($internalId);
    }
    public function getUri($binaryFileId)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, 'getUri', array('binaryFileId' => $binaryFileId), $this->initializer5527874b674ec413862107);
        return $this->valueHolder5527874b674d7011030218->getUri($binaryFileId);
    }
    public function getMimeType($binaryFileId)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, 'getMimeType', array('binaryFileId' => $binaryFileId), $this->initializer5527874b674ec413862107);
        return $this->valueHolder5527874b674d7011030218->getMimeType($binaryFileId);
    }
    public function exists($binaryFileId)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, 'exists', array('binaryFileId' => $binaryFileId), $this->initializer5527874b674ec413862107);
        return $this->valueHolder5527874b674d7011030218->exists($binaryFileId);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b674ec413862107 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, '__get', array('name' => $name), $this->initializer5527874b674ec413862107);
        if (isset(self::$publicProperties5527874b674a5244793344[$name])) {
            return $this->valueHolder5527874b674d7011030218->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b674d7011030218;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b674d7011030218;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b674ec413862107);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b674d7011030218;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b674d7011030218;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, '__isset', array('name' => $name), $this->initializer5527874b674ec413862107);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b674d7011030218;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b674d7011030218;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, '__unset', array('name' => $name), $this->initializer5527874b674ec413862107);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b674d7011030218;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b674d7011030218;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, '__clone', array(), $this->initializer5527874b674ec413862107);
        $this->valueHolder5527874b674d7011030218 = clone $this->valueHolder5527874b674d7011030218;
    }
    public function __sleep()
    {
        $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, '__sleep', array(), $this->initializer5527874b674ec413862107);
        return array('valueHolder5527874b674d7011030218');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b674ec413862107 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b674ec413862107;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b674ec413862107 && $this->initializer5527874b674ec413862107->__invoke($this->valueHolder5527874b674d7011030218, $this, 'initializeProxy', array(), $this->initializer5527874b674ec413862107);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b674d7011030218;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b674d7011030218;
    }
}
class eZBundleEzPublishCoreBundleImagineAliasCleaner_000000002343b528000000006a1c264a extends \eZ\Bundle\EzPublishCoreBundle\Imagine\AliasCleaner implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b6b400873758833 = null;
    private $initializer5527874b6b415746527586 = null;
    private static $publicProperties5527874b6b3d1565492630 = array();
    public function removeAliases($originalPath)
    {
        $this->initializer5527874b6b415746527586 && $this->initializer5527874b6b415746527586->__invoke($this->valueHolder5527874b6b400873758833, $this, 'removeAliases', array('originalPath' => $originalPath), $this->initializer5527874b6b415746527586);
        return $this->valueHolder5527874b6b400873758833->removeAliases($originalPath);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b6b415746527586 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b6b415746527586 && $this->initializer5527874b6b415746527586->__invoke($this->valueHolder5527874b6b400873758833, $this, '__get', array('name' => $name), $this->initializer5527874b6b415746527586);
        if (isset(self::$publicProperties5527874b6b3d1565492630[$name])) {
            return $this->valueHolder5527874b6b400873758833->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b6b400873758833;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b6b400873758833;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b6b415746527586 && $this->initializer5527874b6b415746527586->__invoke($this->valueHolder5527874b6b400873758833, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b6b415746527586);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b6b400873758833;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b6b400873758833;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b6b415746527586 && $this->initializer5527874b6b415746527586->__invoke($this->valueHolder5527874b6b400873758833, $this, '__isset', array('name' => $name), $this->initializer5527874b6b415746527586);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b6b400873758833;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b6b400873758833;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b6b415746527586 && $this->initializer5527874b6b415746527586->__invoke($this->valueHolder5527874b6b400873758833, $this, '__unset', array('name' => $name), $this->initializer5527874b6b415746527586);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b6b400873758833;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b6b400873758833;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b6b415746527586 && $this->initializer5527874b6b415746527586->__invoke($this->valueHolder5527874b6b400873758833, $this, '__clone', array(), $this->initializer5527874b6b415746527586);
        $this->valueHolder5527874b6b400873758833 = clone $this->valueHolder5527874b6b400873758833;
    }
    public function __sleep()
    {
        $this->initializer5527874b6b415746527586 && $this->initializer5527874b6b415746527586->__invoke($this->valueHolder5527874b6b400873758833, $this, '__sleep', array(), $this->initializer5527874b6b415746527586);
        return array('valueHolder5527874b6b400873758833');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b6b415746527586 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b6b415746527586;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b6b415746527586 && $this->initializer5527874b6b415746527586->__invoke($this->valueHolder5527874b6b400873758833, $this, 'initializeProxy', array(), $this->initializer5527874b6b415746527586);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b6b400873758833;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b6b400873758833;
    }
}
class eZBundleEzPublishLegacyBundleRoutingFallbackRouter_000000002343b433000000006a1c264a extends \eZ\Bundle\EzPublishLegacyBundle\Routing\FallbackRouter implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b6b8de664596756 = null;
    private $initializer5527874b6b8fa641468709 = null;
    private static $publicProperties5527874b6b8a9291231039 = array();
    public function setContext(\Symfony\Component\Routing\RequestContext $context)
    {
        $this->initializer5527874b6b8fa641468709 && $this->initializer5527874b6b8fa641468709->__invoke($this->valueHolder5527874b6b8de664596756, $this, 'setContext', array('context' => $context), $this->initializer5527874b6b8fa641468709);
        return $this->valueHolder5527874b6b8de664596756->setContext($context);
    }
    public function getContext()
    {
        $this->initializer5527874b6b8fa641468709 && $this->initializer5527874b6b8fa641468709->__invoke($this->valueHolder5527874b6b8de664596756, $this, 'getContext', array(), $this->initializer5527874b6b8fa641468709);
        return $this->valueHolder5527874b6b8de664596756->getContext();
    }
    public function getRouteCollection()
    {
        $this->initializer5527874b6b8fa641468709 && $this->initializer5527874b6b8fa641468709->__invoke($this->valueHolder5527874b6b8de664596756, $this, 'getRouteCollection', array(), $this->initializer5527874b6b8fa641468709);
        return $this->valueHolder5527874b6b8de664596756->getRouteCollection();
    }
    public function generate($name, $parameters = array(), $absolute = false)
    {
        $this->initializer5527874b6b8fa641468709 && $this->initializer5527874b6b8fa641468709->__invoke($this->valueHolder5527874b6b8de664596756, $this, 'generate', array('name' => $name, 'parameters' => $parameters, 'absolute' => $absolute), $this->initializer5527874b6b8fa641468709);
        return $this->valueHolder5527874b6b8de664596756->generate($name, $parameters, $absolute);
    }
    public function match($pathinfo)
    {
        $this->initializer5527874b6b8fa641468709 && $this->initializer5527874b6b8fa641468709->__invoke($this->valueHolder5527874b6b8de664596756, $this, 'match', array('pathinfo' => $pathinfo), $this->initializer5527874b6b8fa641468709);
        return $this->valueHolder5527874b6b8de664596756->match($pathinfo);
    }
    public function matchRequest(\Symfony\Component\HttpFoundation\Request $request)
    {
        $this->initializer5527874b6b8fa641468709 && $this->initializer5527874b6b8fa641468709->__invoke($this->valueHolder5527874b6b8de664596756, $this, 'matchRequest', array('request' => $request), $this->initializer5527874b6b8fa641468709);
        return $this->valueHolder5527874b6b8de664596756->matchRequest($request);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b6b8fa641468709 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b6b8fa641468709 && $this->initializer5527874b6b8fa641468709->__invoke($this->valueHolder5527874b6b8de664596756, $this, '__get', array('name' => $name), $this->initializer5527874b6b8fa641468709);
        if (isset(self::$publicProperties5527874b6b8a9291231039[$name])) {
            return $this->valueHolder5527874b6b8de664596756->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b6b8de664596756;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b6b8de664596756;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b6b8fa641468709 && $this->initializer5527874b6b8fa641468709->__invoke($this->valueHolder5527874b6b8de664596756, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b6b8fa641468709);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b6b8de664596756;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b6b8de664596756;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b6b8fa641468709 && $this->initializer5527874b6b8fa641468709->__invoke($this->valueHolder5527874b6b8de664596756, $this, '__isset', array('name' => $name), $this->initializer5527874b6b8fa641468709);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b6b8de664596756;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b6b8de664596756;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b6b8fa641468709 && $this->initializer5527874b6b8fa641468709->__invoke($this->valueHolder5527874b6b8de664596756, $this, '__unset', array('name' => $name), $this->initializer5527874b6b8fa641468709);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b6b8de664596756;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b6b8de664596756;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b6b8fa641468709 && $this->initializer5527874b6b8fa641468709->__invoke($this->valueHolder5527874b6b8de664596756, $this, '__clone', array(), $this->initializer5527874b6b8fa641468709);
        $this->valueHolder5527874b6b8de664596756 = clone $this->valueHolder5527874b6b8de664596756;
    }
    public function __sleep()
    {
        $this->initializer5527874b6b8fa641468709 && $this->initializer5527874b6b8fa641468709->__invoke($this->valueHolder5527874b6b8de664596756, $this, '__sleep', array(), $this->initializer5527874b6b8fa641468709);
        return array('valueHolder5527874b6b8de664596756');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b6b8fa641468709 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b6b8fa641468709;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b6b8fa641468709 && $this->initializer5527874b6b8fa641468709->__invoke($this->valueHolder5527874b6b8de664596756, $this, 'initializeProxy', array(), $this->initializer5527874b6b8fa641468709);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b6b8de664596756;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b6b8de664596756;
    }
}
class eZBundleEzPublishLegacyBundleCachePersistenceCachePurger_000000002343b438000000006a1c264a extends \eZ\Bundle\EzPublishLegacyBundle\Cache\PersistenceCachePurger implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b6e100487847630 = null;
    private $initializer5527874b6e115935659829 = null;
    private static $publicProperties5527874b6e0cd739509038 = array();
    public function all()
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, 'all', array(), $this->initializer5527874b6e115935659829);
        return $this->valueHolder5527874b6e100487847630->all();
    }
    public function isAllCleared()
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, 'isAllCleared', array(), $this->initializer5527874b6e115935659829);
        return $this->valueHolder5527874b6e100487847630->isAllCleared();
    }
    public function resetAllCleared()
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, 'resetAllCleared', array(), $this->initializer5527874b6e115935659829);
        return $this->valueHolder5527874b6e100487847630->resetAllCleared();
    }
    public function setEnabled($isEnabled)
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, 'setEnabled', array('isEnabled' => $isEnabled), $this->initializer5527874b6e115935659829);
        return $this->valueHolder5527874b6e100487847630->setEnabled($isEnabled);
    }
    public function isEnabled()
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, 'isEnabled', array(), $this->initializer5527874b6e115935659829);
        return $this->valueHolder5527874b6e100487847630->isEnabled();
    }
    public function content($locationIds = null)
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, 'content', array('locationIds' => $locationIds), $this->initializer5527874b6e115935659829);
        return $this->valueHolder5527874b6e100487847630->content($locationIds);
    }
    public function contentType($id = null)
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, 'contentType', array('id' => $id), $this->initializer5527874b6e115935659829);
        return $this->valueHolder5527874b6e100487847630->contentType($id);
    }
    public function contentTypeGroup($id = null)
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, 'contentTypeGroup', array('id' => $id), $this->initializer5527874b6e115935659829);
        return $this->valueHolder5527874b6e100487847630->contentTypeGroup($id);
    }
    public function section($id = null)
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, 'section', array('id' => $id), $this->initializer5527874b6e115935659829);
        return $this->valueHolder5527874b6e100487847630->section($id);
    }
    public function languages($ids)
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, 'languages', array('ids' => $ids), $this->initializer5527874b6e115935659829);
        return $this->valueHolder5527874b6e100487847630->languages($ids);
    }
    public function user($id = null)
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, 'user', array('id' => $id), $this->initializer5527874b6e115935659829);
        return $this->valueHolder5527874b6e100487847630->user($id);
    }
    public function clear($cacheDir)
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, 'clear', array('cacheDir' => $cacheDir), $this->initializer5527874b6e115935659829);
        return $this->valueHolder5527874b6e100487847630->clear($cacheDir);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b6e115935659829 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, '__get', array('name' => $name), $this->initializer5527874b6e115935659829);
        if (isset(self::$publicProperties5527874b6e0cd739509038[$name])) {
            return $this->valueHolder5527874b6e100487847630->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b6e100487847630;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b6e100487847630;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b6e115935659829);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b6e100487847630;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b6e100487847630;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, '__isset', array('name' => $name), $this->initializer5527874b6e115935659829);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b6e100487847630;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b6e100487847630;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, '__unset', array('name' => $name), $this->initializer5527874b6e115935659829);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b6e100487847630;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b6e100487847630;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, '__clone', array(), $this->initializer5527874b6e115935659829);
        $this->valueHolder5527874b6e100487847630 = clone $this->valueHolder5527874b6e100487847630;
    }
    public function __sleep()
    {
        $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, '__sleep', array(), $this->initializer5527874b6e115935659829);
        return array('valueHolder5527874b6e100487847630');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b6e115935659829 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b6e115935659829;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b6e115935659829 && $this->initializer5527874b6e115935659829->__invoke($this->valueHolder5527874b6e100487847630, $this, 'initializeProxy', array(), $this->initializer5527874b6e115935659829);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b6e100487847630;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b6e100487847630;
    }
}
class eZBundleEzPublishLegacyBundleDependencyInjectionConfigurationLegacyConfigResolver_000000002343b325000000006a1c264a extends \eZ\Bundle\EzPublishLegacyBundle\DependencyInjection\Configuration\LegacyConfigResolver implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b713b8097130831 = null;
    private $initializer5527874b713cc914556709 = null;
    private static $publicProperties5527874b71389625707201 = array();
    public function getParameter($paramName, $namespace = null, $scope = null)
    {
        $this->initializer5527874b713cc914556709 && $this->initializer5527874b713cc914556709->__invoke($this->valueHolder5527874b713b8097130831, $this, 'getParameter', array('paramName' => $paramName, 'namespace' => $namespace, 'scope' => $scope), $this->initializer5527874b713cc914556709);
        return $this->valueHolder5527874b713b8097130831->getParameter($paramName, $namespace, $scope);
    }
    public function getGroup($groupName, $namespace = null, $scope = null)
    {
        $this->initializer5527874b713cc914556709 && $this->initializer5527874b713cc914556709->__invoke($this->valueHolder5527874b713b8097130831, $this, 'getGroup', array('groupName' => $groupName, 'namespace' => $namespace, 'scope' => $scope), $this->initializer5527874b713cc914556709);
        return $this->valueHolder5527874b713b8097130831->getGroup($groupName, $namespace, $scope);
    }
    public function hasParameter($paramName, $namespace = null, $scope = null)
    {
        $this->initializer5527874b713cc914556709 && $this->initializer5527874b713cc914556709->__invoke($this->valueHolder5527874b713b8097130831, $this, 'hasParameter', array('paramName' => $paramName, 'namespace' => $namespace, 'scope' => $scope), $this->initializer5527874b713cc914556709);
        return $this->valueHolder5527874b713b8097130831->hasParameter($paramName, $namespace, $scope);
    }
    public function setDefaultNamespace($defaultNamespace)
    {
        $this->initializer5527874b713cc914556709 && $this->initializer5527874b713cc914556709->__invoke($this->valueHolder5527874b713b8097130831, $this, 'setDefaultNamespace', array('defaultNamespace' => $defaultNamespace), $this->initializer5527874b713cc914556709);
        return $this->valueHolder5527874b713b8097130831->setDefaultNamespace($defaultNamespace);
    }
    public function getDefaultNamespace()
    {
        $this->initializer5527874b713cc914556709 && $this->initializer5527874b713cc914556709->__invoke($this->valueHolder5527874b713b8097130831, $this, 'getDefaultNamespace', array(), $this->initializer5527874b713cc914556709);
        return $this->valueHolder5527874b713b8097130831->getDefaultNamespace();
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b713cc914556709 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b713cc914556709 && $this->initializer5527874b713cc914556709->__invoke($this->valueHolder5527874b713b8097130831, $this, '__get', array('name' => $name), $this->initializer5527874b713cc914556709);
        if (isset(self::$publicProperties5527874b71389625707201[$name])) {
            return $this->valueHolder5527874b713b8097130831->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b713b8097130831;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b713b8097130831;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b713cc914556709 && $this->initializer5527874b713cc914556709->__invoke($this->valueHolder5527874b713b8097130831, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b713cc914556709);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b713b8097130831;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b713b8097130831;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b713cc914556709 && $this->initializer5527874b713cc914556709->__invoke($this->valueHolder5527874b713b8097130831, $this, '__isset', array('name' => $name), $this->initializer5527874b713cc914556709);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b713b8097130831;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b713b8097130831;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b713cc914556709 && $this->initializer5527874b713cc914556709->__invoke($this->valueHolder5527874b713b8097130831, $this, '__unset', array('name' => $name), $this->initializer5527874b713cc914556709);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b713b8097130831;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b713b8097130831;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b713cc914556709 && $this->initializer5527874b713cc914556709->__invoke($this->valueHolder5527874b713b8097130831, $this, '__clone', array(), $this->initializer5527874b713cc914556709);
        $this->valueHolder5527874b713b8097130831 = clone $this->valueHolder5527874b713b8097130831;
    }
    public function __sleep()
    {
        $this->initializer5527874b713cc914556709 && $this->initializer5527874b713cc914556709->__invoke($this->valueHolder5527874b713b8097130831, $this, '__sleep', array(), $this->initializer5527874b713cc914556709);
        return array('valueHolder5527874b713b8097130831');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b713cc914556709 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b713cc914556709;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b713cc914556709 && $this->initializer5527874b713cc914556709->__invoke($this->valueHolder5527874b713b8097130831, $this, 'initializeProxy', array(), $this->initializer5527874b713cc914556709);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b713b8097130831;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b713b8097130831;
    }
}
class eZPublishCoreMVCLegacyImageAliasCleaner_000000002343b30d000000006a1c264a extends \eZ\Publish\Core\MVC\Legacy\Image\AliasCleaner implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b73063776254289 = null;
    private $initializer5527874b73076930406608 = null;
    private static $publicProperties5527874b73035081175164 = array();
    public function removeAliases($originalPath)
    {
        $this->initializer5527874b73076930406608 && $this->initializer5527874b73076930406608->__invoke($this->valueHolder5527874b73063776254289, $this, 'removeAliases', array('originalPath' => $originalPath), $this->initializer5527874b73076930406608);
        return $this->valueHolder5527874b73063776254289->removeAliases($originalPath);
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b73076930406608 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b73076930406608 && $this->initializer5527874b73076930406608->__invoke($this->valueHolder5527874b73063776254289, $this, '__get', array('name' => $name), $this->initializer5527874b73076930406608);
        if (isset(self::$publicProperties5527874b73035081175164[$name])) {
            return $this->valueHolder5527874b73063776254289->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b73063776254289;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b73063776254289;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b73076930406608 && $this->initializer5527874b73076930406608->__invoke($this->valueHolder5527874b73063776254289, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b73076930406608);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b73063776254289;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b73063776254289;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b73076930406608 && $this->initializer5527874b73076930406608->__invoke($this->valueHolder5527874b73063776254289, $this, '__isset', array('name' => $name), $this->initializer5527874b73076930406608);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b73063776254289;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b73063776254289;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b73076930406608 && $this->initializer5527874b73076930406608->__invoke($this->valueHolder5527874b73063776254289, $this, '__unset', array('name' => $name), $this->initializer5527874b73076930406608);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b73063776254289;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b73063776254289;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b73076930406608 && $this->initializer5527874b73076930406608->__invoke($this->valueHolder5527874b73063776254289, $this, '__clone', array(), $this->initializer5527874b73076930406608);
        $this->valueHolder5527874b73063776254289 = clone $this->valueHolder5527874b73063776254289;
    }
    public function __sleep()
    {
        $this->initializer5527874b73076930406608 && $this->initializer5527874b73076930406608->__invoke($this->valueHolder5527874b73063776254289, $this, '__sleep', array(), $this->initializer5527874b73076930406608);
        return array('valueHolder5527874b73063776254289');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b73076930406608 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b73076930406608;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b73076930406608 && $this->initializer5527874b73076930406608->__invoke($this->valueHolder5527874b73063776254289, $this, 'initializeProxy', array(), $this->initializer5527874b73076930406608);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b73063776254289;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b73063776254289;
    }
}
class EzSystemsCommentsBundleCommentsProviderDisqus_000000002343b1d3000000006a1c264a extends \EzSystems\CommentsBundle\Comments\Provider\Disqus implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b73732029930437 = null;
    private $initializer5527874b73758033433122 = null;
    private static $publicProperties5527874b736e0425060448 = array();
    public function setShortName($shortName)
    {
        $this->initializer5527874b73758033433122 && $this->initializer5527874b73758033433122->__invoke($this->valueHolder5527874b73732029930437, $this, 'setShortName', array('shortName' => $shortName), $this->initializer5527874b73758033433122);
        return $this->valueHolder5527874b73732029930437->setShortName($shortName);
    }
    public function render(\Symfony\Component\HttpFoundation\Request $request, array $options = array())
    {
        $this->initializer5527874b73758033433122 && $this->initializer5527874b73758033433122->__invoke($this->valueHolder5527874b73732029930437, $this, 'render', array('request' => $request, 'options' => $options), $this->initializer5527874b73758033433122);
        return $this->valueHolder5527874b73732029930437->render($request, $options);
    }
    public function renderForContent(\eZ\Publish\API\Repository\Values\Content\ContentInfo $contentInfo, \Symfony\Component\HttpFoundation\Request $request, array $options = array())
    {
        $this->initializer5527874b73758033433122 && $this->initializer5527874b73758033433122->__invoke($this->valueHolder5527874b73732029930437, $this, 'renderForContent', array('contentInfo' => $contentInfo, 'request' => $request, 'options' => $options), $this->initializer5527874b73758033433122);
        return $this->valueHolder5527874b73732029930437->renderForContent($contentInfo, $request, $options);
    }
    public function setDefaultTemplate($defaultTemplate)
    {
        $this->initializer5527874b73758033433122 && $this->initializer5527874b73758033433122->__invoke($this->valueHolder5527874b73732029930437, $this, 'setDefaultTemplate', array('defaultTemplate' => $defaultTemplate), $this->initializer5527874b73758033433122);
        return $this->valueHolder5527874b73732029930437->setDefaultTemplate($defaultTemplate);
    }
    public function getDefaultTemplate()
    {
        $this->initializer5527874b73758033433122 && $this->initializer5527874b73758033433122->__invoke($this->valueHolder5527874b73732029930437, $this, 'getDefaultTemplate', array(), $this->initializer5527874b73758033433122);
        return $this->valueHolder5527874b73732029930437->getDefaultTemplate();
    }
    public function setTemplateEngine(\Symfony\Component\Templating\EngineInterface $templateEngine)
    {
        $this->initializer5527874b73758033433122 && $this->initializer5527874b73758033433122->__invoke($this->valueHolder5527874b73732029930437, $this, 'setTemplateEngine', array('templateEngine' => $templateEngine), $this->initializer5527874b73758033433122);
        return $this->valueHolder5527874b73732029930437->setTemplateEngine($templateEngine);
    }
    public function getTemplateEngine()
    {
        $this->initializer5527874b73758033433122 && $this->initializer5527874b73758033433122->__invoke($this->valueHolder5527874b73732029930437, $this, 'getTemplateEngine', array(), $this->initializer5527874b73758033433122);
        return $this->valueHolder5527874b73732029930437->getTemplateEngine();
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b73758033433122 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b73758033433122 && $this->initializer5527874b73758033433122->__invoke($this->valueHolder5527874b73732029930437, $this, '__get', array('name' => $name), $this->initializer5527874b73758033433122);
        if (isset(self::$publicProperties5527874b736e0425060448[$name])) {
            return $this->valueHolder5527874b73732029930437->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b73732029930437;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b73732029930437;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b73758033433122 && $this->initializer5527874b73758033433122->__invoke($this->valueHolder5527874b73732029930437, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b73758033433122);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b73732029930437;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b73732029930437;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b73758033433122 && $this->initializer5527874b73758033433122->__invoke($this->valueHolder5527874b73732029930437, $this, '__isset', array('name' => $name), $this->initializer5527874b73758033433122);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b73732029930437;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b73732029930437;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b73758033433122 && $this->initializer5527874b73758033433122->__invoke($this->valueHolder5527874b73732029930437, $this, '__unset', array('name' => $name), $this->initializer5527874b73758033433122);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b73732029930437;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b73732029930437;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b73758033433122 && $this->initializer5527874b73758033433122->__invoke($this->valueHolder5527874b73732029930437, $this, '__clone', array(), $this->initializer5527874b73758033433122);
        $this->valueHolder5527874b73732029930437 = clone $this->valueHolder5527874b73732029930437;
    }
    public function __sleep()
    {
        $this->initializer5527874b73758033433122 && $this->initializer5527874b73758033433122->__invoke($this->valueHolder5527874b73732029930437, $this, '__sleep', array(), $this->initializer5527874b73758033433122);
        return array('valueHolder5527874b73732029930437');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b73758033433122 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b73758033433122;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b73758033433122 && $this->initializer5527874b73758033433122->__invoke($this->valueHolder5527874b73732029930437, $this, 'initializeProxy', array(), $this->initializer5527874b73758033433122);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b73732029930437;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b73732029930437;
    }
}
class EzSystemsCommentsBundleCommentsProviderFacebook_000000002343b0d5000000006a1c264a extends \EzSystems\CommentsBundle\Comments\Provider\Facebook implements \ProxyManager\Proxy\VirtualProxyInterface
{
    private $valueHolder5527874b75261815431285 = null;
    private $initializer5527874b75277970547947 = null;
    private static $publicProperties5527874b7522f373616355 = array();
    public function render(\Symfony\Component\HttpFoundation\Request $request, array $options = array())
    {
        $this->initializer5527874b75277970547947 && $this->initializer5527874b75277970547947->__invoke($this->valueHolder5527874b75261815431285, $this, 'render', array('request' => $request, 'options' => $options), $this->initializer5527874b75277970547947);
        return $this->valueHolder5527874b75261815431285->render($request, $options);
    }
    public function renderForContent(\eZ\Publish\API\Repository\Values\Content\ContentInfo $contentInfo, \Symfony\Component\HttpFoundation\Request $request, array $options = array())
    {
        $this->initializer5527874b75277970547947 && $this->initializer5527874b75277970547947->__invoke($this->valueHolder5527874b75261815431285, $this, 'renderForContent', array('contentInfo' => $contentInfo, 'request' => $request, 'options' => $options), $this->initializer5527874b75277970547947);
        return $this->valueHolder5527874b75261815431285->renderForContent($contentInfo, $request, $options);
    }
    public function setDefaultTemplate($defaultTemplate)
    {
        $this->initializer5527874b75277970547947 && $this->initializer5527874b75277970547947->__invoke($this->valueHolder5527874b75261815431285, $this, 'setDefaultTemplate', array('defaultTemplate' => $defaultTemplate), $this->initializer5527874b75277970547947);
        return $this->valueHolder5527874b75261815431285->setDefaultTemplate($defaultTemplate);
    }
    public function getDefaultTemplate()
    {
        $this->initializer5527874b75277970547947 && $this->initializer5527874b75277970547947->__invoke($this->valueHolder5527874b75261815431285, $this, 'getDefaultTemplate', array(), $this->initializer5527874b75277970547947);
        return $this->valueHolder5527874b75261815431285->getDefaultTemplate();
    }
    public function setTemplateEngine(\Symfony\Component\Templating\EngineInterface $templateEngine)
    {
        $this->initializer5527874b75277970547947 && $this->initializer5527874b75277970547947->__invoke($this->valueHolder5527874b75261815431285, $this, 'setTemplateEngine', array('templateEngine' => $templateEngine), $this->initializer5527874b75277970547947);
        return $this->valueHolder5527874b75261815431285->setTemplateEngine($templateEngine);
    }
    public function getTemplateEngine()
    {
        $this->initializer5527874b75277970547947 && $this->initializer5527874b75277970547947->__invoke($this->valueHolder5527874b75261815431285, $this, 'getTemplateEngine', array(), $this->initializer5527874b75277970547947);
        return $this->valueHolder5527874b75261815431285->getTemplateEngine();
    }
    public function __construct($initializer)
    {
        $this->initializer5527874b75277970547947 = $initializer;
    }
    public function & __get($name)
    {
        $this->initializer5527874b75277970547947 && $this->initializer5527874b75277970547947->__invoke($this->valueHolder5527874b75261815431285, $this, '__get', array('name' => $name), $this->initializer5527874b75277970547947);
        if (isset(self::$publicProperties5527874b7522f373616355[$name])) {
            return $this->valueHolder5527874b75261815431285->$name;
        }
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b75261815431285;
            $backtrace = debug_backtrace(false);
            trigger_error('Undefined property: ' . get_parent_class($this) . '::$' . $name . ' in ' . $backtrace[0]['file'] . ' on line ' . $backtrace[0]['line'], \E_USER_NOTICE);
            return $targetObject->$name;;
            return;
        }
        $targetObject = $this->valueHolder5527874b75261815431285;
        $accessor = function & () use ($targetObject, $name) {
            return $targetObject->$name;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __set($name, $value)
    {
        $this->initializer5527874b75277970547947 && $this->initializer5527874b75277970547947->__invoke($this->valueHolder5527874b75261815431285, $this, '__set', array('name' => $name, 'value' => $value), $this->initializer5527874b75277970547947);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b75261815431285;
            return $targetObject->$name = $value;;
            return;
        }
        $targetObject = $this->valueHolder5527874b75261815431285;
        $accessor = function & () use ($targetObject, $name, $value) {
            return $targetObject->$name = $value;
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = & $accessor();
        return $returnValue;
    }
    public function __isset($name)
    {
        $this->initializer5527874b75277970547947 && $this->initializer5527874b75277970547947->__invoke($this->valueHolder5527874b75261815431285, $this, '__isset', array('name' => $name), $this->initializer5527874b75277970547947);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b75261815431285;
            return isset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b75261815431285;
        $accessor = function () use ($targetObject, $name) {
            return isset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __unset($name)
    {
        $this->initializer5527874b75277970547947 && $this->initializer5527874b75277970547947->__invoke($this->valueHolder5527874b75261815431285, $this, '__unset', array('name' => $name), $this->initializer5527874b75277970547947);
        $realInstanceReflection = new \ReflectionClass(get_parent_class($this));
        if (! $realInstanceReflection->hasProperty($name)) {
            $targetObject = $this->valueHolder5527874b75261815431285;
            unset($targetObject->$name);;
            return;
        }
        $targetObject = $this->valueHolder5527874b75261815431285;
        $accessor = function () use ($targetObject, $name) {
            unset($targetObject->$name);
        };
            $backtrace = debug_backtrace(true);
            $scopeObject = isset($backtrace[1]['object']) ? $backtrace[1]['object'] : new \stdClass();
            $accessor = $accessor->bindTo($scopeObject, get_class($scopeObject));
        $returnValue = $accessor();
        return $returnValue;
    }
    public function __clone()
    {
        $this->initializer5527874b75277970547947 && $this->initializer5527874b75277970547947->__invoke($this->valueHolder5527874b75261815431285, $this, '__clone', array(), $this->initializer5527874b75277970547947);
        $this->valueHolder5527874b75261815431285 = clone $this->valueHolder5527874b75261815431285;
    }
    public function __sleep()
    {
        $this->initializer5527874b75277970547947 && $this->initializer5527874b75277970547947->__invoke($this->valueHolder5527874b75261815431285, $this, '__sleep', array(), $this->initializer5527874b75277970547947);
        return array('valueHolder5527874b75261815431285');
    }
    public function __wakeup()
    {
    }
    public function setProxyInitializer(\Closure $initializer = null)
    {
        $this->initializer5527874b75277970547947 = $initializer;
    }
    public function getProxyInitializer()
    {
        return $this->initializer5527874b75277970547947;
    }
    public function initializeProxy()
    {
        return $this->initializer5527874b75277970547947 && $this->initializer5527874b75277970547947->__invoke($this->valueHolder5527874b75261815431285, $this, 'initializeProxy', array(), $this->initializer5527874b75277970547947);
    }
    public function isProxyInitialized()
    {
        return null !== $this->valueHolder5527874b75261815431285;
    }
    public function getWrappedValueHolderValue()
    {
        return $this->valueHolder5527874b75261815431285;
    }
}
